name,downloads,description,created_at,updated_at,documentation,homepage,repository,id
rand,149414055,Random number generators and other randomness functionality. ,2015-02-03 06:17:14.147783,2022-02-14 08:37:47.035988,https://docs.rs/rand,https://rust-random.github.io/book,https://github.com/rust-random/rand,1339
syn,147892895,Parser for Rust source code,2016-09-07 15:22:40.491981,2022-09-19 00:19:02.780119,https://docs.rs/syn,,https://github.com/dtolnay/syn,6274
rand_core,140061304,Core random number generator traits and tools for implementation. ,2017-09-14 12:02:18.709038,2022-09-15 13:23:44.54823,https://docs.rs/rand_core,https://rust-random.github.io/book,https://github.com/rust-random/rand,31712
libc,136878114,Raw FFI bindings to platform libraries like libc. ,2015-01-15 20:22:13.100871,2022-09-19 13:11:59.928487,https://docs.rs/libc/,https://github.com/rust-lang/libc,https://github.com/rust-lang/libc,795
cfg-if,136152102,A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structu...,2015-07-08 01:11:24.48504,2020-10-06 18:44:12.67862,https://docs.rs/cfg-if,https://github.com/alexcrichton/cfg-if,https://github.com/alexcrichton/cfg-if,2556
quote,136041556,Quasi-quoting macro quote!(...),2016-09-03 05:42:05.484129,2022-08-03 03:58:22.276607,https://docs.rs/quote/,,https://github.com/dtolnay/quote,6224
proc-macro2,132493175,A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries ...,2017-07-06 01:01:58.064887,2022-09-24 22:10:15.041239,https://docs.rs/proc-macro2,,https://github.com/dtolnay/proc-macro2,22124
unicode-xid,118054758,Determine whether characters have the XID_Start or XID_Continue properties according to Unicode S...,2015-04-27 01:12:08.811826,2022-09-15 17:14:52.826034,https://unicode-rs.github.io/unicode-xid,https://github.com/unicode-rs/unicode-xid,https://github.com/unicode-rs/unicode-xid,1964
serde,114737968,A generic serialization/deserialization framework,2014-12-05 20:20:39.487502,2022-09-22 17:50:37.433846,https://docs.serde.rs/serde/,https://serde.rs,https://github.com/serde-rs/serde,463
autocfg,110901553,Automatic cfg for Rust compiler features,2018-05-30 18:21:35.379916,2022-02-07 23:33:24.468119,,,https://github.com/cuviper/autocfg,67825
bitflags,106760348,A macro to generate structures which behave like bitflags. ,2015-01-15 08:35:24.901276,2021-08-16 04:16:02.68302,https://docs.rs/bitflags,https://github.com/bitflags/bitflags,https://github.com/bitflags/bitflags,793
rand_chacha,105024833,ChaCha random number generator ,2018-10-17 10:08:22.907614,2021-06-09 19:46:38.636012,https://docs.rs/rand_chacha,https://rust-random.github.io/book,https://github.com/rust-random/rand,91129
log,104536261,A lightweight logging facade for Rust ,2014-12-13 22:10:19.94455,2022-05-02 22:41:41.257746,https://docs.rs/log,,https://github.com/rust-lang/log,547
lazy_static,103309693,A macro for declaring lazily evaluated statics in Rust.,2014-11-23 01:18:10.993977,2020-01-13 15:41:59.710811,https://docs.rs/lazy_static,,https://github.com/rust-lang-nursery/lazy-static.rs,363
itoa,102566150,Fast integer primitive to string conversion,2016-06-25 21:50:33.832,2022-08-03 13:52:23.198494,https://docs.rs/itoa,,https://github.com/dtolnay/itoa,5486
getrandom,100404765,A small cross-platform library for retrieving random data from system source,2019-01-19 12:56:49.379182,2022-06-14 00:26:25.306715,https://docs.rs/getrandom,,https://github.com/rust-random/getrandom,109516
serde_derive,97574043,"Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",2016-08-29 05:22:31.552019,2022-09-22 17:50:21.374656,https://serde.rs/derive.html,https://serde.rs,https://github.com/serde-rs/serde,6169
memchr,96445828,Safe interface to memchr.,2015-06-11 23:00:13.079973,2022-04-30 17:29:35.225543,https://docs.rs/memchr/,https://github.com/BurntSushi/memchr,https://github.com/BurntSushi/memchr,2364
time,96408654,Date and time library. Fully interoperable with the standard library. Mostly compatible with #![n...,2014-11-13 06:52:51.369245,2022-08-25 01:49:48.967603,,https://time-rs.github.io,https://github.com/time-rs/time,90
base64,95616117,encodes and decodes base64 as bytes or utf8,2015-12-04 01:07:31.173829,2021-12-14 01:34:01.90155,https://docs.rs/base64,,https://github.com/marshallpierce/rust-base64,3569
serde_json,95508392,A JSON serialization file format,2015-08-07 19:04:18.632088,2022-08-21 21:07:58.660209,https://docs.serde.rs/serde_json/,,https://github.com/serde-rs/json,2782
num-traits,94445520,Numeric traits for generic mathematics,2016-04-14 07:22:34.568594,2022-05-03 03:48:28.121432,https://docs.rs/num-traits,https://github.com/rust-num/num-traits,https://github.com/rust-num/num-traits,4746
regex,92741614,An implementation of regular expressions for Rust. This implementation uses finite automata and g...,2014-12-13 22:10:11.303311,2022-07-05 18:00:33.712885,https://docs.rs/regex,https://github.com/rust-lang/regex,https://github.com/rust-lang/regex,545
smallvec,91428255,'Small vector' optimization: store up to a small number of items on the stack,2015-04-06 06:21:18.472333,2022-06-29 23:03:55.437014,https://docs.rs/smallvec/,,https://github.com/servo/rust-smallvec,1783
regex-syntax,91377512,A regular expression parser.,2015-05-27 23:19:16.839117,2022-07-05 17:59:37.238137,https://docs.rs/regex-syntax,https://github.com/rust-lang/regex,https://github.com/rust-lang/regex,2233
cc,89788029,A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to co...,2014-12-16 05:26:51.306505,2022-02-16 18:53:19.812635,https://docs.rs/cc,https://github.com/alexcrichton/cc-rs,https://github.com/alexcrichton/cc-rs,569
parking_lot_core,88578063,An advanced API for creating custom synchronization primitives.,2016-08-26 23:12:30.588575,2022-04-30 14:54:59.489638,,,https://github.com/Amanieu/parking_lot,6133
version_check,87965577,Tiny crate to check the version of the installed/running rustc.,2017-01-15 08:53:43.890697,2021-12-29 08:44:21.227733,https://docs.rs/version_check/,,https://github.com/SergioBenitez/version_check,8082
parking_lot,87830553,More compact and efficient implementations of the standard synchronization primitives.,2016-05-13 15:57:59.130349,2022-05-31 00:43:56.938626,,,https://github.com/Amanieu/parking_lot,5055
strsim,83233611,"Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levensh...",2015-02-10 02:10:46.832583,2020-01-31 14:44:04.258484,https://docs.rs/strsim/,https://github.com/dguo/strsim-rs,https://github.com/dguo/strsim-rs,1368
ryu,83027731,Fast floating point to string conversion,2018-07-28 17:12:43.329564,2022-08-03 01:19:57.373409,https://docs.rs/ryu,,https://github.com/dtolnay/ryu,76396
aho-corasick,82392127,Fast multiple substring searching.,2015-06-12 01:15:54.846782,2022-09-03 17:30:54.805232,,https://github.com/BurntSushi/aho-corasick,https://github.com/BurntSushi/aho-corasick,2365
semver,81679406,Parser and evaluator for Cargo's flavor of Semantic Versioning,2014-11-11 05:37:08.485853,2022-09-15 05:16:38.540119,https://docs.rs/semver,,https://github.com/dtolnay/semver,7
bytes,81527906,Types and traits for working with bytes,2015-01-30 08:04:59.453916,2022-07-30 09:35:56.148102,,,https://github.com/tokio-rs/bytes,1315
crossbeam-utils,81345958,Utilities for concurrent programming,2017-08-28 12:20:45.154206,2022-07-23 07:02:40.651526,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils,https://github.com/crossbeam-rs/crossbeam,29582
byteorder,78326109,Library for reading/writing numbers in big-endian and little-endian.,2015-02-03 23:28:57.42213,2021-03-10 12:33:39.800965,https://docs.rs/byteorder,https://github.com/BurntSushi/byteorder,https://github.com/BurntSushi/byteorder,1343
generic-array,77564045,Generic types implementing functionality of arrays,2015-09-27 14:13:44.174465,2022-08-02 15:06:49.550946,http://fizyk20.github.io/generic-array/generic_array/,,https://github.com/fizyk20/generic-array.git,3121
lock_api,77551956,Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.,2018-06-08 00:16:14.822518,2022-09-20 15:00:08.807005,,,https://github.com/Amanieu/parking_lot,69133
scopeguard,77434662,"A RAII scope guard that will run a given closure when it goes out of scope, even if the code betw...",2015-04-30 12:04:48.236552,2020-02-16 22:54:35.944711,https://docs.rs/scopeguard/,,https://github.com/bluss/scopeguard,1994
digest,76051166,Traits for cryptographic hash functions,2016-10-06 14:10:33.76349,2022-09-16 01:41:45.666087,https://docs.rs/digest,,https://github.com/RustCrypto/traits,6736
clap,75988059,"A simple to use, efficient, and full-featured Command Line Argument Parser",2015-03-01 01:17:24.903018,2022-09-21 16:35:22.983321,,,https://github.com/clap-rs/clap,1498
once_cell,75352334,Single assignment cells and lazy values.,2018-08-02 00:12:48.969947,2022-09-20 20:20:31.017135,https://docs.rs/once_cell,,https://github.com/matklad/once_cell,77028
atty,74186199,A simple interface for querying atty,2015-07-10 00:25:05.224059,2020-01-05 22:19:33.123499,http://softprops.github.io/atty,https://github.com/softprops/atty,https://github.com/softprops/atty,2572
block-buffer,73967737,Buffer type for block processing of data,2017-06-12 01:07:55.617813,2022-09-04 21:49:24.272643,https://docs.rs/block-buffer,,https://github.com/RustCrypto/utils,18632
num_cpus,73841285,Get the number of CPUs on a machine.,2015-03-16 18:43:53.862639,2021-12-20 19:37:04.378614,https://docs.rs/num_cpus,,https://github.com/seanmonstar/num_cpus,1592
hashbrown,72979520,A Rust port of Google's SwissTable hash map,2018-10-29 14:28:15.767024,2022-07-17 11:20:38.243573,,,https://github.com/rust-lang/hashbrown,93342
num-integer,71503531,Integer traits and functions,2016-04-14 07:26:07.694449,2022-04-29 23:30:49.810661,https://docs.rs/num-integer,https://github.com/rust-num/num-integer,https://github.com/rust-num/num-integer,4747
textwrap,71435542,"Library for word wrapping, indenting, and dedenting strings. Has optional support for Unicode and...",2016-12-17 01:34:45.436054,2022-09-15 21:46:49.867798,https://docs.rs/textwrap/,,https://github.com/mgeisler/textwrap,7649
percent-encoding,70640816,Percent encoding and decoding,2017-06-13 17:02:11.044209,2022-09-08 07:48:28.868254,,,https://github.com/servo/rust-url/,18850
url,70603189,"URL library for Rust, based on the WHATWG URL Standard",2014-11-14 18:37:08.658193,2022-09-08 07:55:49.105213,https://docs.rs/url,,https://github.com/servo/rust-url,109
mio,70393956,Lightweight non-blocking IO,2014-11-11 23:52:39.666778,2022-06-19 17:11:02.364454,,https://github.com/tokio-rs/mio,https://github.com/tokio-rs/mio,62
ansi_term,69682758,"Library for ANSI terminal colours and styles (bold, underline)",2014-11-26 00:50:42.101172,2019-09-02 10:16:04.908577,https://docs.rs/ansi_term,https://github.com/ogham/rust-ansi-term,https://github.com/ogham/rust-ansi-term,399
idna,68911409,IDNA (Internationalizing Domain Names in Applications) and Punycode.,2016-03-27 08:55:20.657552,2022-09-08 07:54:22.951729,,,https://github.com/servo/rust-url/,4577
indexmap,68675674,A hash table with consistent order and fast iteration.,2018-01-30 17:59:48.053105,2022-06-21 18:03:56.663563,https://docs.rs/indexmap/,,https://github.com/bluss/indexmap,48918
ppv-lite86,68269947,Implementation of the crypto-simd API for x86,2019-02-01 22:36:06.869586,2021-12-30 18:23:27.579193,,,https://github.com/cryptocorrosion/cryptocorrosion,112081
pin-project-lite,68194592,A lightweight version of pin-project written with declarative macros. ,2019-10-22 15:30:45.981586,2022-04-26 13:35:30.385333,,,https://github.com/taiki-e/pin-project-lite,174693
unicode-width,67687065,Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules. ,2015-04-14 19:29:07.865266,2022-09-13 20:19:01.596291,https://unicode-rs.github.io/unicode-width,https://github.com/unicode-rs/unicode-width,https://github.com/unicode-rs/unicode-width,1869
either,67386159,The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases. ,2015-09-14 22:12:31.900654,2022-08-17 18:14:18.788046,https://docs.rs/either/1/,,https://github.com/bluss/either,3048
tokio,67293268,"An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications. ",2016-07-01 20:39:07.497766,2022-09-13 11:06:14.164574,,https://tokio.rs,https://github.com/tokio-rs/tokio,5563
itertools,66296857,"Extra iterator adaptors, iterator methods, free functions, and macros.",2014-11-21 19:56:41.399795,2022-09-20 14:32:39.012902,https://docs.rs/itertools/,,https://github.com/rust-itertools/itertools,314
slab,64067695,Pre-allocated storage for a uniform data type,2015-06-15 20:47:25.571674,2022-07-19 12:50:51.945503,,,https://github.com/tokio-rs/slab,2392
futures,63795733,"An implementation of futures and streams featuring zero allocations, composability, and iterator-...",2016-07-31 20:58:03.676528,2022-08-29 13:41:52.651246,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,5848
unicode-normalization,62148898,"This crate provides functions for normalization of Unicode strings, including Canonical and Compa...",2015-04-15 01:55:51.148249,2022-09-16 15:37:14.410882,https://docs.rs/unicode-normalization/,https://github.com/unicode-rs/unicode-normalization,https://github.com/unicode-rs/unicode-normalization,1873
rustc_version,61809134,A library for querying the version of a installed rustc compiler,2015-08-24 00:54:04.57939,2021-06-07 07:47:08.710119,https://docs.rs/rustc_version/,,https://github.com/Kimundi/rustc-version-rs,2906
chrono,61653923,Date and time library for Rust,2014-11-20 04:21:11.545166,2022-08-13 13:35:28.782126,https://docs.rs/chrono/,https://github.com/chronotope/chrono,https://github.com/chronotope/chrono,120
memoffset,60444192,offset_of functionality for Rust structs.,2017-10-17 06:16:56.082296,2021-12-03 16:28:44.53392,,,https://github.com/Gilnaa/memoffset,35941
fnv,60358516,Fowler–Noll–Vo hash function,2015-04-06 18:59:35.782519,2020-05-14 16:06:29.223002,https://doc.servo.org/fnv/,,https://github.com/servo/rust-fnv,1788
env_logger,59668579,A logging implementation for `log` which is configured via an environment variable. ,2015-01-27 15:33:08.586936,2022-09-17 18:17:46.331036,https://docs.rs/env_logger,,https://github.com/env-logger-rs/env_logger/,1306
typenum,59506490,Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supp...,2015-09-26 03:09:06.865219,2021-12-26 06:42:14.376489,https://docs.rs/typenum,,https://github.com/paholg/typenum,3111
unicode-bidi,59494937,Implementation of the Unicode Bidirectional Algorithm,2015-06-11 18:06:04.414255,2022-04-26 15:41:49.464878,https://docs.rs/unicode-bidi/,,https://github.com/servo/unicode-bidi,2361
heck,59196845,heck is a case conversion library.,2017-03-27 11:22:23.06719,2021-12-09 17:52:40.843397,https://docs.rs/heck,https://github.com/withoutboats/heck,https://github.com/withoutboats/heck,9167
pkg-config,59138816,A library to run the pkg-config system tool at build time in order to be used in Cargo build scri...,2014-11-11 06:37:31.276162,2022-03-31 07:47:46.792193,https://docs.rs/pkg-config,,https://github.com/rust-lang/pkg-config-rs,34
winapi,58897976,Raw FFI bindings for all of Windows API.,2014-11-29 13:35:24.366255,2020-06-26 11:34:33.480855,https://docs.rs/winapi/,,https://github.com/retep998/winapi-rs,429
matches,58800597,"A macro to evaluate, as a boolean, whether an expression matches a pattern.",2014-12-04 18:37:50.953491,2021-08-12 18:08:14.338081,https://docs.rs/matches/,,https://github.com/SimonSapin/rust-std-candidates,456
hyper,58453335,A fast and correct HTTP library.,2014-11-22 04:05:30.45951,2022-07-07 21:33:09.265432,https://docs.rs/hyper,https://hyper.rs,https://github.com/hyperium/hyper,327
crossbeam-epoch,58224327,Epoch-based garbage collection,2017-11-26 17:32:53.106278,2022-07-23 07:02:51.113007,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch,https://github.com/crossbeam-rs/crossbeam,40618
miniz_oxide,58018553,DEFLATE compression and decompression library rewritten in Rust based on miniz,2017-10-10 19:08:01.549072,2022-09-04 16:20:24.796094,https://docs.rs/miniz_oxide,https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide,https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide,35141
thread_local,57668020,Per-object thread-local storage,2016-04-08 07:42:40.999679,2022-01-24 01:26:53.959262,https://docs.rs/thread_local/,,https://github.com/Amanieu/thread_local-rs,4697
thiserror,56069350,derive(Error),2019-10-09 18:05:40.346377,2022-09-13 18:56:49.880053,https://docs.rs/thiserror,,https://github.com/dtolnay/thiserror,171267
thiserror-impl,56064781,Implementation detail of the `thiserror` crate,2019-10-09 18:05:26.708915,2022-09-13 18:56:34.620363,,,https://github.com/dtolnay/thiserror,171266
termcolor,55788987,A simple cross platform library for writing colored text to a terminal. ,2016-11-20 20:45:01.476057,2022-03-02 15:43:10.441102,https://docs.rs/termcolor,https://github.com/BurntSushi/termcolor,https://github.com/BurntSushi/termcolor,7317
toml,55679130,A native Rust encoder and decoder of TOML-formatted files and streams. Provides implementations o...,2014-11-11 05:37:45.901317,2022-04-14 23:57:47.736786,https://docs.rs/toml,https://github.com/alexcrichton/toml-rs,https://github.com/alexcrichton/toml-rs,11
opaque-debug,55628394,Macro for opaque Debug trait implementation,2017-11-26 15:55:55.619753,2020-06-11 14:26:41.185386,https://docs.rs/opaque-debug,,https://github.com/RustCrypto/utils,40574
anyhow,55139381,Flexible concrete Error type built on std::error::Error,2019-10-05 19:52:26.646502,2022-09-13 18:53:20.926744,https://docs.rs/anyhow,,https://github.com/dtolnay/anyhow,170198
futures-core,54991791,The core traits and types in for the `futures` library. ,2018-03-05 22:32:59.053938,2022-08-29 13:35:06.371021,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54007
socket2,54908470,Utilities for handling networking sockets with a maximal amount of configuration possible intended. ,2017-06-07 18:05:03.996775,2022-08-31 16:15:14.945825,https://docs.rs/socket2,https://github.com/rust-lang/socket2,https://github.com/rust-lang/socket2,18126
crossbeam-channel,54732080,Multi-producer multi-consumer channels for message passing,2017-11-26 19:20:24.266475,2022-07-23 07:03:03.922516,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel,https://github.com/crossbeam-rs/crossbeam,40643
arrayvec,54687601,"A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements ...",2015-05-19 15:27:57.651929,2021-10-28 16:55:00.851624,https://docs.rs/arrayvec/,,https://github.com/bluss/arrayvec,2147
futures-util,53234695,Common utilities and extension traits for the futures-rs library. ,2018-03-05 22:42:24.332661,2022-08-29 13:40:04.978883,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54020
http,53151910,A set of types for representing HTTP requests and responses. ,2014-11-20 23:30:38.809367,2022-06-06 22:07:00.715863,https://docs.rs/http,,https://github.com/hyperium/http,184
futures-task,53134361,Tools for working with tasks. ,2019-07-29 02:21:47.224744,2022-08-29 13:37:30.247291,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,152488
tokio-util,52625978,Additional utilities for working with Tokio. ,2018-02-01 03:25:03.010037,2022-09-08 08:35:14.062411,,https://tokio.rs,https://github.com/tokio-rs/tokio,49101
futures-channel,52529007,Channels for asynchronous communication using futures-rs. ,2018-03-05 22:36:02.312563,2022-08-29 13:38:18.985949,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54009
futures-sink,52369311,The asynchronous `Sink` trait for the futures-rs library. ,2018-03-05 22:41:47.740444,2022-08-29 13:36:41.945691,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54019
unicode-segmentation,51369938,"This crate provides Grapheme Cluster, Word and Sentence boundaries according to Unicode Standard ...",2015-04-14 23:28:47.67394,2022-09-13 20:21:13.729557,https://unicode-rs.github.io/unicode-segmentation,https://github.com/unicode-rs/unicode-segmentation,https://github.com/unicode-rs/unicode-segmentation,1872
crossbeam-deque,51282557,Concurrent work-stealing deque,2017-11-26 18:02:02.212875,2022-07-23 07:02:58.042882,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-deque,https://github.com/crossbeam-rs/crossbeam,40627
nom,51156447,"A byte-oriented, zero-copy, parser combinators library",2015-01-17 17:47:52.413792,2022-03-14 22:37:50.742464,https://docs.rs/nom,,https://github.com/Geal/nom,805
httparse,51020472,"A tiny, safe, speedy, zero-copy HTTP/1.x parser.",2015-02-20 18:34:43.44873,2022-08-30 21:49:42.92302,https://docs.rs/httparse,,https://github.com/seanmonstar/httparse,1432
h2,50680049,An HTTP/2 client and server,2017-03-09 22:02:00.510015,2022-08-16 22:30:45.383145,https://docs.rs/h2,,https://github.com/hyperium/h2,8906
vec_map,50587632,A simple map based on a vector for small integer keys,2015-05-04 02:11:35.894139,2020-05-06 13:38:10.140555,https://contain-rs.github.io/vec-map/vec_map,https://github.com/contain-rs/vec-map,https://github.com/contain-rs/vec-map,2016
