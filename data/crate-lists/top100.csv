name,downloads,description,created_at,updated_at,documentation,homepage,repository,id
syn,1096229139,Parser for Rust source code,2016-09-07 15:22:40.491981+00,2025-08-16 00:34:01.909482+00,https://docs.rs/syn,,https://github.com/dtolnay/syn,6274
hashbrown,869905270,A Rust port of Google's SwissTable hash map,2018-10-29 14:28:15.767024+00,2025-08-29 11:55:49.044943+00,,,https://github.com/rust-lang/hashbrown,93342
bitflags,812882279,A macro to generate structures which behave like bitflags. ,2015-01-15 08:35:24.901276+00,2025-09-02 06:12:03.750699+00,https://docs.rs/bitflags,https://github.com/bitflags/bitflags,https://github.com/bitflags/bitflags,793
proc-macro2,756912885,A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries ...,2017-07-06 01:01:58.064887+00,2025-08-16 20:10:39.182331+00,https://docs.rs/proc-macro2,,https://github.com/dtolnay/proc-macro2,22124
quote,738759223,Quasi-quoting macro quote!(...),2016-09-03 05:42:05.484129+00,2025-09-29 01:09:34.45789+00,https://docs.rs/quote/,,https://github.com/dtolnay/quote,6224
base64,736585750,encodes and decodes base64 as bytes or utf8,2015-12-04 01:07:31.173829+00,2024-04-30 23:16:40.343739+00,https://docs.rs/base64,,https://github.com/marshallpierce/rust-base64,3569
libc,733722558,Raw FFI bindings to platform libraries like libc.,2015-01-15 20:22:13.100871+00,2025-09-23 11:00:57.646812+00,,,https://github.com/rust-lang/libc,795
rand_core,707866154,Core random number generator traits and tools for implementation. ,2017-09-14 12:02:18.709038+00,2025-03-01 14:01:08.459817+00,https://docs.rs/rand_core,https://rust-random.github.io/book,https://github.com/rust-random/rand,31712
regex-syntax,704295926,A regular expression parser.,2015-05-27 23:19:16.839117+00,2025-08-24 13:39:55.267706+00,https://docs.rs/regex-syntax,https://github.com/rust-lang/regex/tree/master/regex-syntax,https://github.com/rust-lang/regex,2233
rand,692557936,Random number generators and other randomness functionality. ,2015-02-03 06:17:14.147783+00,2025-09-11 07:11:18.682315+00,https://docs.rs/rand,https://rust-random.github.io/book,https://github.com/rust-random/rand,1339
getrandom,687929523,A small cross-platform library for retrieving random data from system source,2019-01-19 12:56:49.379182+00,2025-05-09 09:58:14.182579+00,https://docs.rs/getrandom,,https://github.com/rust-random/getrandom,109516
serde,657311133,A generic serialization/deserialization framework,2014-12-05 20:20:39.487502+00,2025-09-27 16:51:35.265429+00,https://docs.rs/serde,https://serde.rs,https://github.com/serde-rs/serde,463
cfg-if,657064041,A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structu...,2015-07-08 01:11:24.48504+00,2025-08-19 19:33:21.150447+00,,,https://github.com/rust-lang/cfg-if,2556
indexmap,653266096,A hash table with consistent order and fast iteration.,2018-01-30 17:59:48.053105+00,2025-09-18 17:01:44.859008+00,https://docs.rs/indexmap/,,https://github.com/indexmap-rs/indexmap,48918
itertools,646848245,"Extra iterator adaptors, iterator methods, free functions, and macros.",2014-11-21 19:56:41.399795+00,2024-12-31 12:32:06.925445+00,https://docs.rs/itertools/,,https://github.com/rust-itertools/itertools,314
autocfg,609315561,Automatic cfg for Rust compiler features,2018-05-30 18:21:35.379916+00,2025-06-17 22:16:28.597704+00,https://docs.rs/autocfg/,,https://github.com/cuviper/autocfg,67825
serde_derive,604470935,"Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",2016-08-29 05:22:31.552019+00,2025-09-27 16:51:16.528484+00,https://serde.rs/derive.html,https://serde.rs,https://github.com/serde-rs/serde,6169
itoa,597840075,Fast integer primitive to string conversion,2016-06-25 21:50:33.832+00,2025-03-03 23:42:45.916886+00,https://docs.rs/itoa,,https://github.com/dtolnay/itoa,5486
memchr,597204566,"Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte sea...",2015-06-11 23:00:13.079973+00,2025-09-25 12:47:49.866757+00,https://docs.rs/memchr/,https://github.com/BurntSushi/memchr,https://github.com/BurntSushi/memchr,2364
rand_chacha,588216699,ChaCha random number generator ,2018-10-17 10:08:22.907614+00,2025-01-27 13:38:26.609781+00,https://docs.rs/rand_chacha,https://rust-random.github.io/book,https://github.com/rust-random/rand,91129
serde_json,577584598,A JSON serialization file format,2015-08-07 19:04:18.632088+00,2025-09-14 15:56:02.673791+00,https://docs.rs/serde_json,,https://github.com/serde-rs/json,2782
once_cell,569824502,Single assignment cells and lazy values.,2018-08-02 00:12:48.969947+00,2025-03-28 17:15:56.184274+00,https://docs.rs/once_cell,,https://github.com/matklad/once_cell,77028
log,567216429,A lightweight logging facade for Rust ,2014-12-13 22:10:19.94455+00,2025-09-03 20:08:08.331304+00,https://docs.rs/log,,https://github.com/rust-lang/log,547
regex-automata,566127907,Automata construction and matching using regular expressions.,2019-01-02 22:11:41.647566+00,2025-09-25 12:05:56.881342+00,https://docs.rs/regex-automata,https://github.com/rust-lang/regex/tree/master/regex-automata,https://github.com/rust-lang/regex,105119
unicode-ident,565344012,Determine whether characters have the XID_Start or XID_Continue properties according to Unicode S...,2021-10-02 05:15:24.656394+00,2025-09-10 03:08:21.638312+00,https://docs.rs/unicode-ident,,https://github.com/dtolnay/unicode-ident,459332
heck,564232215,heck is a case conversion library.,2017-03-27 11:22:23.06719+00,2024-03-12 22:42:23.303234+00,,,https://github.com/withoutboats/heck,9167
thiserror-impl,562917341,Implementation detail of the `thiserror` crate,2019-10-09 18:05:26.708915+00,2025-09-28 23:26:49.86948+00,,,https://github.com/dtolnay/thiserror,171266
thiserror,562871490,derive(Error),2019-10-09 18:05:40.346377+00,2025-09-28 23:26:56.561733+00,https://docs.rs/thiserror,,https://github.com/dtolnay/thiserror,171267
regex,541640185,An implementation of regular expressions for Rust. This implementation uses finite automata and g...,2014-12-13 22:10:11.303311+00,2025-09-25 12:07:35.796854+00,https://docs.rs/regex,https://github.com/rust-lang/regex,https://github.com/rust-lang/regex,545
ryu,539816484,Fast floating point to string conversion,2018-07-28 17:12:43.329564+00,2025-03-04 00:13:50.644407+00,https://docs.rs/ryu,,https://github.com/dtolnay/ryu,76396
cc,538106117,A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to co...,2014-12-16 05:26:51.306505+00,2025-09-26 08:07:55.015031+00,https://docs.rs/cc,https://github.com/rust-lang/cc-rs,https://github.com/rust-lang/cc-rs,569
aho-corasick,531557974,Fast multiple substring searching.,2015-06-12 01:15:54.846782+00,2024-03-20 00:06:10.886998+00,,https://github.com/BurntSushi/aho-corasick,https://github.com/BurntSushi/aho-corasick,2365
clap,527015665,"A simple to use, efficient, and full-featured Command Line Argument Parser",2015-03-01 01:17:24.903018+00,2025-09-19 20:59:44.727379+00,,,https://github.com/clap-rs/clap,1498
smallvec,523535885,'Small vector' optimization: store up to a small number of items on the stack,2015-04-06 06:21:18.472333+00,2025-06-06 17:14:20.169448+00,https://docs.rs/smallvec/,,https://github.com/servo/rust-smallvec,1783
parking_lot_core,519191638,An advanced API for creating custom synchronization primitives.,2016-08-26 23:12:30.588575+00,2025-05-29 18:34:41.189352+00,,,https://github.com/Amanieu/parking_lot,6133
strsim,504754565,"Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levensh...",2015-02-10 02:10:46.832583+00,2024-04-02 22:18:09.40679+00,https://docs.rs/strsim/,https://github.com/rapidfuzz/strsim-rs,https://github.com/rapidfuzz/strsim-rs,1368
parking_lot,500926577,More compact and efficient implementations of the standard synchronization primitives.,2016-05-13 15:57:59.130349+00,2025-05-29 18:34:48.077268+00,,,https://github.com/Amanieu/parking_lot,5055
lazy_static,496208353,A macro for declaring lazily evaluated statics in Rust.,2014-11-23 01:18:10.993977+00,2024-06-21 22:48:42.440092+00,https://docs.rs/lazy_static,,https://github.com/rust-lang-nursery/lazy-static.rs,363
num-traits,486437350,Numeric traits for generic mathematics,2016-04-14 07:22:34.568594+00,2024-05-03 21:27:39.856244+00,https://docs.rs/num-traits,https://github.com/rust-num/num-traits,https://github.com/rust-num/num-traits,4746
socket2,468181461,Utilities for handling networking sockets with a maximal amount of configuration possible intended. ,2017-06-07 18:05:03.996775+00,2025-07-05 09:05:39.127086+00,https://docs.rs/socket2,https://github.com/rust-lang/socket2,https://github.com/rust-lang/socket2,18126
version_check,461053755,Tiny crate to check the version of the installed/running rustc.,2017-01-15 08:53:43.890697+00,2024-07-25 23:38:14.142737+00,https://docs.rs/version_check/,,https://github.com/SergioBenitez/version_check,8082
semver,460291150,Parser and evaluator for Cargo's flavor of Semantic Versioning,2014-11-11 05:37:08.485853+00,2025-09-14 17:16:31.572518+00,https://docs.rs/semver,,https://github.com/dtolnay/semver,7
either,460196753,The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases. ,2015-09-14 22:12:31.900654+00,2025-03-05 21:36:27.950711+00,https://docs.rs/either/1/,,https://github.com/rayon-rs/either,3048
idna,456737981,IDNA (Internationalizing Domain Names in Applications) and Punycode.,2016-03-27 08:55:20.657552+00,2025-08-21 08:48:20.326736+00,,,https://github.com/servo/rust-url/,4577
windows-sys,451260465,Rust for Windows,2021-10-18 14:47:07.495906+00,2025-09-25 18:09:26.428973+00,,,https://github.com/microsoft/windows-rs,466814
time,448542588,Date and time library. Fully interoperable with the standard library. Mostly compatible with #![n...,2014-11-13 06:52:51.369245+00,2025-09-19 08:18:09.564305+00,,https://time-rs.github.io,https://github.com/time-rs/time,90
rustix,448524475,Safe Rust bindings to POSIX/Unix/Linux/Winsock-like syscalls,2021-10-29 10:44:45.767768+00,2025-09-09 15:50:02.311921+00,https://docs.rs/rustix,,https://github.com/bytecodealliance/rustix,473904
bytes,446156403,Types and traits for working with bytes,2015-01-30 08:04:59.453916+00,2025-03-05 12:12:14.708277+00,,,https://github.com/tokio-rs/bytes,1315
lock_api,443841188,Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.,2018-06-08 00:16:14.822518+00,2025-05-29 18:34:32.254286+00,,,https://github.com/Amanieu/parking_lot,69133
digest,442286699,Traits for cryptographic hash functions and message authentication codes,2016-10-06 14:10:33.76349+00,2025-09-29 18:51:33.449402+00,https://docs.rs/digest,,https://github.com/RustCrypto/traits,6736
scopeguard,435235712,"A RAII scope guard that will run a given closure when it goes out of scope, even if the code betw...",2015-04-30 12:04:48.236552+00,2023-07-17 13:47:53.232324+00,https://docs.rs/scopeguard/,,https://github.com/bluss/scopeguard,1994
pin-project-lite,433320949,A lightweight version of pin-project written with declarative macros. ,2019-10-22 15:30:45.981586+00,2025-01-06 12:20:51.767173+00,,,https://github.com/taiki-e/pin-project-lite,174693
block-buffer,429440563,Buffer type for block processing of data,2017-06-12 01:07:55.617813+00,2025-09-02 18:31:57.95453+00,https://docs.rs/block-buffer,,https://github.com/RustCrypto/utils,18632
mio,428884292,Lightweight non-blocking I/O.,2014-11-11 23:52:39.666778+00,2025-05-24 14:44:14.874702+00,,https://github.com/tokio-rs/mio,https://github.com/tokio-rs/mio,62
miniz_oxide,426202260,DEFLATE compression and decompression library rewritten in Rust based on miniz,2017-10-10 19:08:01.549072+00,2025-06-09 22:26:12.218895+00,https://docs.rs/miniz_oxide,https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide,https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide,35141
crossbeam-utils,422972128,Utilities for concurrent programming,2017-08-28 12:20:45.154206+00,2024-12-15 15:26:01.019842+00,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils,https://github.com/crossbeam-rs/crossbeam,29582
anyhow,422078915,Flexible concrete Error type built on std::error::Error,2019-10-05 19:52:26.646502+00,2025-09-19 14:21:43.692151+00,https://docs.rs/anyhow,,https://github.com/dtolnay/anyhow,170198
http,417390006,A set of types for representing HTTP requests and responses. ,2014-11-20 23:30:38.809367+00,2025-03-11 20:19:56.370499+00,https://docs.rs/http,,https://github.com/hyperium/http,184
ppv-lite86,414995207,Cross-platform cryptography-oriented low-level SIMD library.,2019-02-01 22:36:06.869586+00,2025-03-09 20:01:40.419162+00,,,https://github.com/cryptocorrosion/cryptocorrosion,112081
linux-raw-sys,411638600,Generated bindings for Linux's userspace API,2021-06-12 14:38:40.00565+00,2025-09-09 01:39:23.798581+00,https://docs.rs/linux-raw-sys,,https://github.com/sunfishcode/linux-raw-sys,409357
tokio,408628812,"An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications. ",2016-07-01 20:39:07.497766+00,2025-08-01 11:24:00.896293+00,,https://tokio.rs,https://github.com/tokio-rs/tokio,5563
windows_x86_64_msvc,406861398,Import lib for Windows,2021-10-27 15:17:55.755278+00,2025-01-07 15:43:03.422486+00,,,https://github.com/microsoft/windows-rs,473110
percent-encoding,400880877,Percent encoding and decoding,2017-06-13 17:02:11.044209+00,2025-08-21 08:46:50.131801+00,,,https://github.com/servo/rust-url/,18850
fastrand,399488454,A simple and fast random number generator,2020-05-27 16:21:53.648642+00,2024-12-08 16:27:29.613896+00,,,https://github.com/smol-rs/fastrand,246734
hyper,399057340,A protective and efficient HTTP library for all.,2014-11-22 04:05:30.45951+00,2025-08-18 13:53:21.388759+00,https://docs.rs/hyper,https://hyper.rs,https://github.com/hyperium/hyper,327
memoffset,398842325,offset_of functionality for Rust structs.,2017-10-17 06:16:56.082296+00,2024-03-26 19:58:31.849513+00,,,https://github.com/Gilnaa/memoffset,35941
byteorder,393932172,Library for reading/writing numbers in big-endian and little-endian.,2015-02-03 23:28:57.42213+00,2023-10-06 00:45:57.877036+00,https://docs.rs/byteorder,https://github.com/BurntSushi/byteorder,https://github.com/BurntSushi/byteorder,1343
url,392935457,"URL library for Rust, based on the WHATWG URL Standard",2014-11-14 18:37:08.658193+00,2025-08-23 12:41:43.315569+00,https://docs.rs/url,,https://github.com/servo/rust-url,109
toml,389155161,A native Rust encoder and decoder of TOML-formatted files and streams. Provides implementations o...,2014-11-11 05:37:45.901317+00,2025-09-18 19:05:39.826821+00,,,https://github.com/toml-rs/toml,11
windows_x86_64_gnu,387297698,Import lib for Windows,2021-10-28 19:27:32.276769+00,2025-01-07 15:42:54.444046+00,,,https://github.com/microsoft/windows-rs,473671
generic-array,386661475,Generic types implementing functionality of arrays,2015-09-27 14:13:44.174465+00,2025-01-12 17:58:19.615534+00,https://fizyk20.github.io/generic-array/generic_array/,,https://github.com/fizyk20/generic-array.git,3121
slab,383887582,Pre-allocated storage for a uniform data type,2015-06-15 20:47:25.571674+00,2025-08-08 07:40:58.273018+00,,,https://github.com/tokio-rs/slab,2392
windows_i686_msvc,383545646,Import lib for Windows,2021-10-27 15:17:41.977374+00,2025-01-07 15:42:50.460248+00,,,https://github.com/microsoft/windows-rs,473109
windows_aarch64_msvc,383243167,Import lib for Windows,2021-11-05 19:17:58.112695+00,2025-01-07 15:42:38.305221+00,,,https://github.com/microsoft/windows-rs,477460
windows_i686_gnu,382343845,Import lib for Windows,2021-10-28 19:27:12.591562+00,2025-01-07 15:42:42.282152+00,,,https://github.com/microsoft/windows-rs,473669
futures-core,380479786,The core traits and types in for the `futures` library. ,2018-03-05 22:32:59.053938+00,2024-10-05 07:06:47.233193+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54007
rustls,378097820,Rustls is a modern TLS library written in Rust.,2016-08-27 06:58:30.801463+00,2025-09-19 11:40:05.538388+00,,https://github.com/rustls/rustls,https://github.com/rustls/rustls,6137
ahash,373417361,A non-cryptographic hash function using AES-NI for high performance,2019-02-28 06:58:45.540196+00,2025-05-08 05:05:32.999746+00,https://docs.rs/ahash,,https://github.com/tkaitchuck/ahash,117734
futures-util,372714315,Common utilities and extension traits for the futures-rs library. ,2018-03-05 22:42:24.332661+00,2024-10-05 07:07:27.303135+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54020
futures-task,372129720,Tools for working with tasks. ,2019-07-29 02:21:47.224744+00,2024-10-05 07:07:01.495599+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,152488
sha2,369139290,"Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, a...",2016-05-06 20:20:25.502104+00,2025-09-02 23:08:02.228378+00,https://docs.rs/sha2,,https://github.com/RustCrypto/hashes,4991
fnv,368727788,Fowler–Noll–Vo hash function,2015-04-06 18:59:35.782519+00,2020-05-14 16:06:29.223002+00,https://doc.servo.org/fnv/,,https://github.com/servo/rust-fnv,1788
http-body,368503489,"Trait representing an asynchronous, streaming, HTTP request or response body. ",2019-04-04 18:06:00.061574+00,2024-07-12 15:49:01.533452+00,https://docs.rs/http-body,,https://github.com/hyperium/http-body,125857
tracing-core,367533400,Core primitives for application-level tracing. ,2019-06-20 17:36:00.464363+00,2025-06-06 10:08:58.582602+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,142370
chrono,366381653,Date and time library for Rust,2014-11-20 04:21:11.545166+00,2025-09-08 08:59:32.995886+00,https://docs.rs/chrono/,https://github.com/chronotope/chrono,https://github.com/chronotope/chrono,120
futures-sink,366239333,The asynchronous `Sink` trait for the futures-rs library. ,2018-03-05 22:41:47.740444+00,2024-10-05 07:06:58.039843+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54019
windows-targets,364875409,Import libs for Windows,2022-09-09 14:29:19.927693+00,2025-09-25 18:09:05.432142+00,,,https://github.com/microsoft/windows-rs,661906
tracing,363354393,Application-level tracing for Rust. ,2017-11-27 18:43:02.901436+00,2024-11-27 17:13:14.607037+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,40771
typenum,363262487,Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supp...,2015-09-26 03:09:06.865219+00,2025-10-02 06:13:48.051754+00,https://docs.rs/typenum,,https://github.com/paholg/typenum,3111
futures-channel,363000929,Channels for asynchronous communication using futures-rs. ,2018-03-05 22:36:02.312563+00,2024-10-05 07:07:06.660085+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54009
h2,362569195,An HTTP/2 client and server,2017-03-09 22:02:00.510015+00,2025-08-06 15:26:52.276441+00,https://docs.rs/h2,,https://github.com/hyperium/h2,8906
unicode-width,357277193,Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules. ,2015-04-14 19:29:07.865266+00,2025-06-09 22:20:35.450739+00,,https://github.com/unicode-rs/unicode-width,https://github.com/unicode-rs/unicode-width,1869
tempfile,354865718,A library for managing temporary files and directories.,2015-04-14 18:26:06.249019+00,2025-09-23 05:32:33.826527+00,https://docs.rs/tempfile,https://stebalien.com/projects/tempfile-rs/,https://github.com/Stebalien/tempfile,1867
pin-utils,353132472,Utilities for pinning ,2018-08-06 15:00:31.609789+00,2020-04-22 16:13:27.095776+00,https://docs.rs/pin-utils,,https://github.com/rust-lang-nursery/pin-utils,77760
tokio-util,352188379,Additional utilities for working with Tokio. ,2018-02-01 03:25:03.010037+00,2025-08-03 09:14:02.639765+00,,https://tokio.rs,https://github.com/tokio-rs/tokio,49101
uuid,349948829,A library to generate and parse UUIDs.,2014-11-11 05:37:37.261193+00,2025-09-02 06:11:41.210851+00,https://docs.rs/uuid,https://github.com/uuid-rs/uuid,https://github.com/uuid-rs/uuid,10
clap_lex,349493294,"Minimal, flexible command line parser",2022-04-15 19:08:14.98876+00,2025-06-09 18:09:36.745507+00,,,https://github.com/clap-rs/clap,568652
windows_x86_64_gnullvm,348488254,Import lib for Windows,2022-09-01 21:01:36.169638+00,2025-01-07 15:42:58.35725+00,,,https://github.com/microsoft/windows-rs,657025
windows_aarch64_gnullvm,348481739,Import lib for Windows,2022-09-01 20:55:47.169004+00,2025-01-07 15:42:32.178766+00,,,https://github.com/microsoft/windows-rs,657016
futures,347687965,"An implementation of futures and streams featuring zero allocations, composability, and iterator-...",2016-07-31 20:58:03.676528+00,2024-10-05 07:07:45.246157+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,5848
