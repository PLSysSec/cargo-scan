name,downloads,description,created_at,updated_at,documentation,homepage,repository,id
syn,1096229139,Parser for Rust source code,2016-09-07 15:22:40.491981+00,2025-08-16 00:34:01.909482+00,https://docs.rs/syn,,https://github.com/dtolnay/syn,6274
hashbrown,869905270,A Rust port of Google's SwissTable hash map,2018-10-29 14:28:15.767024+00,2025-08-29 11:55:49.044943+00,,,https://github.com/rust-lang/hashbrown,93342
bitflags,812882279,A macro to generate structures which behave like bitflags. ,2015-01-15 08:35:24.901276+00,2025-09-02 06:12:03.750699+00,https://docs.rs/bitflags,https://github.com/bitflags/bitflags,https://github.com/bitflags/bitflags,793
proc-macro2,756912885,A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries ...,2017-07-06 01:01:58.064887+00,2025-08-16 20:10:39.182331+00,https://docs.rs/proc-macro2,,https://github.com/dtolnay/proc-macro2,22124
quote,738759223,Quasi-quoting macro quote!(...),2016-09-03 05:42:05.484129+00,2025-09-29 01:09:34.45789+00,https://docs.rs/quote/,,https://github.com/dtolnay/quote,6224
base64,736585750,encodes and decodes base64 as bytes or utf8,2015-12-04 01:07:31.173829+00,2024-04-30 23:16:40.343739+00,https://docs.rs/base64,,https://github.com/marshallpierce/rust-base64,3569
libc,733722558,Raw FFI bindings to platform libraries like libc.,2015-01-15 20:22:13.100871+00,2025-09-23 11:00:57.646812+00,,,https://github.com/rust-lang/libc,795
rand_core,707866154,Core random number generator traits and tools for implementation. ,2017-09-14 12:02:18.709038+00,2025-03-01 14:01:08.459817+00,https://docs.rs/rand_core,https://rust-random.github.io/book,https://github.com/rust-random/rand,31712
regex-syntax,704295926,A regular expression parser.,2015-05-27 23:19:16.839117+00,2025-08-24 13:39:55.267706+00,https://docs.rs/regex-syntax,https://github.com/rust-lang/regex/tree/master/regex-syntax,https://github.com/rust-lang/regex,2233
rand,692557936,Random number generators and other randomness functionality. ,2015-02-03 06:17:14.147783+00,2025-09-11 07:11:18.682315+00,https://docs.rs/rand,https://rust-random.github.io/book,https://github.com/rust-random/rand,1339
getrandom,687929523,A small cross-platform library for retrieving random data from system source,2019-01-19 12:56:49.379182+00,2025-05-09 09:58:14.182579+00,https://docs.rs/getrandom,,https://github.com/rust-random/getrandom,109516
serde,657311133,A generic serialization/deserialization framework,2014-12-05 20:20:39.487502+00,2025-09-27 16:51:35.265429+00,https://docs.rs/serde,https://serde.rs,https://github.com/serde-rs/serde,463
cfg-if,657064041,A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structu...,2015-07-08 01:11:24.48504+00,2025-08-19 19:33:21.150447+00,,,https://github.com/rust-lang/cfg-if,2556
indexmap,653266096,A hash table with consistent order and fast iteration.,2018-01-30 17:59:48.053105+00,2025-09-18 17:01:44.859008+00,https://docs.rs/indexmap/,,https://github.com/indexmap-rs/indexmap,48918
itertools,646848245,"Extra iterator adaptors, iterator methods, free functions, and macros.",2014-11-21 19:56:41.399795+00,2024-12-31 12:32:06.925445+00,https://docs.rs/itertools/,,https://github.com/rust-itertools/itertools,314
autocfg,609315561,Automatic cfg for Rust compiler features,2018-05-30 18:21:35.379916+00,2025-06-17 22:16:28.597704+00,https://docs.rs/autocfg/,,https://github.com/cuviper/autocfg,67825
serde_derive,604470935,"Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",2016-08-29 05:22:31.552019+00,2025-09-27 16:51:16.528484+00,https://serde.rs/derive.html,https://serde.rs,https://github.com/serde-rs/serde,6169
itoa,597840075,Fast integer primitive to string conversion,2016-06-25 21:50:33.832+00,2025-03-03 23:42:45.916886+00,https://docs.rs/itoa,,https://github.com/dtolnay/itoa,5486
memchr,597204566,"Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte sea...",2015-06-11 23:00:13.079973+00,2025-09-25 12:47:49.866757+00,https://docs.rs/memchr/,https://github.com/BurntSushi/memchr,https://github.com/BurntSushi/memchr,2364
rand_chacha,588216699,ChaCha random number generator ,2018-10-17 10:08:22.907614+00,2025-01-27 13:38:26.609781+00,https://docs.rs/rand_chacha,https://rust-random.github.io/book,https://github.com/rust-random/rand,91129
serde_json,577584598,A JSON serialization file format,2015-08-07 19:04:18.632088+00,2025-09-14 15:56:02.673791+00,https://docs.rs/serde_json,,https://github.com/serde-rs/json,2782
once_cell,569824502,Single assignment cells and lazy values.,2018-08-02 00:12:48.969947+00,2025-03-28 17:15:56.184274+00,https://docs.rs/once_cell,,https://github.com/matklad/once_cell,77028
log,567216429,A lightweight logging facade for Rust ,2014-12-13 22:10:19.94455+00,2025-09-03 20:08:08.331304+00,https://docs.rs/log,,https://github.com/rust-lang/log,547
regex-automata,566127907,Automata construction and matching using regular expressions.,2019-01-02 22:11:41.647566+00,2025-09-25 12:05:56.881342+00,https://docs.rs/regex-automata,https://github.com/rust-lang/regex/tree/master/regex-automata,https://github.com/rust-lang/regex,105119
unicode-ident,565344012,Determine whether characters have the XID_Start or XID_Continue properties according to Unicode S...,2021-10-02 05:15:24.656394+00,2025-09-10 03:08:21.638312+00,https://docs.rs/unicode-ident,,https://github.com/dtolnay/unicode-ident,459332
heck,564232215,heck is a case conversion library.,2017-03-27 11:22:23.06719+00,2024-03-12 22:42:23.303234+00,,,https://github.com/withoutboats/heck,9167
thiserror-impl,562917341,Implementation detail of the `thiserror` crate,2019-10-09 18:05:26.708915+00,2025-09-28 23:26:49.86948+00,,,https://github.com/dtolnay/thiserror,171266
thiserror,562871490,derive(Error),2019-10-09 18:05:40.346377+00,2025-09-28 23:26:56.561733+00,https://docs.rs/thiserror,,https://github.com/dtolnay/thiserror,171267
regex,541640185,An implementation of regular expressions for Rust. This implementation uses finite automata and g...,2014-12-13 22:10:11.303311+00,2025-09-25 12:07:35.796854+00,https://docs.rs/regex,https://github.com/rust-lang/regex,https://github.com/rust-lang/regex,545
ryu,539816484,Fast floating point to string conversion,2018-07-28 17:12:43.329564+00,2025-03-04 00:13:50.644407+00,https://docs.rs/ryu,,https://github.com/dtolnay/ryu,76396
cc,538106117,A build-time dependency for Cargo build scripts to assist in invoking the native C compiler to co...,2014-12-16 05:26:51.306505+00,2025-09-26 08:07:55.015031+00,https://docs.rs/cc,https://github.com/rust-lang/cc-rs,https://github.com/rust-lang/cc-rs,569
aho-corasick,531557974,Fast multiple substring searching.,2015-06-12 01:15:54.846782+00,2024-03-20 00:06:10.886998+00,,https://github.com/BurntSushi/aho-corasick,https://github.com/BurntSushi/aho-corasick,2365
clap,527015665,"A simple to use, efficient, and full-featured Command Line Argument Parser",2015-03-01 01:17:24.903018+00,2025-09-19 20:59:44.727379+00,,,https://github.com/clap-rs/clap,1498
smallvec,523535885,'Small vector' optimization: store up to a small number of items on the stack,2015-04-06 06:21:18.472333+00,2025-06-06 17:14:20.169448+00,https://docs.rs/smallvec/,,https://github.com/servo/rust-smallvec,1783
parking_lot_core,519191638,An advanced API for creating custom synchronization primitives.,2016-08-26 23:12:30.588575+00,2025-05-29 18:34:41.189352+00,,,https://github.com/Amanieu/parking_lot,6133
strsim,504754565,"Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levensh...",2015-02-10 02:10:46.832583+00,2024-04-02 22:18:09.40679+00,https://docs.rs/strsim/,https://github.com/rapidfuzz/strsim-rs,https://github.com/rapidfuzz/strsim-rs,1368
parking_lot,500926577,More compact and efficient implementations of the standard synchronization primitives.,2016-05-13 15:57:59.130349+00,2025-05-29 18:34:48.077268+00,,,https://github.com/Amanieu/parking_lot,5055
lazy_static,496208353,A macro for declaring lazily evaluated statics in Rust.,2014-11-23 01:18:10.993977+00,2024-06-21 22:48:42.440092+00,https://docs.rs/lazy_static,,https://github.com/rust-lang-nursery/lazy-static.rs,363
num-traits,486437350,Numeric traits for generic mathematics,2016-04-14 07:22:34.568594+00,2024-05-03 21:27:39.856244+00,https://docs.rs/num-traits,https://github.com/rust-num/num-traits,https://github.com/rust-num/num-traits,4746
socket2,468181461,Utilities for handling networking sockets with a maximal amount of configuration possible intended. ,2017-06-07 18:05:03.996775+00,2025-07-05 09:05:39.127086+00,https://docs.rs/socket2,https://github.com/rust-lang/socket2,https://github.com/rust-lang/socket2,18126
version_check,461053755,Tiny crate to check the version of the installed/running rustc.,2017-01-15 08:53:43.890697+00,2024-07-25 23:38:14.142737+00,https://docs.rs/version_check/,,https://github.com/SergioBenitez/version_check,8082
semver,460291150,Parser and evaluator for Cargo's flavor of Semantic Versioning,2014-11-11 05:37:08.485853+00,2025-09-14 17:16:31.572518+00,https://docs.rs/semver,,https://github.com/dtolnay/semver,7
either,460196753,The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases. ,2015-09-14 22:12:31.900654+00,2025-03-05 21:36:27.950711+00,https://docs.rs/either/1/,,https://github.com/rayon-rs/either,3048
idna,456737981,IDNA (Internationalizing Domain Names in Applications) and Punycode.,2016-03-27 08:55:20.657552+00,2025-08-21 08:48:20.326736+00,,,https://github.com/servo/rust-url/,4577
windows-sys,451260465,Rust for Windows,2021-10-18 14:47:07.495906+00,2025-09-25 18:09:26.428973+00,,,https://github.com/microsoft/windows-rs,466814
time,448542588,Date and time library. Fully interoperable with the standard library. Mostly compatible with #![n...,2014-11-13 06:52:51.369245+00,2025-09-19 08:18:09.564305+00,,https://time-rs.github.io,https://github.com/time-rs/time,90
rustix,448524475,Safe Rust bindings to POSIX/Unix/Linux/Winsock-like syscalls,2021-10-29 10:44:45.767768+00,2025-09-09 15:50:02.311921+00,https://docs.rs/rustix,,https://github.com/bytecodealliance/rustix,473904
bytes,446156403,Types and traits for working with bytes,2015-01-30 08:04:59.453916+00,2025-03-05 12:12:14.708277+00,,,https://github.com/tokio-rs/bytes,1315
lock_api,443841188,Wrappers to create fully-featured Mutex and RwLock types. Compatible with no_std.,2018-06-08 00:16:14.822518+00,2025-05-29 18:34:32.254286+00,,,https://github.com/Amanieu/parking_lot,69133
digest,442286699,Traits for cryptographic hash functions and message authentication codes,2016-10-06 14:10:33.76349+00,2025-09-29 18:51:33.449402+00,https://docs.rs/digest,,https://github.com/RustCrypto/traits,6736
scopeguard,435235712,"A RAII scope guard that will run a given closure when it goes out of scope, even if the code betw...",2015-04-30 12:04:48.236552+00,2023-07-17 13:47:53.232324+00,https://docs.rs/scopeguard/,,https://github.com/bluss/scopeguard,1994
pin-project-lite,433320949,A lightweight version of pin-project written with declarative macros. ,2019-10-22 15:30:45.981586+00,2025-01-06 12:20:51.767173+00,,,https://github.com/taiki-e/pin-project-lite,174693
block-buffer,429440563,Buffer type for block processing of data,2017-06-12 01:07:55.617813+00,2025-09-02 18:31:57.95453+00,https://docs.rs/block-buffer,,https://github.com/RustCrypto/utils,18632
mio,428884292,Lightweight non-blocking I/O.,2014-11-11 23:52:39.666778+00,2025-05-24 14:44:14.874702+00,,https://github.com/tokio-rs/mio,https://github.com/tokio-rs/mio,62
miniz_oxide,426202260,DEFLATE compression and decompression library rewritten in Rust based on miniz,2017-10-10 19:08:01.549072+00,2025-06-09 22:26:12.218895+00,https://docs.rs/miniz_oxide,https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide,https://github.com/Frommi/miniz_oxide/tree/master/miniz_oxide,35141
crossbeam-utils,422972128,Utilities for concurrent programming,2017-08-28 12:20:45.154206+00,2024-12-15 15:26:01.019842+00,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-utils,https://github.com/crossbeam-rs/crossbeam,29582
anyhow,422078915,Flexible concrete Error type built on std::error::Error,2019-10-05 19:52:26.646502+00,2025-09-19 14:21:43.692151+00,https://docs.rs/anyhow,,https://github.com/dtolnay/anyhow,170198
http,417390006,A set of types for representing HTTP requests and responses. ,2014-11-20 23:30:38.809367+00,2025-03-11 20:19:56.370499+00,https://docs.rs/http,,https://github.com/hyperium/http,184
ppv-lite86,414995207,Cross-platform cryptography-oriented low-level SIMD library.,2019-02-01 22:36:06.869586+00,2025-03-09 20:01:40.419162+00,,,https://github.com/cryptocorrosion/cryptocorrosion,112081
linux-raw-sys,411638600,Generated bindings for Linux's userspace API,2021-06-12 14:38:40.00565+00,2025-09-09 01:39:23.798581+00,https://docs.rs/linux-raw-sys,,https://github.com/sunfishcode/linux-raw-sys,409357
tokio,408628812,"An event-driven, non-blocking I/O platform for writing asynchronous I/O backed applications. ",2016-07-01 20:39:07.497766+00,2025-08-01 11:24:00.896293+00,,https://tokio.rs,https://github.com/tokio-rs/tokio,5563
windows_x86_64_msvc,406861398,Import lib for Windows,2021-10-27 15:17:55.755278+00,2025-01-07 15:43:03.422486+00,,,https://github.com/microsoft/windows-rs,473110
percent-encoding,400880877,Percent encoding and decoding,2017-06-13 17:02:11.044209+00,2025-08-21 08:46:50.131801+00,,,https://github.com/servo/rust-url/,18850
fastrand,399488454,A simple and fast random number generator,2020-05-27 16:21:53.648642+00,2024-12-08 16:27:29.613896+00,,,https://github.com/smol-rs/fastrand,246734
hyper,399057340,A protective and efficient HTTP library for all.,2014-11-22 04:05:30.45951+00,2025-08-18 13:53:21.388759+00,https://docs.rs/hyper,https://hyper.rs,https://github.com/hyperium/hyper,327
memoffset,398842325,offset_of functionality for Rust structs.,2017-10-17 06:16:56.082296+00,2024-03-26 19:58:31.849513+00,,,https://github.com/Gilnaa/memoffset,35941
byteorder,393932172,Library for reading/writing numbers in big-endian and little-endian.,2015-02-03 23:28:57.42213+00,2023-10-06 00:45:57.877036+00,https://docs.rs/byteorder,https://github.com/BurntSushi/byteorder,https://github.com/BurntSushi/byteorder,1343
url,392935457,"URL library for Rust, based on the WHATWG URL Standard",2014-11-14 18:37:08.658193+00,2025-08-23 12:41:43.315569+00,https://docs.rs/url,,https://github.com/servo/rust-url,109
toml,389155161,A native Rust encoder and decoder of TOML-formatted files and streams. Provides implementations o...,2014-11-11 05:37:45.901317+00,2025-09-18 19:05:39.826821+00,,,https://github.com/toml-rs/toml,11
windows_x86_64_gnu,387297698,Import lib for Windows,2021-10-28 19:27:32.276769+00,2025-01-07 15:42:54.444046+00,,,https://github.com/microsoft/windows-rs,473671
generic-array,386661475,Generic types implementing functionality of arrays,2015-09-27 14:13:44.174465+00,2025-01-12 17:58:19.615534+00,https://fizyk20.github.io/generic-array/generic_array/,,https://github.com/fizyk20/generic-array.git,3121
slab,383887582,Pre-allocated storage for a uniform data type,2015-06-15 20:47:25.571674+00,2025-08-08 07:40:58.273018+00,,,https://github.com/tokio-rs/slab,2392
windows_i686_msvc,383545646,Import lib for Windows,2021-10-27 15:17:41.977374+00,2025-01-07 15:42:50.460248+00,,,https://github.com/microsoft/windows-rs,473109
windows_aarch64_msvc,383243167,Import lib for Windows,2021-11-05 19:17:58.112695+00,2025-01-07 15:42:38.305221+00,,,https://github.com/microsoft/windows-rs,477460
windows_i686_gnu,382343845,Import lib for Windows,2021-10-28 19:27:12.591562+00,2025-01-07 15:42:42.282152+00,,,https://github.com/microsoft/windows-rs,473669
futures-core,380479786,The core traits and types in for the `futures` library. ,2018-03-05 22:32:59.053938+00,2024-10-05 07:06:47.233193+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54007
rustls,378097820,Rustls is a modern TLS library written in Rust.,2016-08-27 06:58:30.801463+00,2025-09-19 11:40:05.538388+00,,https://github.com/rustls/rustls,https://github.com/rustls/rustls,6137
ahash,373417361,A non-cryptographic hash function using AES-NI for high performance,2019-02-28 06:58:45.540196+00,2025-05-08 05:05:32.999746+00,https://docs.rs/ahash,,https://github.com/tkaitchuck/ahash,117734
futures-util,372714315,Common utilities and extension traits for the futures-rs library. ,2018-03-05 22:42:24.332661+00,2024-10-05 07:07:27.303135+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54020
futures-task,372129720,Tools for working with tasks. ,2019-07-29 02:21:47.224744+00,2024-10-05 07:07:01.495599+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,152488
sha2,369139290,"Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, a...",2016-05-06 20:20:25.502104+00,2025-09-02 23:08:02.228378+00,https://docs.rs/sha2,,https://github.com/RustCrypto/hashes,4991
fnv,368727788,Fowler–Noll–Vo hash function,2015-04-06 18:59:35.782519+00,2020-05-14 16:06:29.223002+00,https://doc.servo.org/fnv/,,https://github.com/servo/rust-fnv,1788
http-body,368503489,"Trait representing an asynchronous, streaming, HTTP request or response body. ",2019-04-04 18:06:00.061574+00,2024-07-12 15:49:01.533452+00,https://docs.rs/http-body,,https://github.com/hyperium/http-body,125857
tracing-core,367533400,Core primitives for application-level tracing. ,2019-06-20 17:36:00.464363+00,2025-06-06 10:08:58.582602+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,142370
chrono,366381653,Date and time library for Rust,2014-11-20 04:21:11.545166+00,2025-09-08 08:59:32.995886+00,https://docs.rs/chrono/,https://github.com/chronotope/chrono,https://github.com/chronotope/chrono,120
futures-sink,366239333,The asynchronous `Sink` trait for the futures-rs library. ,2018-03-05 22:41:47.740444+00,2024-10-05 07:06:58.039843+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54019
windows-targets,364875409,Import libs for Windows,2022-09-09 14:29:19.927693+00,2025-09-25 18:09:05.432142+00,,,https://github.com/microsoft/windows-rs,661906
tracing,363354393,Application-level tracing for Rust. ,2017-11-27 18:43:02.901436+00,2024-11-27 17:13:14.607037+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,40771
typenum,363262487,Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supp...,2015-09-26 03:09:06.865219+00,2025-10-02 06:13:48.051754+00,https://docs.rs/typenum,,https://github.com/paholg/typenum,3111
futures-channel,363000929,Channels for asynchronous communication using futures-rs. ,2018-03-05 22:36:02.312563+00,2024-10-05 07:07:06.660085+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54009
h2,362569195,An HTTP/2 client and server,2017-03-09 22:02:00.510015+00,2025-08-06 15:26:52.276441+00,https://docs.rs/h2,,https://github.com/hyperium/h2,8906
unicode-width,357277193,Determine displayed width of `char` and `str` types according to Unicode Standard Annex #11 rules. ,2015-04-14 19:29:07.865266+00,2025-06-09 22:20:35.450739+00,,https://github.com/unicode-rs/unicode-width,https://github.com/unicode-rs/unicode-width,1869
tempfile,354865718,A library for managing temporary files and directories.,2015-04-14 18:26:06.249019+00,2025-09-23 05:32:33.826527+00,https://docs.rs/tempfile,https://stebalien.com/projects/tempfile-rs/,https://github.com/Stebalien/tempfile,1867
pin-utils,353132472,Utilities for pinning ,2018-08-06 15:00:31.609789+00,2020-04-22 16:13:27.095776+00,https://docs.rs/pin-utils,,https://github.com/rust-lang-nursery/pin-utils,77760
tokio-util,352188379,Additional utilities for working with Tokio. ,2018-02-01 03:25:03.010037+00,2025-08-03 09:14:02.639765+00,,https://tokio.rs,https://github.com/tokio-rs/tokio,49101
uuid,349948829,A library to generate and parse UUIDs.,2014-11-11 05:37:37.261193+00,2025-09-02 06:11:41.210851+00,https://docs.rs/uuid,https://github.com/uuid-rs/uuid,https://github.com/uuid-rs/uuid,10
clap_lex,349493294,"Minimal, flexible command line parser",2022-04-15 19:08:14.98876+00,2025-06-09 18:09:36.745507+00,,,https://github.com/clap-rs/clap,568652
windows_x86_64_gnullvm,348488254,Import lib for Windows,2022-09-01 21:01:36.169638+00,2025-01-07 15:42:58.35725+00,,,https://github.com/microsoft/windows-rs,657025
windows_aarch64_gnullvm,348481739,Import lib for Windows,2022-09-01 20:55:47.169004+00,2025-01-07 15:42:32.178766+00,,,https://github.com/microsoft/windows-rs,657016
futures,347687965,"An implementation of futures and streams featuring zero allocations, composability, and iterator-...",2016-07-31 20:58:03.676528+00,2024-10-05 07:07:45.246157+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,5848
futures-io,347489434,"The `AsyncRead`, `AsyncWrite`, `AsyncSeek`, and `AsyncBufRead` traits for the futures-rs library. ",2016-07-31 20:58:50.213004+00,2024-10-05 07:06:53.15632+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,5849
pkg-config,347289402,A library to run the pkg-config system tool at build time in order to be used in Cargo build scri...,2014-11-11 06:37:31.276162+00,2025-03-03 10:04:55.062213+00,https://docs.rs/pkg-config,,https://github.com/rust-lang/pkg-config-rs,34
num_cpus,339675581,Get the number of CPUs on a machine.,2015-03-16 18:43:53.862639+00,2025-05-30 18:59:42.537878+00,https://docs.rs/num_cpus,,https://github.com/seanmonstar/num_cpus,1592
rustc_version,338830547,A library for querying the version of a installed rustc compiler,2015-08-24 00:54:04.57939+00,2024-08-28 09:21:22.033328+00,https://docs.rs/rustc_version/,,https://github.com/djc/rustc-version-rs,2906
form_urlencoded,338030081,"Parser and serializer for the application/x-www-form-urlencoded syntax, as used by HTML forms.",2020-06-19 22:23:03.447945+00,2025-08-21 08:47:43.93956+00,,,https://github.com/servo/rust-url,255839
nix,335643525,Rust friendly bindings to *nix APIs,2014-11-11 22:15:48.567559+00,2025-05-04 04:20:05.085648+00,,,https://github.com/nix-rust/nix,56
num-integer,335524098,Integer traits and functions,2016-04-14 07:26:07.694449+00,2024-02-08 01:42:29.084925+00,https://docs.rs/num-integer,https://github.com/rust-num/num-integer,https://github.com/rust-num/num-integer,4747
spin,334921695,Spin-based synchronization primitives,2015-01-27 15:50:37.555349+00,2025-03-26 19:10:27.894178+00,,,https://github.com/mvdnes/spin-rs.git,1307
tinyvec,334009868,`tinyvec` provides 100% safe vec-like data structures.,2020-01-07 02:30:11.536811+00,2025-08-18 23:09:20.429197+00,,,https://github.com/Lokathor/tinyvec,196005
cpufeatures,330718079,"Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets,  with...",2021-04-26 17:07:17.776831+00,2025-01-25 01:35:46.131569+00,https://docs.rs/cpufeatures,,https://github.com/RustCrypto/utils,389800
nom,327614388,"A byte-oriented, zero-copy, parser combinators library",2015-01-17 17:47:52.413792+00,2025-01-26 16:03:28.068915+00,https://docs.rs/nom,,https://github.com/rust-bakery/nom,805
unicode-xid,325539148,Determine whether characters have the XID_Start or XID_Continue properties according to Unicode S...,2015-04-27 01:12:08.811826+00,2024-09-19 15:55:24.420864+00,https://unicode-rs.github.io/unicode-xid,https://github.com/unicode-rs/unicode-xid,https://github.com/unicode-rs/unicode-xid,1964
toml_edit,325451384,Yet another format-preserving TOML parser.,2017-12-17 22:25:35.748546+00,2025-09-18 19:05:55.337889+00,,,https://github.com/toml-rs/toml,43459
unicode-normalization,320212557,"This crate provides functions for normalization of Unicode strings, including Canonical and Compa...",2015-04-15 01:55:51.148249+00,2024-09-17 15:27:12.95074+00,https://docs.rs/unicode-normalization/,https://github.com/unicode-rs/unicode-normalization,https://github.com/unicode-rs/unicode-normalization,1873
wasi,319337617,WASI API bindings for Rust,2019-03-27 16:47:22.126268+00,2025-09-15 22:01:38.940804+00,https://docs.rs/wasi,,https://github.com/bytecodealliance/wasi-rs,124199
futures-macro,318890688,The futures-rs procedural macro implementations. ,2019-11-06 18:21:14.020889+00,2024-10-05 07:07:15.104978+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,178725
httparse,317808508,"A tiny, safe, speedy, zero-copy HTTP/1.x parser.",2015-02-20 18:34:43.44873+00,2025-03-03 14:44:09.975762+00,https://docs.rs/httparse,,https://github.com/seanmonstar/httparse,1432
errno,313444655,Cross-platform interface to the `errno` variable.,2015-03-19 21:26:09.647306+00,2025-09-09 04:35:15.362504+00,https://docs.rs/errno,,https://github.com/lambda-fairy/rust-errno,1612
env_logger,312734870,A logging implementation for `log` which is configured via an environment variable. ,2015-01-27 15:33:08.586936+00,2025-04-01 19:37:14.047276+00,,,https://github.com/rust-cli/env_logger,1306
ring,312633721,An experiment.,2016-08-15 22:39:18.912891+00,2025-03-11 19:42:03.889273+00,,,https://github.com/briansmith/ring,5981
tokio-macros,312195722,Tokio's proc macros. ,2019-04-24 03:12:38.961545+00,2025-01-08 15:57:13.993235+00,,https://tokio.rs,https://github.com/tokio-rs/tokio,129790
tokio-rustls,309525402,Asynchronous TLS/SSL streams for Tokio using Rustls.,2017-02-22 05:32:09.54644+00,2025-09-26 15:31:04.364599+00,https://docs.rs/tokio-rustls,https://github.com/rustls/tokio-rustls,https://github.com/rustls/tokio-rustls,8630
crc32fast,309320696,"Fast, SIMD-accelerated CRC32 (IEEE) checksum computation",2018-11-13 12:53:18.90072+00,2025-07-13 15:09:03.117494+00,,,https://github.com/srijs/rust-crc32fast,96449
untrusted,309293235,"Safe, fast, zero-panic, zero-crashing, zero-allocation parsing of untrusted inputs in Rust.",2016-06-05 23:47:03.228558+00,2021-07-13 22:13:26.65001+00,https://briansmith.org/rustdoc/untrusted/,,https://github.com/briansmith/untrusted,5299
tinyvec_macros,307524320,Some macros for tiny containers,2020-08-09 16:30:41.144543+00,2023-02-02 23:03:04.651564+00,,,https://github.com/Soveu/tinyvec_macros,274712
tracing-attributes,307310275,Procedural macro attributes for automatically instrumenting functions. ,2019-08-08 22:42:06.221385+00,2025-06-17 15:27:17.613308+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,155163
crossbeam-epoch,306871993,Epoch-based garbage collection,2017-11-26 17:32:53.106278+00,2024-01-08 12:56:47.04864+00,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-epoch,https://github.com/crossbeam-rs/crossbeam,40618
futures-executor,306219040,Executors for asynchronous tasks based on the futures-rs library. ,2018-03-05 22:43:02.959105+00,2024-10-05 07:07:34.937861+00,,https://rust-lang.github.io/futures-rs,https://github.com/rust-lang/futures-rs,54021
winnow,305254996,"A byte-oriented, zero-copy, parser combinators library",2023-02-22 17:01:25.112233+00,2025-08-22 13:35:14.573448+00,,,https://github.com/winnow-rs/winnow,791966
thread_local,302041696,Per-object thread-local storage,2016-04-08 07:42:40.999679+00,2025-06-12 23:46:41.604446+00,https://docs.rs/thread_local/,,https://github.com/Amanieu/thread_local-rs,4697
flate2,300572592,DEFLATE compression and decompression exposed as Read/BufRead/Write streams. Supports miniz_oxide...,2014-11-11 06:37:58.925398+00,2025-06-07 03:24:41.222962+00,https://docs.rs/flate2,https://github.com/rust-lang/flate2-rs,https://github.com/rust-lang/flate2-rs,37
async-trait,300033967,Type erasure for async trait methods,2019-07-23 16:10:00.020678+00,2025-08-14 17:34:24.542203+00,https://docs.rs/async-trait,,https://github.com/dtolnay/async-trait,151072
redox_syscall,299505872,A Rust library to access raw Redox system calls,2016-11-03 01:32:41.787114+00,2025-07-28 15:30:58.010851+00,https://docs.rs/redox_syscall,,https://gitlab.redox-os.org/redox-os/syscall,7118
unicode-bidi,296765146,Implementation of the Unicode Bidirectional Algorithm,2015-06-11 18:06:04.414255+00,2024-12-16 23:09:47.459625+00,https://docs.rs/unicode-bidi/,,https://github.com/servo/unicode-bidi,2361
clap_derive,294205199,"Parse command line argument by defining a struct, derive crate.",2020-05-03 07:51:45.713663+00,2025-09-02 17:03:24.156431+00,,,https://github.com/clap-rs/clap,236945
termcolor,292611900,A simple cross platform library for writing colored text to a terminal. ,2016-11-20 20:45:01.476057+00,2024-01-10 12:40:32.42723+00,https://docs.rs/termcolor,https://github.com/BurntSushi/termcolor,https://github.com/BurntSushi/termcolor,7317
hex,292223369,Encoding and decoding data into/from hexadecimal representation.,2015-10-23 05:46:39.823534+00,2021-03-03 10:48:58.682837+00,https://docs.rs/hex/,,https://github.com/KokaKiwi/rust-hex,3290
crossbeam-deque,292081761,Concurrent work-stealing deque,2017-11-26 18:02:02.212875+00,2024-12-15 15:29:28.168345+00,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-deque,https://github.com/crossbeam-rs/crossbeam,40627
zerocopy,290527877,"Zerocopy makes zero-cost memory manipulation effortless. We write ""unsafe"" so you don't have to.",2018-08-15 05:46:29.013597+00,2025-09-06 21:51:38.688755+00,,,https://github.com/google/zerocopy,79521
equivalent,289971099,Traits for key comparison in maps.,2023-02-05 22:54:27.71505+00,2025-02-14 22:14:18.212755+00,,,https://github.com/indexmap-rs/equivalent,777488
mime,288764308,Strongly Typed Mimes,2014-11-20 08:33:46.22482+00,2023-03-20 15:05:04.272177+00,https://docs.rs/mime,,https://github.com/hyperium/mime,121
object,288259237,A unified interface for reading and writing object file formats.,2016-08-19 20:44:53.178735+00,2025-08-13 10:32:51.629605+00,,,https://github.com/gimli-rs/object,6030
time-macros,287550751,    Procedural macros for the time crate.     This crate is an implementation detail and should n...,2019-12-02 06:06:16.262989+00,2025-09-02 19:25:33.271079+00,,,https://github.com/time-rs/time,185871
subtle,286814915,Pure-Rust traits and utilities for constant-time cryptographic implementations.,2017-05-31 04:19:18.671882+00,2024-06-24 17:25:24.458503+00,https://docs.rs/subtle,https://dalek.rs/,https://github.com/dalek-cryptography/subtle,16996
crypto-common,286440786,Common cryptographic traits,2021-02-10 22:26:47.773408+00,2025-09-02 18:55:44.994762+00,https://docs.rs/crypto-common,,https://github.com/RustCrypto/traits,353576
signal-hook-registry,285195934,Backend crate for signal-hook,2019-04-28 14:02:25.47634+00,2025-08-03 18:17:15.731256+00,https://docs.rs/signal-hook-registry,,https://github.com/vorner/signal-hook,130707
reqwest,284233627,higher level HTTP client library,2016-10-16 17:29:41.599749+00,2025-08-12 13:42:24.067373+00,https://docs.rs/reqwest,,https://github.com/seanmonstar/reqwest,6874
rustc-hash,283174861,"A speedy, non-cryptographic hashing algorithm used by rustc",2018-05-24 13:05:52.176874+00,2025-02-05 18:34:34.388524+00,,,https://github.com/rust-lang/rustc-hash,66890
want,282800445,Detect when another Future wants a result.,2018-03-15 19:26:09.951353+00,2023-06-14 21:50:52.86216+00,https://docs.rs/want,,https://github.com/seanmonstar/want,55853
rustls-pemfile,282578076,Basic .pem file parser for keys and certificates,2020-12-28 14:24:30.384877+00,2024-09-30 16:29:22.598843+00,,https://github.com/rustls/pemfile,https://github.com/rustls/pemfile,328282
crossbeam-channel,282083616,Multi-producer multi-consumer channels for message passing,2017-11-26 19:20:24.266475+00,2025-04-08 21:27:41.106342+00,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-channel,https://github.com/crossbeam-rs/crossbeam,40643
try-lock,281332178,A lightweight atomic lock.,2018-03-15 19:23:44.274814+00,2023-12-07 16:13:16.960779+00,https://docs.rs/try-lock,https://github.com/seanmonstar/try-lock,https://github.com/seanmonstar/try-lock,55851
gimli,279646531,A library for reading and writing the DWARF debugging format.,2016-06-15 02:48:38.339028+00,2025-09-13 02:44:33.748122+00,https://docs.rs/gimli,,https://github.com/gimli-rs/gimli,5383
tower-service,278495763,"Trait representing an asynchronous, request / response based, client or server. ",2018-02-19 17:50:18.96436+00,2024-08-13 16:23:33.548845+00,https://docs.rs/tower-service/0.3.3,https://github.com/tower-rs/tower,https://github.com/tower-rs/tower,51910
rustc-demangle,276445961,Rust compiler symbol demangling. ,2016-05-13 20:00:42.138724+00,2025-07-27 13:41:48.223641+00,https://docs.rs/rustc-demangle,https://github.com/rust-lang/rustc-demangle,https://github.com/rust-lang/rustc-demangle,5060
glob,276428594,Support for matching file paths against Unix shell style patterns. ,2014-11-11 05:37:15.865977+00,2025-08-11 09:47:13.502506+00,https://docs.rs/glob,https://github.com/rust-lang/glob,https://github.com/rust-lang/glob,8
iana-time-zone,276101638,get the IANA time zone for the current system,2020-06-27 11:01:58.126511+00,2025-09-12 16:08:42.360504+00,,,https://github.com/strawlab/iana-time-zone,258651
pin-project,275121990,A crate for safe and ergonomic pin-projection. ,2019-01-08 15:11:01.560092+00,2025-03-03 16:49:30.727281+00,,,https://github.com/taiki-e/pin-project,107436
pin-project-internal,274983025,Implementation detail of the `pin-project` crate. ,2019-08-11 15:42:07.442573+00,2025-03-03 16:48:37.574097+00,,,https://github.com/taiki-e/pin-project,155838
walkdir,274527874,Recursively walk a directory.,2015-09-27 05:01:40.286066+00,2024-03-01 17:55:09.221032+00,https://docs.rs/walkdir/,https://github.com/BurntSushi/walkdir,https://github.com/BurntSushi/walkdir,3119
webpki-roots,273610235,Mozilla's CA root certificates for use with webpki,2016-08-28 13:40:20.874613+00,2025-07-18 13:53:31.021663+00,,https://github.com/rustls/webpki-roots,https://github.com/rustls/webpki-roots,6152
rustversion,273448854,Conditional compilation according to rustc compiler version,2019-07-08 03:49:21.699801+00,2025-08-08 18:33:59.247063+00,https://docs.rs/rustversion,,https://github.com/dtolnay/rustversion,147454
darling_core,272395868,Helper crate for proc-macro library for reading attributes into structs when implementing custom ...,2017-05-15 19:25:03.051442+00,2025-08-22 15:40:32.129542+00,,,https://github.com/TedDriggs/darling,14734
darling,272345646,A proc-macro library for reading attributes into structs when implementing custom derives. ,2017-05-15 19:26:00.393283+00,2025-08-22 15:40:48.056865+00,https://docs.rs/darling/0.21.3,,https://github.com/TedDriggs/darling,14736
darling_macro,272332836,Internal support for a proc-macro library for reading attributes into structs when implementing c...,2017-05-15 19:25:34.841634+00,2025-08-22 15:40:39.563614+00,,,https://github.com/TedDriggs/darling,14735
rustls-webpki,271415721,Web PKI X.509 Certificate Verification.,2023-01-09 16:48:34.685301+00,2025-10-02 12:02:13.385782+00,,,https://github.com/rustls/webpki,754695
httpdate,270388882,HTTP date parsing and formatting,2016-10-15 10:48:40.752919+00,2023-08-13 10:55:54.391658+00,,,https://github.com/pyfisch/httpdate,6855
arrayvec,269297753,"A vector with fixed capacity, backed by an array (it can be stored on the stack too). Implements ...",2015-05-19 15:27:57.651929+00,2024-08-17 12:14:16.953307+00,https://docs.rs/arrayvec/,,https://github.com/bluss/arrayvec,2147
strum_macros,268596370,Helpful macros for working with enums and strings,2017-02-12 07:05:29.02998+00,2025-07-19 23:06:13.192018+00,https://docs.rs/strum,https://github.com/Peternator7/strum,https://github.com/Peternator7/strum,8483
shlex,267622678,"Split a string into shell words, like Python's shlex.",2015-06-22 23:35:40.217184+00,2024-01-22 05:15:15.585884+00,,,https://github.com/comex/rust-shlex,2450
textwrap,265671577,"Library for word wrapping, indenting, and dedenting strings. Has optional support for Unicode and...",2016-12-17 01:34:45.436054+00,2025-03-03 17:01:53.984799+00,https://docs.rs/textwrap/,,https://github.com/mgeisler/textwrap,7649
hermit-abi,265056986,Hermit system calls definitions.,2019-10-20 07:34:22.550962+00,2025-06-11 15:37:43.898056+00,,,https://github.com/hermit-os/hermit-rs,174155
num-bigint,262632463,Big integer implementation for Rust,2016-04-14 07:41:44.715174+00,2025-01-25 00:26:55.29421+00,https://docs.rs/num-bigint,https://github.com/rust-num/num-bigint,https://github.com/rust-num/num-bigint,4750
backtrace,262157515,A library to acquire a stack trace (backtrace) at runtime in a Rust program. ,2015-06-10 08:23:39.379972+00,2025-09-26 02:43:38.784231+00,https://docs.rs/backtrace,https://github.com/rust-lang/backtrace-rs,https://github.com/rust-lang/backtrace-rs,2350
same-file,261311942,A simple crate for determining whether two file paths point to the same file. ,2017-01-08 23:00:41.755668+00,2020-01-11 17:02:30.960838+00,https://docs.rs/same-file,https://github.com/BurntSushi/same-file,https://github.com/BurntSushi/same-file,7992
clap_builder,260353781,"A simple to use, efficient, and full-featured Command Line Argument Parser",2023-03-28 00:41:44.344826+00,2025-09-19 20:59:30.247215+00,,,https://github.com/clap-rs/clap,822608
addr2line,259821953,"A cross-platform symbolication library written in Rust, using `gimli`",2016-12-03 21:33:01.794743+00,2025-09-13 03:01:38.341107+00,https://docs.rs/addr2line,,https://github.com/gimli-rs/addr2line,7456
strum,259444015,Helpful macros for working with enums and strings,2017-02-12 07:07:10.075292+00,2025-07-19 23:06:37.716908+00,https://docs.rs/strum,https://github.com/Peternator7/strum,https://github.com/Peternator7/strum,8484
serde_urlencoded,258118312,`x-www-form-urlencoded` meets Serde,2016-09-11 11:46:40.652101+00,2022-01-17 11:26:21.628923+00,https://docs.rs/serde_urlencoded/0.7.1/serde_urlencoded/,,https://github.com/nox/serde_urlencoded,6336
paste,257074005,Macros for all your token pasting needs,2018-11-01 02:52:18.319383+00,2024-05-07 01:50:22.784771+00,https://docs.rs/paste,,https://github.com/dtolnay/paste,93931
encoding_rs,256377224,A Gecko-oriented implementation of the Encoding Standard,2016-07-09 12:27:23.194308+00,2024-10-24 09:22:44.123986+00,https://docs.rs/encoding_rs/,https://docs.rs/encoding_rs/,https://github.com/hsivonen/encoding_rs,5617
anstyle,255227695,ANSI text styling,2022-05-18 20:59:53.360865+00,2025-09-29 17:43:42.572445+00,,,https://github.com/rust-cli/anstyle.git,589251
zeroize,254143383,Securely clear secrets from memory with a simple trait built on stable Rust primitives which guar...,2018-10-03 09:33:21.998452+00,2025-09-29 20:20:03.524506+00,,https://github.com/RustCrypto/utils/tree/master/zeroize,https://github.com/RustCrypto/utils,87769
hmac,253031184,Generic implementation of Hash-based Message Authentication Code (HMAC),2016-10-06 21:23:44.676009+00,2025-09-16 22:58:47.305433+00,https://docs.rs/hmac,,https://github.com/RustCrypto/MACs,6761
humantime,252513043,"A parser and formatter for std::time::{Duration, SystemTime}",2016-05-20 21:32:51.043935+00,2025-09-11 12:08:34.93004+00,https://docs.rs/humantime,https://github.com/chronotope/humantime,https://github.com/chronotope/humantime,5127
hyper-rustls,251746236,Rustls+hyper integration for pure rust HTTPS,2016-10-08 09:37:41.910219+00,2025-06-06 09:30:00.594651+00,https://docs.rs/hyper-rustls/,https://github.com/rustls/hyper-rustls,https://github.com/rustls/hyper-rustls,6784
rayon,250526207,Simple work-stealing parallelism for Rust,2015-12-10 22:38:20.637638+00,2025-08-12 23:22:16.331655+00,https://docs.rs/rayon/,,https://github.com/rayon-rs/rayon,3608
rayon-core,247718310,Core APIs for Rayon,2017-03-11 20:11:25.040031+00,2025-08-12 23:21:51.666309+00,https://docs.rs/rayon-core/,,https://github.com/rayon-rs/rayon,8934
minimal-lexical,246757633,Fast float parsing conversion routines.,2021-04-27 23:04:12.608012+00,2021-10-04 10:53:11.629475+00,https://docs.rs/minimal-lexical,,https://github.com/Alexhuszagh/minimal-lexical,390375
event-listener,245599138,Notify async tasks or threads,2020-05-16 17:53:08.377375+00,2025-08-03 21:37:04.499962+00,,,https://github.com/smol-rs/event-listener,242439
ipnet,245146219,"Provides types and useful methods for working with IPv4 and IPv6 network addresses, commonly call...",2017-08-14 20:09:09.629621+00,2025-01-20 00:33:10.61611+00,https://docs.rs/ipnet,,https://github.com/krisprice/ipnet,27517
winapi,244622163,Raw FFI bindings for all of Windows API.,2014-11-29 13:35:24.366255+00,2020-06-26 11:34:33.480855+00,https://docs.rs/winapi/,,https://github.com/retep998/winapi-rs,429
unicode-segmentation,243222681,"This crate provides Grapheme Cluster, Word and Sentence boundaries according to Unicode Standard ...",2015-04-14 23:28:47.67394+00,2024-09-13 17:05:55.908935+00,,https://github.com/unicode-rs/unicode-segmentation,https://github.com/unicode-rs/unicode-segmentation,1872
tracing-subscriber,242676356,Utilities for implementing and composing `tracing` subscribers. ,2019-06-27 22:06:39.700601+00,2025-08-29 19:10:29.115195+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,144108
time-core,242004101,This crate is an implementation detail and should not be relied upon directly.,2020-12-17 01:08:57.508248+00,2025-09-02 19:25:26.65585+00,,,https://github.com/time-rs/time,323779
sync_wrapper,241683950,A tool for enlisting the compiler's help in proving the absence of concurrency,2020-05-16 18:10:10.458779+00,2024-11-20 16:29:59.416129+00,https://docs.rs/sync_wrapper,https://docs.rs/sync_wrapper,https://github.com/Actyx/sync_wrapper,242446
toml_datetime,238800739,A TOML-compatible datetime type,2022-10-21 16:38:58.820519+00,2025-09-18 19:04:58.614067+00,,,https://github.com/toml-rs/toml,693738
tower,238037817,Tower is a library of modular and reusable components for building robust clients and servers. ,2016-12-23 17:20:31.319203+00,2024-12-11 13:26:44.329531+00,,https://github.com/tower-rs/tower,https://github.com/tower-rs/tower,7751
openssl-probe,237768944,Tool for helping to find SSL certificate locations on the system for OpenSSL ,2016-11-06 05:25:41.005024+00,2025-01-23 16:14:49.108354+00,,https://github.com/alexcrichton/openssl-probe,https://github.com/alexcrichton/openssl-probe,7142
libloading,236722705,Bindings around the platform's dynamic library loading primitives with greatly improved memory sa...,2015-11-08 12:22:07.864268+00,2025-09-21 10:59:30.598195+00,https://docs.rs/libloading/,,https://github.com/nagisa/rust_libloading/,3385
prost,235449057,A Protocol Buffers implementation for the Rust Language.,2017-06-25 07:39:15.991516+00,2025-06-18 04:36:25.743331+00,,,https://github.com/tokio-rs/prost,20559
anstream,235094595,IO stream adapters for writing colored text that will gracefully degrade according to your termin...,2023-03-16 14:54:31.795594+00,2025-10-02 17:05:18.745448+00,,,https://github.com/rust-cli/anstyle.git,811574
prost-derive,235056479,Generate encoding and decoding implementations for Prost annotated types.,2017-06-25 07:38:48.366541+00,2025-06-18 04:36:11.89757+00,,,https://github.com/tokio-rs/prost,20558
openssl-sys,232531416,FFI bindings to OpenSSL,2014-11-11 06:38:37.917011+00,2025-05-29 02:17:19.162858+00,,,https://github.com/sfackler/rust-openssl,41
utf8parse,231541157,Table-driven UTF-8 parser,2016-09-18 00:27:10.771511+00,2024-06-08 07:07:41.813419+00,https://docs.rs/utf8parse/,,https://github.com/alacritty/vte,6531
anstyle-parse,231086430,Parse ANSI Style Escapes,2023-03-08 21:17:13.852775+00,2025-06-04 18:38:31.980618+00,,,https://github.com/rust-cli/anstyle.git,805087
tracing-log,230070022,Provides compatibility between `tracing` and the `log` crate. ,2019-06-27 22:04:20.989322+00,2023-10-25 17:01:37.024993+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,144097
proc-macro-crate,229225347,Replacement for crate (macro_rules keyword) in proc-macros ,2019-02-11 10:38:10.168331+00,2025-09-16 10:33:16.33795+00,https://docs.rs/proc-macro-crate,,https://github.com/bkchr/proc-macro-crate,114057
adler,229184005,A simple clean-room implementation of the Adler-32 checksum,2020-06-25 22:07:19.741753+00,2021-02-26 12:12:02.566+00,https://docs.rs/adler/,,https://github.com/jonas-schievink/adler.git,258236
jobserver,227831005,An implementation of the GNU Make jobserver for Rust. ,2017-05-28 20:12:06.126106+00,2025-08-23 22:28:04.067807+00,https://docs.rs/jobserver,https://github.com/rust-lang/jobserver-rs,https://github.com/rust-lang/jobserver-rs,16646
atty,227747111,A simple interface for querying atty,2015-07-10 00:25:05.224059+00,2020-01-05 22:19:33.123499+00,http://softprops.github.io/atty,https://github.com/softprops/atty,https://github.com/softprops/atty,2572
anstyle-query,226899845,Look up colored console capabilities,2023-04-13 14:40:53.104785+00,2025-08-05 17:21:46.180256+00,,,https://github.com/rust-cli/anstyle.git,838340
static_assertions,226638899,Compile-time assertions to ensure that invariants are met.,2017-08-13 00:07:30.041787+00,2019-11-03 17:02:11.618786+00,https://docs.rs/static_assertions/,https://github.com/nvzqz/static-assertions-rs,https://github.com/nvzqz/static-assertions-rs,27332
bumpalo,226113448,A fast bump allocation arena for Rust.,2018-11-24 06:21:56.420457+00,2025-06-24 15:44:56.612638+00,https://docs.rs/bumpalo,,https://github.com/fitzgen/bumpalo,98380
synstructure,225746539,Helper methods and macros for custom derives,2016-10-09 17:25:06.828782+00,2025-04-30 16:37:46.407388+00,https://docs.rs/synstructure,,https://github.com/mystor/synstructure,6798
phf_shared,224214234,Support code shared by PHF libraries,2014-11-22 22:27:31.946226+00,2025-08-23 11:05:56.874671+00,,,https://github.com/rust-phf/rust-phf,356
colorchoice,222898279,Global override of color control,2023-04-13 14:41:28.859123+00,2025-06-04 18:38:32.709479+00,,,https://github.com/rust-cli/anstyle.git,838341
sharded-slab,221049517,A lock-free concurrent slab. ,2019-10-02 23:38:13.973505+00,2023-10-04 19:37:55.401239+00,https://docs.rs/sharded-slab/,https://github.com/hawkw/sharded-slab,https://github.com/hawkw/sharded-slab,169478
petgraph,217395481,Graph data structure library. Provides graph types and graph algorithms.,2015-01-11 20:07:47.311473+00,2025-09-30 13:16:04.011947+00,https://docs.rs/petgraph/,,https://github.com/petgraph/petgraph,768
which,217061311,"A Rust equivalent of Unix command ""which"". Locate installed executable in cross platforms.",2015-10-06 11:33:07.444737+00,2025-06-05 04:32:38.594719+00,https://docs.rs/which/,,https://github.com/harryfei/which-rs.git,3163
siphasher,214842265,"SipHash-2-4, SipHash-1-3 and 128-bit variants in pure Rust",2016-10-04 10:23:48.249538+00,2024-03-17 21:59:01.698376+00,https://docs.rs/siphasher,https://docs.rs/siphasher,https://github.com/jedisct1/rust-siphash,6711
fixedbitset,212128726,FixedBitSet is a simple bitset collection,2015-04-03 11:26:51.825003+00,2024-04-14 23:53:05.91882+00,https://docs.rs/fixedbitset/,,https://github.com/petgraph/fixedbitset,1764
foreign-types,211146933,A framework for Rust wrappers over C APIs,2017-01-31 04:36:40.076916+00,2019-10-13 19:24:15.900127+00,,,https://github.com/sfackler/foreign-types,8318
foreign-types-shared,210593836,An internal crate used by foreign-types,2017-11-26 23:56:57.865334+00,2022-03-21 22:06:37.413498+00,,,https://github.com/sfackler/foreign-types,40682
convert_case,210254259,Convert strings into any case,2020-04-17 00:48:33.26747+00,2025-02-26 21:04:43.219122+00,,,https://github.com/rutrum/convert-case,231014
wasm-bindgen,208058550,Easy support for interacting between JS and Rust. ,2018-03-06 04:24:26.947567+00,2025-09-24 15:09:34.76911+00,https://docs.rs/wasm-bindgen,https://wasm-bindgen.github.io/wasm-bindgen,https://github.com/wasm-bindgen/wasm-bindgen,54069
sha1,207903153,SHA-1 hash function,2014-11-21 12:56:35.586016+00,2025-09-02 23:07:46.1132+00,https://docs.rs/sha1,,https://github.com/RustCrypto/hashes,300
wasm-bindgen-backend,207834529,Backend code generation of the wasm-bindgen tool ,2018-04-03 21:02:46.090931+00,2025-09-24 15:09:20.715312+00,https://docs.rs/wasm-bindgen-backend,https://wasm-bindgen.github.io/wasm-bindgen/,https://github.com/wasm-bindgen/wasm-bindgen/tree/master/crates/backend,58848
wasm-bindgen-macro,207689991,"Definition of the `#[wasm_bindgen]` attribute, an internal dependency ",2018-03-06 04:21:14.486723+00,2025-09-24 15:09:29.671971+00,https://docs.rs/wasm-bindgen,https://wasm-bindgen.github.io/wasm-bindgen/,https://github.com/wasm-bindgen/wasm-bindgen/tree/master/crates/macro,54066
wasm-bindgen-macro-support,207646953,The part of the implementation of the `#[wasm_bindgen]` attribute that is not in the shared backe...,2018-08-13 21:31:57.296968+00,2025-09-24 15:09:24.508684+00,https://docs.rs/wasm-bindgen,https://wasm-bindgen.github.io/wasm-bindgen/,https://github.com/wasm-bindgen/wasm-bindgen/tree/master/crates/macro-support,79325
wasm-bindgen-shared,207300507,"Shared support between wasm-bindgen and wasm-bindgen cli, an internal dependency. ",2018-03-06 04:18:13.41308+00,2025-09-24 15:09:15.791867+00,https://docs.rs/wasm-bindgen-shared,https://wasm-bindgen.github.io/wasm-bindgen/,https://github.com/wasm-bindgen/wasm-bindgen/tree/master/crates/shared,54064
instant,207111037,"Unmaintained, consider using web-time instead - A partial replacement for std::time::Instant that...",2019-04-09 08:42:23.290642+00,2024-05-17 19:56:13.760985+00,,,https://github.com/sebcrozet/instant,126785
proc-macro-error,206387348,Almost drop-in replacement to panics in proc-macros,2019-07-11 07:51:11.667268+00,2020-07-31 18:08:20.096247+00,,,https://gitlab.com/CreepySkeleton/proc-macro-error,148248
openssl,206230544,OpenSSL bindings,2014-11-21 06:54:00.684701+00,2025-05-29 02:17:35.322711+00,,,https://github.com/sfackler/rust-openssl,231
stable_deref_trait,205893679,An unsafe marker trait for types like Box and Rc that dereference to a stable address even when m...,2017-03-09 00:11:41.77638+00,2020-07-13 00:17:49.061392+00,https://docs.rs/stable_deref_trait/1.2.0/stable_deref_trait,,https://github.com/storyyeller/stable_deref_trait,8893
proc-macro-error-attr,205129244,Attribute macro for proc-macro-error crate,2019-10-06 06:40:18.626517+00,2020-07-31 18:06:37.966375+00,,,https://gitlab.com/CreepySkeleton/proc-macro-error,170331
vcpkg,203762742,A library to find native dependencies in a vcpkg tree at build time in order to be used in Cargo ...,2017-04-20 21:35:56.630487+00,2021-06-19 16:35:46.573605+00,https://docs.rs/vcpkg,,https://github.com/mcgoo/vcpkg-rs,11361
deranged,202094692,Ranged integers,2020-12-10 09:24:35.476288+00,2025-09-24 09:07:03.708566+00,,,https://github.com/jhpratt/deranged,321432
bstr,200476963,A string type that is not required to be valid UTF-8.,2018-10-09 22:14:04.467612+00,2025-04-08 16:37:00.152093+00,https://docs.rs/bstr,https://github.com/BurntSushi/bstr,https://github.com/BurntSushi/bstr,88962
tokio-stream,200037902,Utilities to work with `Stream` and `tokio`. ,2020-12-03 23:05:27.16068+00,2024-12-06 10:20:07.445232+00,,https://tokio.rs,https://github.com/tokio-rs/tokio,319472
rustls-native-certs,199839794,rustls-native-certs allows rustls to use the platform native certificate store,2019-11-04 21:10:51.429223+00,2024-11-21 15:42:54.624993+00,,https://github.com/rustls/rustls-native-certs,https://github.com/rustls/rustls-native-certs,178110
ident_case,196249537,Utility for applying case rules to Rust identifiers.,2017-05-10 19:51:31.395527+00,2019-03-18 20:07:20.426691+00,https://docs.rs/ident_case/1.0.1,,https://github.com/TedDriggs/ident_case,14055
phf,195900748,Runtime support for perfect hash function data structures,2014-11-22 22:27:53.644783+00,2025-08-23 11:06:34.224289+00,,,https://github.com/rust-phf/rust-phf,358
nu-ansi-term,195477758,"Library for ANSI terminal colors and styles (bold, underline)",2021-03-09 18:58:03.243547+00,2024-07-23 22:20:55.095113+00,,,https://github.com/nushell/nu-ansi-term,366446
half,195092609,Half-precision floating point f16 and bf16 types for Rust implementing the IEEE 754-2008 standard...,2016-03-18 05:04:29.25502+00,2025-04-08 04:50:59.62077+00,,,https://github.com/VoidStarKat/half-rs,4482
js-sys,192786607,Bindings for all JS global objects and functions in all JS environments like Node.js and browsers...,2018-07-19 19:42:36.874339+00,2025-09-24 15:09:38.736291+00,https://docs.rs/js-sys,https://wasm-bindgen.github.io/wasm-bindgen/,https://github.com/wasm-bindgen/wasm-bindgen/tree/master/crates/js-sys,75112
matchers,191803237,Regex matching on character and byte streams. ,2019-08-02 20:31:26.476346+00,2024-07-01 22:20:07.033866+00,https://docs.rs/matchers/,https://github.com/hawkw/matchers,https://github.com/hawkw/matchers,153870
winapi-x86_64-pc-windows-gnu,191188973,"Import libraries for the x86_64-pc-windows-gnu target. Please don't use this crate directly, depe...",2016-11-23 19:48:47.82972+00,2018-01-18 00:55:12.008307+00,,,https://github.com/retep998/winapi-rs,7346
prost-types,190628170,Prost definitions of Protocol Buffers well known types.,2017-09-10 19:19:37.407643+00,2025-06-18 04:36:38.853842+00,,,https://github.com/tokio-rs/prost,31316
tower-layer,189925975,Decorates a `Service` to allow easy composition between `Service`s. ,2019-04-27 05:09:34.746381+00,2024-08-13 16:53:54.096608+00,https://docs.rs/tower-layer/0.3.3,https://github.com/tower-rs/tower,https://github.com/tower-rs/tower,130412
winapi-i686-pc-windows-gnu,189853114,"Import libraries for the i686-pc-windows-gnu target. Please don't use this crate directly, depend...",2016-11-23 19:48:14.544324+00,2018-01-18 00:55:38.910834+00,,,https://github.com/retep998/winapi-rs,7345
opaque-debug,189332863,Macro for opaque Debug trait implementation,2017-11-26 15:55:55.619753+00,2024-03-01 12:08:32.543535+00,https://docs.rs/opaque-debug,,https://github.com/RustCrypto/utils,40574
derive_more,186803923,Adds #[derive(x)] macros for more traits,2016-03-28 22:50:21.56798+00,2025-04-23 19:18:35.71547+00,https://jeltef.github.io/derive_more/derive_more/,,https://github.com/JelteF/derive_more,4596
ordered-float,185858430,Wrappers for total ordering on floats,2014-11-11 06:37:25.077211+00,2025-09-30 15:12:32.674018+00,,,https://github.com/reem/rust-ordered-float,33
bindgen,183618319,Automatically generates Rust FFI bindings to C and C++ libraries.,2014-11-21 10:14:40.304798+00,2025-08-31 17:50:11.198164+00,https://docs.rs/bindgen,https://rust-lang.github.io/rust-bindgen/,https://github.com/rust-lang/rust-bindgen,251
sct,182625236,Certificate transparency SCT verification library,2017-07-09 19:54:37.366366+00,2023-10-24 14:57:55.376462+00,,https://github.com/rustls/sct.rs,https://github.com/rustls/sct.rs,22773
libm,182527675,libm in pure Rust,2018-07-14 00:41:38.320191+00,2025-05-06 23:40:04.881418+00,https://docs.rs/libm,,https://github.com/rust-lang/compiler-builtins,74142
phf_generator,182281042,PHF generation logic,2015-02-22 20:48:14.120861+00,2025-08-23 11:06:08.136816+00,,,https://github.com/rust-phf/rust-phf,1450
prettyplease,182274751,A minimal `syn` syntax tree pretty-printer,2022-01-04 17:24:55.368876+00,2025-08-19 00:29:26.957436+00,https://docs.rs/prettyplease,,https://github.com/dtolnay/prettyplease,507904
zerocopy-derive,182215072,Custom derive for traits from the zerocopy crate,2019-02-28 01:15:28.169767+00,2025-09-06 21:51:31.045835+00,,,https://github.com/google/zerocopy,117694
serde_spanned,180727354,Serde-compatible spanned Value,2023-01-20 21:28:32.749591+00,2025-09-18 19:04:47.950961+00,,,https://github.com/toml-rs/toml,763746
num-rational,180280360,Rational numbers implementation for Rust,2016-04-14 07:42:39.085844+00,2025-01-25 00:45:16.565243+00,https://docs.rs/num-rational,https://github.com/rust-num/num-rational,https://github.com/rust-num/num-rational,4751
zstd-safe,180182419,Safe low-level bindings for the zstd compression library.,2017-06-05 01:23:34.324227+00,2025-03-20 14:47:49.62566+00,,,https://github.com/gyscos/zstd-rs,17770
hyper-tls,178427011,Default TLS implementation for use with hyper,2017-01-04 22:41:13.366514+00,2023-11-27 19:18:29.702911+00,https://docs.rs/hyper-tls,https://hyper.rs,https://github.com/hyperium/hyper-tls,7931
powerfmt,178039461,    `powerfmt` is a library that provides utilities for formatting values. This crate makes it   ...,2023-10-08 08:18:17.681438+00,2023-10-13 22:04:23.598335+00,,,https://github.com/jhpratt/powerfmt,996989
is-terminal,177988558,Test whether a given stream is a terminal,2022-01-22 02:08:49.649286+00,2025-03-07 04:26:17.164605+00,https://docs.rs/is-terminal,,https://github.com/sunfishcode/is-terminal,518841
quick-error,177856106,    A macro which makes error types pleasant to write. ,2015-09-09 22:47:44.666353+00,2021-05-07 12:10:10.154641+00,http://docs.rs/quick-error,http://github.com/tailhook/quick-error,http://github.com/tailhook/quick-error,3019
zstd,177765617,Binding for the zstd compression library.,2016-02-22 19:09:34.558501+00,2025-02-20 21:43:13.047065+00,https://docs.rs/zstd,,https://github.com/gyscos/zstd-rs,4250
unicase,176937696,A case-insensitive wrapper around strings.,2015-01-09 20:05:24.122027+00,2024-12-24 15:31:12.424515+00,https://docs.rs/unicase,,https://github.com/seanmonstar/unicase,749
native-tls,175535501,A wrapper over a platform's native TLS implementation,2016-11-09 21:07:37.761548+00,2025-02-19 19:24:27.427135+00,,,https://github.com/sfackler/rust-native-tls,7195
axum,174773218,Web framework that focuses on ergonomics and modularity,2021-07-22 13:52:05.710239+00,2025-09-30 12:52:18.918292+00,,https://github.com/tokio-rs/axum,https://github.com/tokio-rs/axum,425909
axum-core,172373969,Core types and traits for axum,2021-08-21 16:52:01.594341+00,2025-09-30 12:52:02.915433+00,,https://github.com/tokio-rs/axum,https://github.com/tokio-rs/axum,440377
home,171441964,Shared definitions of home directories.,2017-07-18 23:38:10.759249+00,2024-12-16 15:41:39.426215+00,https://docs.rs/home,https://github.com/rust-lang/cargo,https://github.com/rust-lang/cargo,24000
winapi-util,170434966,A dumping ground for high level safe wrappers over windows-sys.,2018-08-25 02:49:16.521473+00,2025-09-07 12:24:31.232695+00,https://docs.rs/winapi-util,https://github.com/BurntSushi/winapi-util,https://github.com/BurntSushi/winapi-util,81177
core-foundation-sys,169787518,Bindings to Core Foundation for macOS,2015-10-17 23:55:36.632904+00,2024-08-11 00:48:27.87088+00,,https://github.com/servo/core-foundation-rs,https://github.com/servo/core-foundation-rs,3240
overload,169415352,Provides a macro to simplify operator overloading.,2019-08-06 16:31:47.418402+00,2019-08-10 16:25:33.244486+00,,,https://github.com/danaugrs/overload,154567
filetime,166246412,Platform-agnostic accessors of timestamps in File metadata ,2015-05-04 23:11:08.402484+00,2025-08-20 16:12:06.129697+00,https://docs.rs/filetime,https://github.com/alexcrichton/filetime,https://github.com/alexcrichton/filetime,2028
allocator-api2,165821976,Mirror of Rust's allocator API,2023-02-27 08:40:54.775171+00,2025-09-08 17:02:53.24632+00,https://docs.rs/allocator-api2,https://github.com/zakarumych/allocator-api2,https://github.com/zakarumych/allocator-api2,795790
der,165492515,Pure Rust embedded-friendly implementation of the Distinguished Encoding Rules (DER) for Abstract...,2020-12-17 19:20:36.976898+00,2025-09-15 22:25:43.409406+00,,https://github.com/RustCrypto/formats/tree/master/der,https://github.com/RustCrypto/formats,324007
num-complex,163676991,Complex numbers implementation for Rust,2016-04-14 07:30:01.269978+00,2025-01-25 00:38:03.406755+00,https://docs.rs/num-complex,https://github.com/rust-num/num-complex,https://github.com/rust-num/num-complex,4748
num-iter,163650439,External iterators for generic mathematics,2016-04-14 07:38:23.772296+00,2024-05-04 00:23:07.912201+00,https://docs.rs/num-iter,https://github.com/rust-num/num-iter,https://github.com/rust-num/num-iter,4749
bit-vec,163373325,A vector of bits,2015-06-03 00:24:01.452515+00,2024-07-16 17:14:52.246887+00,https://docs.rs/bit-vec/,https://github.com/contain-rs/bit-vec,https://github.com/contain-rs/bit-vec,2294
serde_yaml,161913942,YAML data format for Serde,2016-02-27 06:46:34.20559+00,2024-03-25 00:50:19.759577+00,https://docs.rs/serde_yaml/,,https://github.com/dtolnay/serde-yaml,4304
async-channel,161650302,Async multi-producer multi-consumer channel,2019-05-06 13:07:43.086764+00,2025-07-06 07:06:07.101546+00,,,https://github.com/smol-rs/async-channel,132389
web-sys,161430086,"Bindings for all Web APIs, a procedurally generated crate from WebIDL ",2018-07-19 19:42:48.824097+00,2025-09-24 15:09:42.274952+00,https://wasm-bindgen.github.io/wasm-bindgen/api/web_sys/,https://wasm-bindgen.github.io/wasm-bindgen/web-sys/index.html,https://github.com/wasm-bindgen/wasm-bindgen/tree/master/crates/web-sys,75113
dashmap,160962843,Blazing fast concurrent HashMap for Rust.,2019-08-25 18:22:12.397782+00,2025-03-05 17:04:26.38414+00,https://docs.rs/dashmap,https://github.com/xacrimon/dashmap,https://github.com/xacrimon/dashmap,159584
num-conv,160659864,`num_conv` is a crate to convert between integer types without using `as` casts. This provides be...,2023-12-23 08:52:41.119523+00,2025-08-28 05:31:18.710951+00,,,https://github.com/jhpratt/num-conv,1078954
signature,159036531,"Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)",2018-10-30 23:56:33.764106+00,2025-09-13 02:20:31.683875+00,https://docs.rs/signature,,https://github.com/RustCrypto/traits,93702
ansi_term,158457652,"Library for ANSI terminal colours and styles (bold, underline)",2014-11-26 00:50:42.101172+00,2019-09-02 10:16:04.908577+00,https://docs.rs/ansi_term,https://github.com/ogham/rust-ansi-term,https://github.com/ogham/rust-ansi-term,399
zstd-sys,158257595,Low-level bindings for the zstd compression library.,2017-03-24 19:18:12.206468+00,2025-09-04 14:13:34.313033+00,,,https://github.com/gyscos/zstd-rs,9141
tonic,158221144,"A gRPC over HTTP/2 implementation focused on high performance, interoperability, and flexibility. ",2018-07-18 06:55:22.955614+00,2025-09-02 17:42:23.062805+00,,https://github.com/hyperium/tonic,https://github.com/hyperium/tonic,74837
matchit,157536178,"A high performance, zero-copy URL router.",2020-12-21 17:41:53.171988+00,2025-01-02 22:51:10.969517+00,,,https://github.com/ibraheemdev/matchit,325332
cipher,157305886,Traits for describing block ciphers and stream ciphers,2015-06-25 05:47:45.505637+00,2025-09-02 19:36:04.870751+00,https://docs.rs/cipher,,https://github.com/RustCrypto/traits,2463
linked-hash-map,156718042,A HashMap wrapper that holds key-value pairs in insertion order,2015-03-18 18:42:16.535145+00,2022-06-25 19:52:40.173594+00,https://docs.rs/linked-hash-map,https://github.com/contain-rs/linked-hash-map,https://github.com/contain-rs/linked-hash-map,1600
displaydoc,156638531,A derive macro for implementing the display Trait via a doc comment and string interpolation ,2019-10-10 02:29:31.389536+00,2024-06-20 21:51:42.769781+00,https://docs.rs/displaydoc,https://github.com/yaahc/displaydoc,https://github.com/yaahc/displaydoc,171342
prost-build,156181897,Generate Prost annotated Rust types from Protocol Buffers files.,2017-06-25 07:40:34.848805+00,2025-06-18 04:36:53.851442+00,,,https://github.com/tokio-rs/prost,20561
spki,156149057,X.509 Subject Public Key Info (RFC5280) describing public keys as well as their associated Algori...,2020-12-03 00:57:56.316288+00,2025-07-10 03:35:02.098394+00,,https://github.com/RustCrypto/formats/tree/master/spki,https://github.com/RustCrypto/formats,319145
futures-lite,155475091,"Futures, streams, and async I/O combinators",2020-05-31 09:53:26.285174+00,2025-08-04 00:29:25.67215+00,https://docs.rs/futures-lite,https://github.com/smol-rs/futures-lite,https://github.com/smol-rs/futures-lite,248070
data-encoding,154478693,"Efficient and customizable data-encoding functions like base64, base32, and hex",2015-12-05 14:17:01.338342+00,2025-04-12 09:59:21.516762+00,https://docs.rs/data-encoding,,https://github.com/ia0/data-encoding,3572
crunchy,154401666,Crunchy unroller: deterministically unroll constant loops,2017-07-18 13:28:08.599993+00,2025-06-25 12:54:43.146786+00,,https://github.com/eira-fransham/crunchy,https://github.com/eira-fransham/crunchy,23927
serde_with,154234299,Custom de/serialization functions for Rust's serde,2017-08-17 21:50:27.31267+00,2025-09-19 23:04:59.669245+00,https://docs.rs/serde_with/,,https://github.com/jonasbb/serde_with/,27924
pest,153952410,The Elegant Parser,2016-04-24 09:55:32.81483+00,2025-09-12 08:30:04.834625+00,https://docs.rs/pest,https://pest.rs/,https://github.com/pest-parser/pest,4833
openssl-macros,153342664,Internal macros used by the openssl crate.,2022-05-03 01:02:41.2643+00,2023-04-01 13:58:02.9022+00,,,,579414
core-foundation,152804814,Bindings to Core Foundation for macOS,2015-02-12 10:50:45.59383+00,2025-05-26 12:40:41.787847+00,,,https://github.com/servo/core-foundation-rs,1386
serde_with_macros,151756216,proc-macro library for serde_with,2019-04-02 19:59:37.28235+00,2025-09-19 23:04:40.298637+00,https://docs.rs/serde_with_macros/,,https://github.com/jonasbb/serde_with/,125425
bincode,151354771,A binary serialization / deserialization strategy for transforming structs into bytes and vice ve...,2014-11-20 20:03:47.604153+00,2025-03-10 18:28:08.334006+00,https://docs.rs/bincode,,https://github.com/bincode-org/bincode,137
quick-xml,151302170,High performance xml reader and writer,2016-02-01 05:38:26.023287+00,2025-08-24 09:33:40.844106+00,https://docs.rs/quick-xml,,https://github.com/tafia/quick-xml,4043
async-stream,150451360,Asynchronous streams using async & await notation,2019-06-07 03:31:34.275797+00,2024-10-01 19:36:32.827442+00,,,https://github.com/tokio-rs/async-stream,139543
async-stream-impl,150231309,proc macros for async-stream crate,2019-08-13 21:33:30.729487+00,2024-10-01 19:35:11.626317+00,,,https://github.com/tokio-rs/async-stream,156575
bit-set,150197533,A set of bits,2015-06-03 01:12:47.369506+00,2024-07-16 17:18:45.390925+00,https://docs.rs/bit-set/,https://github.com/contain-rs/bit-set,https://github.com/contain-rs/bit-set,2295
pkcs8,149496871,Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #8: Private-Key Information ...,2020-06-12 14:01:14.160533+00,2025-09-15 22:57:07.420304+00,,https://github.com/RustCrypto/formats/tree/master/pkcs8,https://github.com/RustCrypto/formats,253276
atomic-waker,148355888,A synchronization primitive for task wakeup,2020-05-29 09:54:53.29133+00,2023-09-25 17:45:09.388277+00,,,https://github.com/smol-rs/atomic-waker,247317
crossbeam-queue,147895883,Concurrent queues,2018-09-08 19:05:07.396126+00,2024-12-15 15:26:54.56321+00,,https://github.com/crossbeam-rs/crossbeam/tree/master/crossbeam-queue,https://github.com/crossbeam-rs/crossbeam,83644
tokio-native-tls,147272548,An implementation of TLS/SSL streams for Tokio using native-tls giving an implementation of TLS f...,2020-04-03 14:28:46.429426+00,2023-02-07 17:08:45.567482+00,https://docs.rs/tokio-native-tls,https://tokio.rs,https://github.com/tokio-rs/tls,225943
target-lexicon,146442095,LLVM target triple types,2018-05-24 19:59:42.278674+00,2025-09-09 17:22:56.284391+00,https://docs.rs/target-lexicon/,,https://github.com/bytecodealliance/target-lexicon,66926
memmap2,145923378,Cross-platform Rust API for memory-mapped file IO,2020-01-18 14:19:42.096696+00,2025-08-22 09:04:43.880888+00,https://docs.rs/memmap2,,https://github.com/RazrFalcon/memmap2-rs,199726
bytemuck,145738449,A crate for mucking around with piles of bytes.,2019-09-22 19:07:58.69601+00,2025-08-07 20:07:25.95011+00,,,https://github.com/Lokathor/bytemuck,166863
indoc,144344279,Indented document literals,2016-03-19 07:03:31.602187+00,2025-03-03 23:32:31.175928+00,https://docs.rs/indoc,,https://github.com/dtolnay/indoc,4483
rustls-pki-types,144193803,Shared types for the rustls PKI ecosystem,2023-08-31 09:09:47.215663+00,2025-05-07 13:10:03.580455+00,https://docs.rs/rustls-pki-types,https://github.com/rustls/pki-types,https://github.com/rustls/pki-types,959721
ucd-trie,143952242,A trie for storing Unicode codepoint sets and maps. ,2018-03-06 02:30:39.993421+00,2024-09-29 12:17:30.563304+00,https://docs.rs/ucd-trie,https://github.com/BurntSushi/ucd-generate,https://github.com/BurntSushi/ucd-generate,54048
clang-sys,143850694,Rust bindings for libclang.,2015-12-22 20:19:27.074026+00,2024-09-25 01:20:28.678885+00,https://docs.rs/clang-sys,,https://github.com/KyleMayes/clang-sys,3731
concurrent-queue,143805510,Concurrent multi-producer multi-consumer queue,2020-05-17 16:08:47.117572+00,2024-04-26 14:26:18.816602+00,,,https://github.com/smol-rs/concurrent-queue,242702
constant_time_eq,143306218,Compares two equal-sized byte strings in constant time.,2015-05-22 02:07:15.678036+00,2025-03-15 17:03:47.885264+00,https://docs.rs/constant_time_eq,,https://github.com/cesarb/constant_time_eq,2168
lazycell,142483459,A library providing a lazily filled Cell struct,2016-03-16 03:02:26.01169+00,2020-08-12 01:11:24.894126+00,http://indiv0.github.io/lazycell/lazycell/,,https://github.com/indiv0/lazycell,4465
is_terminal_polyfill,142244253,Polyfill for `is_terminal` stdlib feature for use with older MSRVs,2024-05-02 17:55:24.459203+00,2024-07-25 13:51:50.036695+00,,,https://github.com/polyfill-rs/is_terminal_polyfill,1227952
md-5,141857890,MD5 hash function,2017-04-06 15:22:37.614943+00,2025-09-02 23:07:02.23602+00,https://docs.rs/md-5,,https://github.com/RustCrypto/hashes,9834
dirs-sys,141525574,System-level helper functions for the dirs and directories crates.,2019-05-12 20:19:45.913839+00,2025-01-11 22:10:02.119353+00,,,https://github.com/dirs-dev/dirs-sys-rs,133850
dirs,141135945,A tiny low-level library that provides platform-specific standard locations of directories for co...,2015-11-24 00:11:15.764867+00,2025-01-12 17:19:23.58102+00,,,https://github.com/soc/dirs-rs,3485
base64ct,139581223,Pure Rust implementation of Base64 (RFC 4648) which avoids any usages of data-dependent branches/...,2021-01-21 19:26:20.080406+00,2025-06-04 15:41:05.915943+00,https://docs.rs/base64ct,https://github.com/RustCrypto/formats/tree/master/base64ct,https://github.com/RustCrypto/formats,345009
aes,139067674,Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael),2016-10-06 21:22:19.16404+00,2025-09-03 01:51:15.425472+00,https://docs.rs/aes,,https://github.com/RustCrypto/block-ciphers,6760
cexpr,138556152,A C expression parser and evaluator,2016-07-13 05:40:52.032296+00,2021-10-11 09:31:52.220209+00,https://docs.rs/cexpr/,,https://github.com/jethrogb/rust-cexpr,5655
const-oid,138437100,Const-friendly implementation of the ISO/IEC Object Identifier (OID) standard as defined in ITU X...,2020-08-04 15:51:24.822805+00,2025-04-08 12:32:00.586593+00,https://docs.rs/const-oid,https://github.com/RustCrypto/formats/tree/master/const-oid,https://github.com/RustCrypto/formats,272933
async-lock,138376834,Async synchronization primitives,2019-05-22 20:50:55.568552+00,2025-08-03 21:34:17.279002+00,,,https://github.com/smol-rs/async-lock,136163
cfg_aliases,137788780,A tiny utility to help save you a lot of effort with long winded `#[cfg()]` checks.,2020-04-05 15:56:29.360016+00,2024-05-10 16:29:14.741823+00,https://docs.rs/cfg_aliases,https://github.com/katharostech/cfg_aliases,https://github.com/katharostech/cfg_aliases,226611
multimap,137405850,A multimap implementation.,2015-04-24 16:19:20.896573+00,2025-05-11 19:27:20.62753+00,https://docs.rs/multimap,,https://github.com/havarnov/multimap,1939
wasm-bindgen-futures,135319929,Bridging the gap between Rust Futures and JavaScript Promises,2018-08-13 21:35:58.500192+00,2025-09-24 15:09:50.79843+00,https://docs.rs/wasm-bindgen-futures,https://wasm-bindgen.github.io/wasm-bindgen/,https://github.com/wasm-bindgen/wasm-bindgen/tree/master/crates/futures,79331
parking,135305936,Thread parking and unparking,2020-05-16 14:40:51.599742+00,2024-09-07 17:39:03.956479+00,https://docs.rs/parking,https://github.com/smol-rs/parking,https://github.com/smol-rs/parking,242384
matches,135256060,"A macro to evaluate, as a boolean, whether an expression matches a pattern.",2014-12-04 18:37:50.953491+00,2023-01-21 21:21:50.529117+00,https://docs.rs/matches/,,https://github.com/SimonSapin/rust-std-candidates,456
hyper-util,134904122,hyper utilities,2022-01-15 00:20:07.067925+00,2025-09-15 12:44:30.68807+00,https://docs.rs/hyper-util,https://hyper.rs,https://github.com/hyperium/hyper-util,514126
portable-atomic,134535181,"Portable atomic types including support for 128-bit atomics, atomic float, etc. ",2022-02-24 03:15:21.449241+00,2025-06-06 07:06:27.857081+00,,,https://github.com/taiki-e/portable-atomic,538233
hyper-timeout,134087027,"A connect, read and write timeout aware connector to be used with hyper Client.",2017-07-15 01:32:03.27574+00,2024-11-03 19:44:30.127358+00,https://github.com/hjr3/hyper-timeout,https://github.com/hjr3/hyper-timeout,https://github.com/hjr3/hyper-timeout,23408
windows_i686_gnullvm,134084328,Import lib for Windows,2024-04-02 12:16:37.468429+00,2025-01-07 15:42:46.222318+00,,,https://github.com/microsoft/windows-rs,1193440
arc-swap,134003968,Atomically swappable Arc,2018-04-16 07:00:39.250384+00,2024-03-23 10:40:35.441856+00,https://docs.rs/arc-swap,,https://github.com/vorner/arc-swap,60846
windows,133797286,Rust for Windows,2019-01-15 00:13:05.848555+00,2025-09-25 18:10:46.494047+00,https://microsoft.github.io/windows-docs-rs/,,https://github.com/microsoft/windows-rs,108581
http-body-util,132866327,Combinators and adapters for HTTP request or response bodies. ,2022-10-25 20:37:59.77338+00,2025-03-11 16:49:40.971587+00,https://docs.rs/http-body-util,,https://github.com/hyperium/http-body,697186
lru,132322881,A LRU cache implementation,2016-12-31 13:49:16.05674+00,2025-09-09 11:14:36.375828+00,https://docs.rs/lru/,https://github.com/jeromefroe/lru-rs,https://github.com/jeromefroe/lru-rs.git,7873
console,131939504,A terminal and console abstraction for Rust,2017-05-09 11:53:13.825478+00,2025-09-08 09:34:30.137206+00,https://docs.rs/console,https://github.com/console-rs/console,https://github.com/console-rs/console,13864
security-framework,131932321,Security.framework bindings for macOS and iOS,2015-11-27 22:17:03.528149+00,2025-09-28 11:12:21.792287+00,https://docs.rs/security_framework,https://lib.rs/crates/security_framework,https://github.com/kornelski/rust-security-framework,3520
pem,131171995,Parse and encode PEM-encoded data.,2016-02-27 18:57:14.24827+00,2025-02-21 14:37:03.781063+00,https://docs.rs/pem/,https://github.com/jcreekmore/pem-rs.git,https://github.com/jcreekmore/pem-rs.git,4311
tower-http,131001777,Tower middleware and utilities for HTTP clients and servers,2017-03-10 04:36:50.296787+00,2025-06-03 13:01:02.216502+00,,https://github.com/tower-rs/tower-http,https://github.com/tower-rs/tower-http,8912
libz-sys,130255535,Low-level bindings to the system libz library (also known as zlib).,2014-11-11 06:38:26.586055+00,2025-03-15 04:10:36.389218+00,,,https://github.com/rust-lang/libz-sys,39
mime_guess,130100274,A simple crate for detection of a file's MIME type by its extension.,2015-07-04 21:29:52.384284+00,2024-06-29 07:32:21.605352+00,https://docs.rs/mime_guess/,,https://github.com/abonander/mime_guess,2531
pest_derive,129421608,pest's derive macro,2017-08-15 16:12:13.19679+00,2025-09-12 08:34:20.782258+00,https://docs.rs/pest,https://pest.rs/,https://github.com/pest-parser/pest,27637
semver-parser,129050786,Parsing of the semver spec. ,2016-05-12 00:45:58.800365+00,2024-11-18 23:14:40.706078+00,https://docs.rs/semver-parser,https://github.com/steveklabnik/semver-parser,https://github.com/steveklabnik/semver-parser,5045
tinystr,128236424,A small ASCII-only bounded length string representation.,2019-08-10 03:37:58.905996+00,2025-02-26 18:22:16.205167+00,,,https://github.com/unicode-org/icu4x,155532
pest_meta,128228515,pest meta language parser and validator,2018-09-30 03:32:45.10254+00,2025-09-12 08:30:53.812933+00,https://docs.rs/pest,https://pest.rs/,https://github.com/pest-parser/pest,87220
pest_generator,128065856,pest code generator,2018-10-01 05:22:47.23663+00,2025-09-12 08:32:01.516833+00,https://docs.rs/pest,https://pest.rs/,https://github.com/pest-parser/pest,87359
os_str_bytes,127779778,Lossless functionality for platform-native strings ,2019-11-28 22:56:27.49795+00,2025-06-21 23:28:18.080376+00,,,https://github.com/dylni/os_str_bytes,185172
adler2,127460277,A simple clean-room implementation of the Adler-32 checksum,2024-08-04 20:25:28.045801+00,2025-06-09 22:31:53.608434+00,https://docs.rs/adler2/,,https://github.com/oyvindln/adler2,1325248
windows-core,127259152,Core type support for COM and Windows,2021-11-15 18:04:53.482359+00,2025-09-25 18:10:07.455306+00,,,https://github.com/microsoft/windows-rs,482269
bitvec,126803671,"Addresses memory by bits, for packed collections and bitfields",2018-06-28 06:28:54.134674+00,2022-07-10 03:51:17.38809+00,https://docs.rs/bitvec/latest/bitvec,https://bitvecto-rs.github.io/bitvec,https://github.com/bitvecto-rs/bitvec,72056
num,125943856,"A collection of numeric types and traits for Rust, including bigint, complex, rational, range ite...",2014-11-11 05:37:31.772551+00,2025-01-25 00:57:47.64245+00,https://docs.rs/num,https://github.com/rust-num/num,https://github.com/rust-num/num,9
phf_codegen,125347627,Codegen library for PHF types,2015-02-22 20:49:07.39679+00,2025-08-23 11:06:57.311913+00,,,https://github.com/rust-phf/rust-phf,1451
litemap,124899749,"A key-value Map implementation based on a flat, sorted Vec.",2021-02-23 01:00:09.087357+00,2025-05-07 20:55:31.893919+00,https://docs.rs/litemap,,https://github.com/unicode-org/icu4x,359238
radium,124853618,Portable interfaces for maybe-atomic types,2019-05-26 22:33:54.460244+00,2025-07-09 20:30:49.536165+00,https://docs.rs/radium,https://ferrilab.github.io/ferrilab,https://github.com/ferrilab/ferrilab,137211
polling,124459313,"Portable interface to epoll, kqueue, event ports, and IOCP",2020-08-06 13:17:41.554742+00,2025-09-14 14:00:51.946852+00,,,https://github.com/smol-rs/polling,273658
vec_map,124306061,A simple map based on a vector for small integer keys,2015-05-04 02:11:35.894139+00,2020-05-06 13:38:10.140555+00,https://contain-rs.github.io/vec-map/vec_map,https://github.com/contain-rs/vec-map,https://github.com/contain-rs/vec-map,2016
criterion,123464150,Statistics-driven micro-benchmarking library,2017-12-02 23:43:19.376458+00,2025-07-25 10:53:22.779656+00,,https://bheisler.github.io/criterion.rs/book/index.html,https://github.com/bheisler/criterion.rs,41500
io-lifetimes,122999748,A low-level I/O ownership and borrowing library,2021-06-12 18:57:46.951916+00,2025-08-06 19:20:58.73055+00,,,https://github.com/sunfishcode/io-lifetimes,409389
yoke,122834267,Abstraction allowing borrowed data to be carried along with the backing data it borrows from,2021-05-01 00:44:23.745711+00,2025-02-26 18:18:43.854151+00,,,https://github.com/unicode-org/icu4x,391760
num_enum,122734687,Procedural macros to make inter-operation between primitives and enums easier.,2018-11-12 00:11:02.762349+00,2025-06-22 19:15:30.830144+00,,,https://github.com/illicitonion/num_enum,96162
yoke-derive,122692556,Custom derive for the yoke crate,2021-07-02 19:25:03.408101+00,2025-02-26 18:18:38.537677+00,,,https://github.com/unicode-org/icu4x,417987
num_enum_derive,122597240,Internal implementation details for ::num_enum (Procedural macros to make inter-operation between...,2019-08-09 22:18:28.695283+00,2025-06-22 19:15:08.926666+00,,,https://github.com/illicitonion/num_enum,155479
zerofrom,122435499,ZeroFrom trait for constructing,2022-04-06 00:39:45.094863+00,2025-02-26 18:22:02.789601+00,,,https://github.com/unicode-org/icu4x,562853
zerofrom-derive,121949191,Custom derive for the zerofrom crate,2022-04-06 00:39:34.629658+00,2025-02-26 18:21:58.794145+00,,,https://github.com/unicode-org/icu4x,562852
tap,121778870,Generic extensions for tapping values in Rust,2017-06-24 22:48:02.47159+00,2021-02-13 02:43:25.525644+00,https://docs.rs/tap,https://github.com/myrrlyn/tap,https://github.com/myrrlyn/tap,20530
csv,121772922,Fast CSV parsing with support for serde.,2014-11-21 00:11:41.885162+00,2024-11-09 12:51:17.632722+00,https://docs.rs/csv,https://github.com/BurntSushi/rust-csv,https://github.com/BurntSushi/rust-csv,192
zerovec,121621475,Zero-copy vector backed by a byte array,2021-04-19 18:57:13.970932+00,2025-08-06 02:21:52.840716+00,,,https://github.com/unicode-org/icu4x,386783
funty,120409181,Trait generalization over the primitive types,2020-02-24 03:26:45.809913+00,2023-01-29 04:40:16.975264+00,https://docs.rs/funty,https://ferrilab.github.io/ferrilab,https://github.com/ferrilab/ferrilab,211920
writeable,120105030,A more efficient alternative to fmt::Display,2020-11-12 23:11:03.421547+00,2025-02-26 18:25:13.896478+00,,,https://github.com/unicode-org/icu4x,311783
wyz,120099002,myrrlyn’s utility collection,2019-09-22 02:52:16.93238+00,2022-11-16 04:54:37.18194+00,https://docs.rs/wyz,https://myrrlyn.net/crates/wyz,https://github.com/myrrlyn/wyz,166684
csv-core,120090851,Bare bones CSV parsing with no_std support.,2017-05-23 01:28:33.952564+00,2025-02-12 16:08:33.328351+00,https://docs.rs/csv-core,https://github.com/BurntSushi/rust-csv,https://github.com/BurntSushi/rust-csv,15639
zerovec-derive,119601144,Custom derive for the zerovec crate,2021-12-11 07:34:11.602873+00,2025-02-26 18:21:41.649639+00,,,https://github.com/unicode-org/icu4x,496142
icu_provider,119518519,Trait and struct definitions for the ICU data provider,2020-10-15 15:31:04.542638+00,2025-05-07 20:57:25.26868+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,300037
dyn-clone,119509328,Clone trait that is dyn-compatible,2019-12-23 06:48:24.186057+00,2025-07-27 19:29:46.625527+00,https://docs.rs/dyn-clone,,https://github.com/dtolnay/dyn-clone,191672
icu_properties_data,119240610,Data for the icu_properties crate,2023-09-23 18:51:13.162401+00,2025-05-19 16:10:56.951221+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,981428
icu_normalizer_data,118522833,Data for the icu_normalizer crate,2023-09-23 18:52:20.250563+00,2025-05-07 20:58:30.758011+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,981432
tungstenite,118137751,Lightweight stream-based WebSocket implementation,2017-03-17 16:50:05.505222+00,2025-09-24 12:36:16.292804+00,https://docs.rs/tungstenite/0.28.0,https://github.com/snapview/tungstenite-rs,https://github.com/snapview/tungstenite-rs,9019
security-framework-sys,118005406,Apple `Security.framework` low-level FFI bindings,2015-11-27 22:16:51.749519+00,2025-09-08 00:12:21.16768+00,,https://lib.rs/crates/security-framework-sys,https://github.com/kornelski/rust-security-framework,3519
icu_properties,117811885,Definitions for Unicode properties,2021-11-02 00:17:19.235475+00,2025-05-19 16:11:43.02172+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,475519
icu_collections,117257717,Collection of API for use in ICU libraries.,2022-08-05 00:53:11.818242+00,2025-05-07 20:57:07.340929+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,639084
schannel,116956874,"Schannel bindings for rust, allowing SSL/TLS (e.g. https) without openssl",2015-10-19 14:53:41.310471+00,2025-09-09 08:44:18.754013+00,https://docs.rs/schannel/0.1.19/schannel/,,https://github.com/steffengy/schannel-rs,3252
arrayref,116924379,Macros to take array references of slices,2015-08-24 18:49:31.735963+00,2024-09-14 12:24:40.788186+00,https://docs.rs/arrayref,,https://github.com/droundy/arrayref,2913
icu_normalizer,116695717,API for normalizing text into Unicode Normalization Forms,2021-04-29 20:11:06.762323+00,2025-05-07 20:58:37.983516+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,391255
proc-macro-hack,115732481,Procedural macros in expression position,2016-12-30 22:31:38.178246+00,2022-12-19 18:23:34.8741+00,,,https://github.com/dtolnay/proc-macro-hack,7862
rand_xorshift,114537399,Xorshift random number generator ,2018-10-04 09:45:08.645922+00,2025-01-27 14:40:36.244226+00,https://docs.rs/rand_xorshift,https://rust-random.github.io/book,https://github.com/rust-random/rngs,87993
android_system_properties,114523650,Minimal Android system properties wrapper,2022-06-27 18:37:55.464346+00,2022-08-30 10:42:28.363547+00,https://docs.rs/android_system_properties,https://github.com/nical/android_system_properties,https://github.com/nical/android_system_properties,614264
cast,114191266,"Ergonomic, checked cast functions for primitive types",2016-02-07 20:43:08.957175+00,2021-09-04 11:07:33.449935+00,https://docs.rs/cast,,https://github.com/japaric/cast.rs,4120
utf8_iter,113775920,Iterator by char over potentially-invalid UTF-8 in &[u8],2022-04-19 08:36:06.371431+00,2023-12-01 17:26:51.542538+00,https://docs.rs/utf8_iter/,https://docs.rs/utf8_iter/,https://github.com/hsivonen/utf8_iter,570230
sha-1,113723873,SHA-1 hash function. This crate is deprecated! Use the sha1 crate instead.,2017-04-06 15:22:59.179268+00,2022-11-28 15:23:38.331317+00,https://docs.rs/sha1,,https://github.com/RustCrypto/hashes,9835
winreg,113659425,Rust bindings to MS Windows Registry API,2015-04-17 22:26:16.70219+00,2025-01-12 22:15:39.272222+00,https://docs.rs/winreg,,https://github.com/gentoo90/winreg-rs,1886
opentelemetry,113595850,OpenTelemetry API for Rust,2019-11-08 20:41:11.251122+00,2025-09-25 21:44:43.202508+00,,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry,179476
idna_adapter,113460483,Back end adapter for idna,2024-07-03 12:10:46.447319+00,2025-05-08 15:25:54.88349+00,https://docs.rs/idna_adapter/latest/idna_adapter/,https://docs.rs/crate/idna_adapter/latest,https://github.com/hsivonen/idna_adapter,1290460
derivative,113394761,A set of alternative `derive` attributes for Rust,2016-10-07 23:35:58.354746+00,2021-01-23 17:05:39.339355+00,https://mcarton.github.io/rust-derivative/,,https://github.com/mcarton/rust-derivative,6780
async-io,113278699,Async I/O and timers,2019-05-18 10:59:20.102722+00,2025-09-14 14:03:50.20151+00,,,https://github.com/smol-rs/async-io,135067
pbkdf2,113246926,Generic implementation of PBKDF2,2017-02-28 15:23:53.287798+00,2025-09-03 15:33:24.506633+00,https://docs.rs/pbkdf2,https://github.com/RustCrypto/password-hashes/tree/master/pbkdf2,https://github.com/RustCrypto/password-hashes,8735
urlencoding,113117992,A Rust library for doing URL percentage encoding.,2016-09-15 10:44:56.997351+00,2023-07-21 15:12:17.534094+00,,https://lib.rs/urlencoding,https://github.com/kornelski/rust_urlencoding,6499
combine,112732734,Fast parser combinators on arbitrary streams with zero-copy support.,2015-07-17 14:19:14.002384+00,2024-04-10 09:56:27.206101+00,https://docs.rs/combine,,https://github.com/Marwes/combine,2624
tonic-build,112172184,Codegen module of `tonic` gRPC implementation. ,2019-09-10 15:56:35.568394+00,2025-09-02 17:42:29.421877+00,,https://github.com/hyperium/tonic,https://github.com/hyperium/tonic,163853
hashlink,110513249,HashMap-like containers that hold their key-value pairs in a user controllable order,2019-07-06 10:17:21.361009+00,2024-12-09 11:48:51.357012+00,https://docs.rs/hashlink,,https://github.com/kyren/hashlink,147087
oorandom,110206293,"A tiny, robust PRNG implementation.",2019-07-15 22:52:00.911246+00,2025-03-07 13:10:16.263607+00,,,https://hg.sr.ht/~icefox/oorandom,149261
tracing-serde,110055267,A compatibility layer for serializing trace data with `serde` ,2019-06-27 22:08:23.362922+00,2024-11-27 21:24:29.88464+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,144112
num_threads,109591644,A minimal library that determines the number of running threads for the current process.,2021-11-15 05:19:12.536893+00,2024-02-15 02:51:38.770784+00,,,https://github.com/jhpratt/num_threads,481996
rand_hc,109486627,HC128 random number generator ,2018-10-30 09:53:01.939542+00,2025-01-27 14:40:07.647563+00,https://docs.rs/rand_hc,https://rust-random.github.io/book,https://github.com/rust-random/rngs,93557
criterion-plot,109396463,Criterion's plotting library,2016-02-26 23:04:18.130991+00,2025-07-25 10:53:04.859333+00,,,https://github.com/bheisler/criterion.rs,4300
tinytemplate,109374537,"Simple, lightweight template engine",2019-01-19 16:42:26.192003+00,2021-03-04 00:05:08.069396+00,,,https://github.com/bheisler/TinyTemplate,109540
unindent,109311755,Remove a column of leading whitespace from a string,2016-07-17 21:11:22.557375+00,2025-03-03 23:32:26.449483+00,https://docs.rs/unindent,,https://github.com/dtolnay/indoc,5698
utf-8,109141571,"Incremental, zero-copy UTF-8 decoding with error handling",2015-10-29 16:30:25.738814+00,2021-04-16 14:55:34.691346+00,,,https://github.com/SimonSapin/rust-utf8,3328
brotli,108885428,A brotli compressor and decompressor that with an interface avoiding the rust stdlib. This makes ...,2015-11-30 16:41:44.747454+00,2025-08-16 09:42:18.758651+00,https://docs.rs/brotli/,https://github.com/dropbox/rust-brotli,https://github.com/dropbox/rust-brotli,3538
pyo3-build-config,108606806,Build configuration for the PyO3 ecosystem,2021-05-25 06:25:05.705827+00,2025-08-29 18:52:36.012294+00,,https://github.com/pyo3/pyo3,https://github.com/pyo3/pyo3,401748
crypto-bigint,108547138,Pure Rust implementation of a big integer library which has been designed from the ground-up for ...,2021-04-30 19:41:39.805312+00,2025-09-29 18:11:15.068262+00,,,https://github.com/RustCrypto/crypto-bigint,391677
pem-rfc7468,108354270,"PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a strict subset of the o...",2021-02-16 16:40:33.169667+00,2025-05-30 20:03:07.797334+00,,https://github.com/RustCrypto/formats/tree/master/pem-rfc7468,https://github.com/RustCrypto/formats,356052
brotli-decompressor,107967628,A brotli decompressor that with an interface avoiding the rust stdlib. This makes it suitable for...,2017-04-25 08:09:43.737166+00,2025-04-20 01:15:09.941363+00,https://github.com/dropbox/rust-brotli-decompressor/blob/master/README.md,https://github.com/dropbox/rust-brotli-decompressor,https://github.com/dropbox/rust-brotli-decompressor,11930
globset,107471240,Cross platform single glob and glob set matching. Glob set matching is the process of matching on...,2016-10-11 00:07:33.117536+00,2025-02-27 17:47:05.577701+00,https://docs.rs/globset,https://github.com/BurntSushi/ripgrep/tree/master/crates/globset,https://github.com/BurntSushi/ripgrep/tree/master/crates/globset,6811
yansi,107396371,A dead simple ANSI terminal color painting library.,2017-06-02 04:14:59.893274+00,2024-03-13 07:48:07.624195+00,https://docs.rs/yansi,,https://github.com/SergioBenitez/yansi,17267
zeroize_derive,107340058,Custom derive support for zeroize,2019-03-23 21:12:27.53753+00,2023-03-31 02:07:19.386562+00,,,https://github.com/RustCrypto/utils/tree/master/zeroize/derive,123393
tiny-keccak,106909709,An implementation of Keccak derived functions.,2015-11-27 10:24:04.913465+00,2020-04-01 14:34:13.119797+00,,https://github.com/debris/tiny-keccak,,3511
cargo_metadata,106839965,structured access to the output of `cargo metadata`,2017-01-24 10:16:04.030507+00,2025-09-29 08:13:15.359821+00,,,https://github.com/oli-obk/cargo_metadata,8200
iana-time-zone-haiku,106839020,iana-time-zone support crate for Haiku OS,2022-10-08 17:07:12.928972+00,2023-05-12 08:43:45.406909+00,,,https://github.com/strawlab/iana-time-zone,683649
unsafe-libyaml,106309995,libyaml transpiled to rust by c2rust,2022-07-03 16:43:10.793887+00,2024-03-17 05:44:18.590756+00,https://docs.rs/unsafe-libyaml,,https://github.com/dtolnay/unsafe-libyaml,618431
predicates,105403169,An implementation of boolean-valued predicate functions.,2017-06-02 17:07:01.532559+00,2024-12-19 18:53:32.36085+00,https://docs.rs/predicates,https://github.com/assert-rs/predicates-rs,https://github.com/assert-rs/predicates-rs,17355
fallible-iterator,105373049,Fallible iterator traits,2016-05-06 16:53:35.239726+00,2023-05-22 23:12:37.497125+00,,,https://github.com/sfackler/rust-fallible-iterator,4988
anstyle-wincon,105350051,Styling legacy Windows terminals,2023-03-08 21:17:38.191878+00,2025-08-05 17:21:49.812089+00,,,https://github.com/rust-cli/anstyle.git,805089
valuable,105244065,"Object-safe value inspection, used to pass un-typed structured data across trait-object boundaries. ",2021-03-09 18:32:03.666997+00,2025-01-17 00:46:34.256238+00,,,https://github.com/tokio-rs/valuable,366443
scoped-tls,104948501,Library implementation of the standard library's old `scoped_thread_local!` macro for providing s...,2016-03-23 16:35:10.496904+00,2022-10-31 15:01:56.394137+00,https://docs.rs/scoped-tls,https://github.com/alexcrichton/scoped-tls,https://github.com/alexcrichton/scoped-tls,4532
remove_dir_all,104657260,"A safe, reliable implementation of remove_dir_all for Windows",2017-03-29 00:02:22.651612+00,2024-11-22 13:28:04.656448+00,,,https://github.com/XAMPPRocky/remove_dir_all.git,9220
xattr,104148736,unix extended filesystem attributes,2015-07-10 16:09:41.699659+00,2025-09-21 02:52:23.909474+00,https://docs.rs/xattr,,https://github.com/Stebalien/xattr,2576
tokio-tungstenite,104086767,"Tokio binding for Tungstenite, the Lightweight stream-based WebSocket implementation",2017-03-17 17:27:49.033103+00,2025-09-25 10:18:16.682054+00,https://docs.rs/tokio-tungstenite/0.28.0,https://github.com/snapview/tokio-tungstenite,https://github.com/snapview/tokio-tungstenite,9020
hostname,103937803,Cross-platform system's host name functions,2016-12-13 12:47:54.090323+00,2025-04-08 08:10:29.607795+00,,,https://github.com/svartalf/hostname,7563
inout,103851138,Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.,2021-08-13 16:42:36.965539+00,2025-09-02 18:32:32.264735+00,https://docs.rs/inout,,https://github.com/RustCrypto/utils,435774
pyo3,103641876,Bindings to Python interpreter,2017-07-23 18:28:44.917432+00,2025-08-29 18:53:19.882757+00,https://docs.rs/crate/pyo3/,https://github.com/pyo3/pyo3,https://github.com/pyo3/pyo3,24723
camino,103134490,UTF-8 paths,2021-02-23 18:20:23.469325+00,2025-09-29 18:14:51.369151+00,https://docs.rs/camino,,https://github.com/camino-rs/camino,359582
hkdf,103123782,HMAC-based Extract-and-Expand Key Derivation Function (HKDF),2015-01-03 00:12:58.334169+00,2025-09-18 15:32:01.142127+00,,https://github.com/RustCrypto/KDFs/,https://github.com/RustCrypto/KDFs/,688
block-padding,103070386,Padding and unpadding of messages divided into blocks.,2018-02-20 13:54:53.959408+00,2025-09-02 18:32:14.67975+00,https://docs.rs/block-padding,,https://github.com/RustCrypto/utils,52057
twox-hash,102899314,A Rust implementation of the XXHash and XXH3 algorithms,2015-05-09 03:04:03.255761+00,2025-09-03 17:14:01.768995+00,https://docs.rs/twox-hash/,,https://github.com/shepmaster/twox-hash,2059
serde_bytes,102725191,Optimized handling of `&[u8]` and `Vec<u8>` for Serde,2017-04-08 05:15:16.364612+00,2025-09-15 12:15:42.737874+00,https://docs.rs/serde_bytes,,https://github.com/serde-rs/bytes,9991
cookie,102031924,"HTTP cookie parsing and cookie jar management. Supports signed and private (encrypted, authentica...",2014-11-22 04:01:16.92447+00,2024-03-25 09:39:10.390155+00,https://docs.rs/cookie,,https://github.com/SergioBenitez/cookie-rs,326
plotters,101720811,A Rust drawing library focus on data plotting for both WASM and native applications,2019-04-24 17:22:34.929046+00,2024-09-08 14:48:03.071447+00,,https://plotters-rs.github.io/,https://github.com/plotters-rs/plotters,129910
pyo3-macros-backend,101426087,Code generation for PyO3 package,2020-12-20 10:04:57.813482+00,2025-08-29 18:52:47.472754+00,,https://github.com/pyo3/pyo3,https://github.com/pyo3/pyo3,324812
pyo3-macros,101419636,Proc macros for PyO3 package,2020-12-20 10:05:29.097307+00,2025-08-29 18:52:58.605313+00,,https://github.com/pyo3/pyo3,https://github.com/pyo3/pyo3,324813
diff,101145708,An LCS based slice and string diffing implementation.,2015-04-30 08:47:27.336024+00,2022-06-29 01:52:10.83627+00,https://docs.rs/diff,https://github.com/utkarshkukreti/diff.rs,https://github.com/utkarshkukreti/diff.rs,1993
crc,101120235,Rust implementation of CRC with support of various standards,2015-03-15 19:05:37.390081+00,2025-05-07 20:36:16.992994+00,https://docs.rs/crc,,https://github.com/mrhooray/crc-rs.git,1585
webpki,100893172,Web PKI X.509 Certificate Verification.,2016-08-16 01:33:53.951242+00,2023-10-09 00:31:09.299041+00,,,https://github.com/briansmith/webpki,5982
cmake,100589965,A build dependency for running `cmake` to build a native library ,2015-07-31 23:01:59.165496+00,2025-02-10 00:36:35.625126+00,https://docs.rs/cmake,https://github.com/rust-lang/cmake-rs,https://github.com/rust-lang/cmake-rs,2725
tar,100439866,A Rust implementation of a TAR file reader and writer. This library does not currently handle com...,2014-11-11 00:22:07.358495+00,2025-02-22 00:59:08.196026+00,https://docs.rs/tar,https://github.com/alexcrichton/tar-rs,https://github.com/alexcrichton/tar-rs,6
terminal_size,99537941,Gets the size of your Linux or Windows terminal,2015-08-26 19:10:31.722938+00,2025-08-11 18:07:29.258865+00,https://docs.rs/terminal_size,,https://github.com/eminence/terminal-size,2928
event-listener-strategy,99434598,Block or poll on event_listener easily,2023-09-11 15:35:13.879946+00,2025-03-27 17:31:33.741698+00,,,https://github.com/smol-rs/event-listener-strategy,969726
colored,99240283,The most simple way to add colors in your terminal,2016-03-13 17:27:11.931945+00,2025-01-07 14:10:54.236785+00,,https://github.com/mackwic/colored,https://github.com/mackwic/colored,4445
zip,98837229,Library to support the reading and writing of zip files. ,2014-11-21 08:59:07.181279+00,2025-09-11 14:51:50.2155+00,,,https://github.com/zip-rs/zip2.git,238
plotters-backend,98496036,Plotters Backend API,2020-01-28 19:52:26.933094+00,2024-09-08 14:46:47.868379+00,,https://plotters-rs.github.io,https://github.com/plotters-rs/plotters,202831
plotters-svg,97910329,Plotters SVG backend,2020-01-28 19:57:33.837634+00,2024-09-08 14:47:23.833784+00,,https://plotters-rs.github.io,https://github.com/plotters-rs/plotters.git,202835
signal-hook,97853937,Unix signal handling,2018-06-22 17:38:56.065914+00,2025-05-09 10:44:51.583017+00,https://docs.rs/signal-hook,,https://github.com/vorner/signal-hook,71297
dirs-sys-next,97372660,system-level helper functions for the dirs and directories crates,2020-05-06 15:47:35.608863+00,2021-01-09 05:59:36.540586+00,,,https://github.com/xdg-rs/dirs/tree/master/dirs-sys,238232
alloc-no-stdlib,96524806,A dynamic allocator that may be used with or without the stdlib. This allows a package with nostd...,2016-05-24 07:56:32.764714+00,2022-09-12 05:29:48.261627+00,https://raw.githubusercontent.com/dropbox/rust-alloc-no-stdlib/master/tests/lib.rs,https://github.com/dropbox/rust-alloc-no-stdlib,https://github.com/dropbox/rust-alloc-no-stdlib,5171
alloc-stdlib,96229464,A dynamic allocator example that may be used with the stdlib,2018-10-28 17:33:28.248102+00,2022-09-12 05:30:14.880111+00,https://raw.githubusercontent.com/dropbox/rust-alloc-no-stdlib/master/alloc-stdlib/tests/lib.rs,https://github.com/dropbox/rust-alloc-no-stdlib,https://github.com/dropbox/rust-alloc-no-stdlib,93151
num-derive,96124242,Numeric syntax extensions,2016-09-30 06:43:39.517757+00,2024-02-06 21:00:45.637968+00,https://docs.rs/num-derive,https://github.com/rust-num/num-derive,https://github.com/rust-num/num-derive,6663
crypto-mac,95575428,Trait for Message Authentication Code (MAC) algorithms,2016-10-14 15:22:47.584215+00,2021-07-20 13:10:34.870407+00,https://docs.rs/crypto-mac,,https://github.com/RustCrypto/traits,6848
async-task,94904762,Task abstraction for building executors,2019-05-07 14:56:54.628954+00,2024-04-27 23:06:20.560257+00,,,https://github.com/smol-rs/async-task,132603
curve25519-dalek,94566946,A pure-Rust implementation of group operations on ristretto255 and Curve25519,2016-12-08 05:13:57.620503+00,2025-09-04 06:08:47.477839+00,https://docs.rs/curve25519-dalek,https://github.com/dalek-cryptography/curve25519-dalek,https://github.com/dalek-cryptography/curve25519-dalek/tree/main/curve25519-dalek,7509
serde_path_to_error,94452688,Path to the element that failed to deserialize,2019-01-07 00:04:58.762298+00,2025-09-15 15:05:54.817744+00,https://docs.rs/serde_path_to_error,,https://github.com/dtolnay/path-to-error,105940
pretty_assertions,94230723,"Overwrite `assert_eq!` and `assert_ne!` with drop-in replacements, adding colorful diffs.",2017-03-26 23:33:43.680768+00,2024-09-15 13:11:03.148906+00,https://docs.rs/pretty_assertions,,https://github.com/rust-pretty-assertions/rust-pretty-assertions,9165
peeking_take_while,93631540,"Like `Iterator::take_while`, but calls the predicate on a peeked value. This allows you to use `I...",2017-05-17 00:42:53.962618+00,2021-09-03 17:58:50.443671+00,,,https://github.com/fitzgen/peeking_take_while,14874
predicates-core,93606560,An API for boolean-valued predicate functions.,2018-07-30 23:24:52.223852+00,2024-12-19 18:53:29.925148+00,https://docs.rs/predicates-core,https://github.com/assert-rs/predicates-rs/tree/master/crates/core,https://github.com/assert-rs/predicates-rs/tree/master/crates/core,76727
android-tzdata,93533488,Parser for the Android-specific tzdata file,2023-03-04 18:26:25.068003+00,2023-03-05 09:25:18.541477+00,,,https://github.com/RumovZ/android-tzdata,800738
predicates-tree,93416520,Render boolean-valued predicate functions results as a tree.,2018-07-30 23:25:09.954627+00,2024-12-19 18:53:32.66775+00,https://docs.rs/predicates-tree,https://github.com/assert-rs/predicates-rs/tree/master/crates/tree,https://github.com/assert-rs/predicates-rs/tree/master/crates/tree,76728
waker-fn,92748318,Convert closures into wakers,2020-05-16 17:22:12.647555+00,2024-05-13 00:24:30.171231+00,https://docs.rs/waker-fn,https://github.com/smol-rs/waker-fn,https://github.com/smol-rs/waker-fn,242430
flume,92349228,A blazingly fast multi-producer channel,2019-07-31 00:18:26.586068+00,2024-10-19 13:54:21.390653+00,https://docs.rs/flume,,https://github.com/zesterer/flume,153104
cargo-platform,92063508,Cargo's representation of a target platform.,2019-09-27 17:38:56.154489+00,2025-09-18 13:32:43.753306+00,https://docs.rs/cargo-platform,https://github.com/rust-lang/cargo,https://github.com/rust-lang/cargo,168185
ciborium-io,91931077,Simplified Read/Write traits for no_std usage,2021-11-21 19:32:55.708129+00,2024-01-24 03:02:36.662214+00,,https://github.com/enarx/ciborium,https://github.com/enarx/ciborium,485425
ciborium,91882214,serde implementation of CBOR using ciborium-basic,2020-12-03 22:33:28.171774+00,2024-01-24 03:04:25.973012+00,,https://github.com/enarx/ciborium,https://github.com/enarx/ciborium,319466
ciborium-ll,91870980,Low-level CBOR codec primitives,2021-11-21 19:33:03.017685+00,2024-01-24 03:03:42.992548+00,,https://github.com/enarx/ciborium,https://github.com/enarx/ciborium,485426
pyo3-ffi,91427190,Python-API bindings for the PyO3 ecosystem,2022-02-27 23:20:55.736914+00,2025-08-29 18:53:04.82671+00,,https://github.com/pyo3/pyo3,https://github.com/pyo3/pyo3,540548
rsa,90645973,Pure Rust RSA implementation,2018-07-24 08:31:14.033066+00,2025-09-30 04:20:41.318219+00,https://docs.rs/rsa,,https://github.com/RustCrypto/RSA,75737
futures-timer,90562223,Timeouts for futures. ,2017-09-27 17:15:24.946049+00,2024-02-22 14:10:54.981743+00,https://docs.rs/futures-timer,https://github.com/async-rs/futures-timer,https://github.com/async-rs/futures-timer,33676
tracing-futures,90259921,Utilities for instrumenting `futures` with `tracing`. ,2019-06-27 22:04:57.142995+00,2021-02-16 21:17:03.683426+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,144099
rand_pcg,90060860,Selected PCG random number generators ,2018-10-04 09:46:15.905354+00,2025-01-27 13:38:15.140218+00,https://docs.rs/rand_pcg,https://rust-random.github.io/book,https://github.com/rust-random/rand,87994
phf_macros,90016013,Macros to generate types in the phf crate,2015-01-25 04:01:23.56734+00,2025-08-23 11:06:20.808422+00,,,https://github.com/rust-phf/rust-phf,872
ff,89019181,Library for building and interfacing with finite fields,2017-06-26 05:13:25.406384+00,2025-04-17 17:02:42.919236+00,https://docs.rs/ff/,https://github.com/zkcrypto/ff,https://github.com/zkcrypto/ff,20737
serde_repr,88482113,Derive Serialize and Deserialize that delegates to the underlying repr of a C-like enum.,2019-01-13 01:32:16.572279+00,2025-03-04 00:16:18.920627+00,https://docs.rs/serde_repr,,https://github.com/dtolnay/serde-repr,108260
tracing-opentelemetry,88227653,OpenTelemetry integration for tracing,2019-11-20 19:44:36.014947+00,2025-09-30 18:05:26.072715+00,,https://github.com/tokio-rs/tracing-opentelemetry,https://github.com/tokio-rs/tracing-opentelemetry,183053
termtree,87984008,Visualize tree-like data on the command-line,2021-10-07 18:21:36.306218+00,2024-07-25 14:42:40.978498+00,https://docs.rs/termtree,https://github.com/rust-cli/termtree,https://github.com/rust-cli/termtree,461899
async-compression,87903182,Adaptors between compression crates and Rust's modern asynchronous IO types. ,2019-05-14 17:10:23.835669+00,2025-09-26 12:04:04.796165+00,,,https://github.com/Nullus157/async-compression,134350
blocking,87704274,A thread pool for isolating blocking I/O in async programs,2019-06-15 23:09:34.273937+00,2025-07-06 05:56:38.164932+00,,,https://github.com/smol-rs/blocking,141416
dirs-next,87690805,A tiny low-level library that provides platform-specific standard locations of directories for co...,2020-05-06 15:46:40.488452+00,2020-10-22 03:34:04.786339+00,,,https://github.com/xdg-rs/dirs,238231
group,87526336,Elliptic curve group traits and utilities,2018-07-02 14:00:15.955345+00,2025-04-17 17:51:55.292069+00,https://docs.rs/group/,https://github.com/zkcrypto/group,https://github.com/zkcrypto/group,72569
schemars,87447211,Generate JSON Schemas from Rust code,2019-08-08 18:03:22.855604+00,2025-07-06 09:34:16.619397+00,,https://graham.cool/schemars/,https://github.com/GREsau/schemars,155083
erased-serde,87429910,Type-erased Serialize and Serializer traits,2016-08-21 19:27:33.182632+00,2025-09-14 15:54:11.092433+00,https://docs.rs/erased-serde,,https://github.com/dtolnay/erased-serde,6054
wait-timeout,87400616,A crate to wait on a child process with a timeout specified across Unix and Windows platforms. ,2015-09-08 00:53:20.231605+00,2025-02-03 12:22:33.904538+00,https://docs.rs/wait-timeout,https://github.com/alexcrichton/wait-timeout,https://github.com/alexcrichton/wait-timeout,3000
yaml-rust,87235363,The missing YAML 1.2 parser for rust,2015-06-04 08:32:01.133062+00,2021-01-03 19:58:30.295058+00,https://docs.rs/yaml-rust,http://chyh1990.github.io/yaml-rust/,https://github.com/chyh1990/yaml-rust,2304
aead,86640070,"Traits for Authenticated Encryption with Associated Data (AEAD) algorithms, such as AES-GCM as Ch...",2016-10-06 21:19:33.744879+00,2025-09-02 19:35:43.571943+00,https://docs.rs/aead,,https://github.com/RustCrypto/traits,6759
fs_extra,86079171,Expanding std::fs and std::io. Recursively copy folders with information about process and much m...,2017-02-08 09:23:29.605076+00,2023-02-03 17:59:27.093041+00,https://docs.rs/fs_extra,https://github.com/webdesus/fs_extra,https://github.com/webdesus/fs_extra,8431
pkcs1,85940141,Pure Rust implementation of Public-Key Cryptography Standards (PKCS) #1: RSA Cryptography Specifi...,2020-06-12 14:01:05.920956+00,2025-09-15 22:56:14.318972+00,,https://github.com/RustCrypto/formats/tree/master/pkcs1,https://github.com/RustCrypto/formats,253269
elliptic-curve,85199338,"General purpose Elliptic Curve Cryptography (ECC) support, including types and traits for represe...",2019-12-05 17:07:27.394753+00,2025-09-29 18:56:59.528514+00,https://docs.rs/elliptic-curve,,https://github.com/RustCrypto/traits,186697
bzip2-sys,84749300,Bindings to libbzip2 for bzip2 compression and decompression exposed as Reader/Writer streams. ,2014-11-13 06:35:17.703582+00,2025-02-28 13:56:25.581313+00,https://docs.rs/bzip2-sys,https://github.com/alexcrichton/bzip2-rs,https://github.com/alexcrichton/bzip2-rs,76
ctr,84725925,CTR block modes of operation,2018-07-30 10:37:27.652417+00,2025-09-03 02:58:31.307533+00,https://docs.rs/ctr,,https://github.com/RustCrypto/block-modes,76594
ctor,84536384,__attribute__((constructor)) for Rust,2018-12-06 05:31:29.96046+00,2025-08-10 17:10:11.214518+00,,,https://github.com/mmastrac/rust-ctor,100353
doc-comment,84512357,Macro to generate doc comments,2018-03-29 08:35:21.939899+00,2020-07-01 19:18:24.882328+00,http://docs.rs/crate/doc-comment,,https://github.com/GuillaumeGomez/doc-comment,58042
ecdsa,84175043,Pure Rust implementation of the Elliptic Curve Digital Signature Algorithm (ECDSA) as specified i...,2018-10-30 23:40:45.698779+00,2025-09-13 15:02:48.494236+00,,https://github.com/RustCrypto/signatures/tree/master/ecdsa,https://github.com/RustCrypto/signatures,93701
base16ct,83930432,Pure Rust implementation of Base16 a.k.a hexadecimal (RFC 4648) which avoids any usages of data-d...,2022-01-11 22:12:56.812454+00,2025-08-20 22:48:48.658308+00,https://docs.rs/base16ct,https://github.com/RustCrypto/formats/tree/master/base16ct,https://github.com/RustCrypto/formats,512489
opentelemetry_sdk,83678480,The SDK for the OpenTelemetry metrics collection and distributed tracing framework,2019-06-27 23:25:54.841142+00,2025-09-25 21:47:10.477824+00,,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-sdk,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-sdk,144157
crc-catalog,83412444,Catalog of CRC algorithms (generated from http://reveng.sourceforge.net/crc-catalogue) expressed ...,2019-12-14 08:16:01.779921+00,2023-11-04 18:43:50.473545+00,,,https://github.com/akhilles/crc-catalog.git,189322
tokio-io-timeout,83390004,Tokio wrappers which apply timeouts to IO operations,2017-06-17 03:30:29.00987+00,2025-07-20 00:47:43.200104+00,,,https://github.com/sfackler/tokio-io-timeout,19270
fancy-regex,83217770,"An implementation of regexes, supporting a relatively rich set of features, including backreferen...",2017-02-05 15:58:07.799444+00,2025-09-19 02:13:36.612111+00,https://docs.rs/fancy-regex,,https://github.com/fancy-regex/fancy-regex,8398
redox_users,83211884,A Rust library to access Redox users and groups functionality,2018-03-28 18:15:46.838444+00,2025-07-31 15:00:26.808829+00,https://docs.rs/redox_users,,https://gitlab.redox-os.org/redox-os/users,57940
anes,83065700,ANSI Escape Sequences provider & parser,2019-10-25 14:54:21.963121+00,2025-07-01 14:49:33.393964+00,https://docs.rs/anes/,,https://github.com/qwandor/anes-rs,175630
dunce,82844940,"Normalize Windows paths to the most compatible format, avoiding UNC where possible",2017-11-22 13:49:37.027184+00,2024-08-04 01:36:46.487482+00,https://docs.rs/dunce,https://lib.rs/crates/dunce,https://gitlab.com/kornelski/dunce,40228
headers,82717062,typed HTTP headers,2016-08-09 22:30:40.796094+00,2025-06-02 12:35:00.402093+00,,https://hyper.rs,https://github.com/hyperium/headers,5936
pathdiff,82119364,Library for diffing paths to obtain relative paths,2017-09-20 00:06:24.61598+00,2024-11-25 18:15:15.30401+00,https://docs.rs/pathdiff/,,https://github.com/Manishearth/pathdiff,32355
windows-result,82018702,Windows error handling,2024-02-02 16:47:12.691453+00,2025-09-04 20:21:47.695688+00,,,https://github.com/microsoft/windows-rs,1124556
universal-hash,82004415,Traits which describe the functionality of universal hash functions (UHFs),2019-08-30 00:52:43.192602+00,2025-09-02 19:37:07.17181+00,https://docs.rs/universal-hash,,https://github.com/RustCrypto/traits,160769
float-cmp,81864566,Floating point approximate comparison traits,2015-01-19 02:27:00.565634+00,2024-09-20 00:55:12.009814+00,https://docs.rs/float-cmp,,https://github.com/mikedilger/float-cmp,817
icu_locid_transform_data,81696405,Data for the icu_locid_transform crate,2023-09-23 18:00:16.588584+00,2025-03-26 19:48:00.772138+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,981392
encode_unicode,81495985,"UTF-8 and UTF-16 character types, iterators and related methods for char, u8 and u16. ",2016-04-07 00:11:28.00716+00,2022-08-07 14:19:49.238999+00,https://docs.rs/encode_unicode/,,https://github.com/tormol/encode_unicode,4691
libsqlite3-sys,81480126,Native bindings to the libsqlite3 library,2015-02-24 02:54:21.21686+00,2025-07-06 06:56:11.000264+00,,,https://github.com/rusqlite/rusqlite,1460
sec1,81328089,Pure Rust implementation of SEC1: Elliptic Curve Cryptography encoding formats including ASN.1 DE...,2020-08-26 16:48:41.171083+00,2025-09-15 22:57:28.401702+00,,https://github.com/RustCrypto/formats/tree/master/sec1,https://github.com/RustCrypto/formats,281028
icu_locid,81270216,API for managing Unicode Language and Locale Identifiers,2020-10-15 15:25:36.105795+00,2024-05-28 19:59:08.218938+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,300033
indicatif,81179394,A progress bar and cli reporting library for Rust,2017-04-26 12:41:07.759613+00,2025-07-04 07:52:39.276869+00,https://docs.rs/indicatif,,https://github.com/console-rs/indicatif,12083
xml-rs,80887356,A simple XML library in pure Rust (this crate has been renamed to `xml`),2014-12-08 20:29:58.424754+00,2025-08-25 14:33:50.889586+00,https://docs.rs/xml/,https://github.com/kornelski/xml-rs,https://github.com/netvl/xml-rs,490
icu_provider_macros,80747811,Proc macros for ICU data providers,2021-07-29 23:44:19.74996+00,2024-11-23 02:04:22.406783+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,429052
async-executor,80708459,Async executor,2019-07-01 08:25:50.98669+00,2025-08-27 01:41:10.068339+00,,,https://github.com/smol-rs/async-executor,145098
headers-core,80694515,typed HTTP headers core trait,2018-08-30 22:31:26.562535+00,2023-11-24 19:13:05.687876+00,,https://hyper.rs,https://github.com/hyperium/headers,82279
lexical-core,80548473,"Lexical, to- and from-string conversion routines.",2018-12-15 19:37:50.282051+00,2025-09-21 03:35:41.665207+00,,,https://github.com/Alexhuszagh/rust-lexical,102065
maplit,80158987,"Collection “literal” macros for HashMap, HashSet, BTreeMap, and BTreeSet.",2015-05-16 22:16:50.961537+00,2019-08-24 17:23:26.045525+00,https://docs.rs/maplit/,,https://github.com/bluss/maplit,2126
void,80106159,The uninhabited void type for use in statically impossible cases.,2015-02-10 08:54:09.482359+00,2016-04-18 07:21:21.674123+00,,,https://github.com/reem/rust-void.git,1369
new_debug_unreachable,79893061,"panic in debug, intrinsics::unreachable() in release (fork of debug_unreachable)",2018-06-01 22:17:30.262654+00,2024-03-15 17:26:05.782555+00,https://docs.rs/new_debug_unreachable,,https://github.com/mbrubeck/rust-debug-unreachable,68142
icu_locid_transform,79568785,API for Unicode Language and Locale Identifiers canonicalization,2022-08-05 00:59:01.263313+00,2024-05-28 19:59:38.834167+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,639092
utf16_iter,79259105,Iterator by char over potentially-invalid UTF-16 in &[u16],2022-06-13 09:49:27.814111+00,2023-12-01 17:42:42.216648+00,https://docs.rs/utf16_iter/,https://docs.rs/utf16_iter/,https://github.com/hsivonen/utf16_iter,604990
mockall,79253395,A powerful mock object library for Rust. ,2019-07-03 04:42:57.65817+00,2024-11-17 22:35:09.861614+00,https://docs.rs/mockall,,https://github.com/asomers/mockall,145557
write16,79096115,A UTF-16 analog of the Write trait,2022-07-18 13:23:21.837277+00,2022-07-18 13:23:21.837277+00,https://docs.rs/write16/,https://docs.rs/write16/,https://github.com/hsivonen/write16,627746
mockall_derive,79009840,Procedural macros for Mockall ,2019-07-03 04:38:31.751085+00,2024-11-17 22:34:57.747894+00,https://docs.rs/mockall_derive,,https://github.com/asomers/mockall,145556
simd-adler32,78666567,A SIMD-accelerated Adler-32 hash algorithm implementation.,2021-04-09 02:14:04.400491+00,2023-07-24 18:54:48.756556+00,,,https://github.com/mcountryman/simd-adler32,381134
rfc6979,78257486,Pure Rust implementation of RFC6979: Deterministic Usage of the Digital Signature Algorithm (DSA)...,2021-02-09 13:22:36.03006+00,2025-09-03 04:19:12.44811+00,,https://github.com/RustCrypto/signatures/tree/master/rfc6979,https://github.com/RustCrypto/signatures,352752
quinn-proto,78226124,State machine for the QUIC transport protocol,2018-10-02 20:17:22.135216+00,2025-08-27 21:51:24.562756+00,,,https://github.com/quinn-rs/quinn,87678
stringprep,77976668,An implementation of the stringprep algorithm,2017-05-21 03:53:10.107537+00,2024-05-25 13:22:49.993689+00,,,https://github.com/sfackler/rust-stringprep,15425
sha3,77973096,"Pure Rust implementation of SHA-3, a family of Keccak-based hash functions including the SHAKE fa...",2016-10-06 19:27:19.095615+00,2025-09-03 21:26:29.767213+00,https://docs.rs/sha3,,https://github.com/RustCrypto/hashes,6750
match_cfg,77892056,A convenience macro to ergonomically define an item depending on a large number of `#[cfg]` param...,2019-04-02 10:50:59.802728+00,2019-04-02 10:50:59.802728+00,https://docs.rs/match_cfg,https://github.com/gnzlbg/match_cfg,https://github.com/gnzlbg/match_cfg,125332
png,77792541,PNG decoding and encoding library in pure Rust,2015-05-26 08:26:52.565506+00,2025-08-29 16:47:32.311206+00,,,https://github.com/image-rs/image-png,2215
serde_derive_internals,77651807,AST representation used by Serde derive macros. Unstable.,2017-04-20 15:12:02.135733+00,2024-05-15 07:36:03.615748+00,https://docs.rs/serde_derive_internals,https://serde.rs,https://github.com/serde-rs/serde,11313
num-bigint-dig,77619054,Big integer implementation for Rust,2018-11-24 11:05:02.696017+00,2023-07-10 08:03:30.4701+00,https://docs.rs/num-bigint-dig,https://github.com/dignifiedquire/num-bigint,https://github.com/dignifiedquire/num-bigint,98411
quinn-udp,77304978,UDP sockets with ECN information for the QUIC transport protocol,2021-10-07 07:48:11.762234+00,2025-08-27 21:42:38.764471+00,,,https://github.com/quinn-rs/quinn,461629
foldhash,77027040,"A fast, non-cryptographic, minimally DoS-resistant hashing algorithm.",2024-08-12 20:31:10.097565+00,2025-08-23 19:14:01.103482+00,,,https://github.com/orlp/foldhash,1335130
image,76787600,Imaging library. Provides basic image processing and encoders/decoders for common image formats.,2014-11-20 20:03:29.764042+00,2025-09-03 13:48:17.755476+00,https://docs.rs/image,https://github.com/image-rs/image,https://github.com/image-rs/image,136
number_prefix,76410284,"Library for numeric prefixes (kilo, giga, kibi).",2014-12-15 09:54:40.25359+00,2020-04-07 01:48:04.585296+00,https://docs.rs/number_prefix,,https://github.com/ogham/rust-number-prefix,560
fxhash,76364929,"A fast, non-secure, hashing algorithm derived from an internal hasher used in FireFox and Rustc.",2017-06-26 18:31:21.553871+00,2017-07-29 19:02:18.664479+00,https://docs.rs/fxhash,,https://github.com/cbreeden/fxhash,20804
whoami,76336862,Retrieve the current user and environment.,2017-08-04 05:29:47.173641+00,2025-08-11 05:10:01.222036+00,https://docs.rs/whoami,https://github.com/ardaku/whoami/blob/v1/CHANGELOG.md,https://github.com/ardaku/whoami,26343
term,75986415,A terminal formatting library ,2014-12-28 18:17:56.750054+00,2025-09-08 23:36:22.07857+00,https://docs.rs/term/,https://github.com/Stebalien/term,https://github.com/Stebalien/term,657
quinn,75656907,Versatile QUIC transport protocol implementation,2018-10-02 20:18:56.824108+00,2025-08-27 21:52:04.528901+00,,,https://github.com/quinn-rs/quinn,87679
ignore,75295690,A fast library for efficiently matching ignore files such as `.gitignore` against file paths. ,2016-10-30 02:14:00.0699+00,2024-09-09 02:06:06.387704+00,https://docs.rs/ignore,https://github.com/BurntSushi/ripgrep/tree/master/crates/ignore,https://github.com/BurntSushi/ripgrep/tree/master/crates/ignore,7045
const-random,75198753,Provides compile time random number generation.,2019-03-03 00:37:42.180069+00,2024-03-03 23:32:56.450219+00,https://docs.rs/const-random,,https://github.com/tkaitchuck/constrandom,118252
dtoa,75160383,Fast floating point primitive to string conversion,2016-06-27 09:44:32.587067+00,2025-03-03 23:20:59.932998+00,https://docs.rs/dtoa,,https://github.com/dtolnay/dtoa,5512
enum-as-inner,74889614,A proc-macro for deriving inner field accessor functions on enums. ,2018-12-08 08:25:33.595709+00,2024-09-09 16:32:17.899384+00,https://docs.rs/enum-as-inner,,https://github.com/bluejekyll/enum-as-inner,100782
const-random-macro,74740368,Provides the procedural macro used by const-random,2019-03-03 00:35:20.62129+00,2023-10-23 19:07:26.85571+00,https://docs.rs/const-random,,https://github.com/tkaitchuck/constrandom,118250
sysinfo,74639037,"Library to get system information such as processes, CPUs, disks, components and networks",2015-07-25 20:38:16.491593+00,2025-10-02 12:53:18.55817+00,,,https://github.com/GuillaumeGomez/sysinfo,2677
system-configuration,73754135,Bindings to SystemConfiguration framework for macOS,2018-02-01 12:06:51.842395+00,2024-08-22 13:00:37.745969+00,,,https://github.com/mullvad/system-configuration-rs,49141
ed25519,73665265,Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032) support li...,2016-10-06 21:33:33.887375+00,2025-09-13 15:03:01.724231+00,https://docs.rs/ed25519,https://github.com/RustCrypto/signatures/tree/master/ed25519,https://github.com/RustCrypto/signatures,6766
system-configuration-sys,73634390,Low level bindings to SystemConfiguration framework for macOS,2018-02-01 12:06:02.133901+00,2024-01-31 13:42:46.487586+00,,,https://github.com/mullvad/system-configuration-rs,49140
blake3,73496654,the BLAKE3 hash function,2019-09-17 19:59:37.30836+00,2025-04-21 00:22:38.151026+00,https://docs.rs/blake3,,https://github.com/BLAKE3-team/BLAKE3,165535
derive_builder,73315120,Rust macro to automatically implement the builder pattern for arbitrary structs.,2016-08-07 20:28:43.953501+00,2024-10-08 16:55:17.031148+00,https://docs.rs/derive_builder/0.20.2,,https://github.com/colin-kiegel/rust-derive-builder,5918
derive_builder_core,73301692,Internal helper library for the derive_builder crate.,2017-03-25 20:27:23.686275+00,2024-10-08 16:54:04.753323+00,https://docs.rs/derive_builder_core,,https://github.com/colin-kiegel/rust-derive-builder,9150
jsonwebtoken,72408854,Create and decode JWTs in a strongly typed way.,2015-11-02 23:29:26.499058+00,2025-09-29 19:43:43.215757+00,,https://github.com/Keats/jsonwebtoken,https://github.com/Keats/jsonwebtoken,3355
polyval,72402521,POLYVAL is a GHASH-like universal hash over GF(2^128) useful for constructing a Message Authentic...,2019-08-13 22:32:41.629643+00,2025-09-03 03:25:26.658678+00,https://docs.rs/polyval,,https://github.com/RustCrypto/universal-hashes,156600
simple_asn1,72238865,A simple DER/ASN.1 encoding/decoding library.,2017-12-27 02:17:02.072468+00,2025-01-12 22:01:48.935117+00,,,https://github.com/acw/simple_asn1,44519
fragile,71962914,Provides wrapper types for sending non-send values to other threads.,2018-06-20 23:57:55.033266+00,2025-03-25 12:01:07.715153+00,,https://github.com/mitsuhiko/fragile,https://github.com/mitsuhiko/fragile,71014
threadpool,71715247,A thread pool for running a number of jobs on a fixed set of worker threads. ,2015-02-24 22:22:54.530788+00,2020-05-11 15:44:07.541079+00,https://docs.rs/threadpool,https://github.com/rust-threadpool/rust-threadpool,https://github.com/rust-threadpool/rust-threadpool,1462
md5,71658890,The package provides the MD5 hash function.,2015-06-21 10:26:13.324147+00,2025-06-26 13:20:34.421264+00,https://docs.rs/md5,https://github.com/stainless-steel/md5,https://github.com/stainless-steel/md5,2433
similar,71542857,A diff library for Rust,2021-01-24 01:33:24.06098+00,2025-01-19 14:39:11.514512+00,,,https://github.com/mitsuhiko/similar,345865
bzip2,70952391,Bindings to libbzip2 for bzip2 compression and decompression exposed as Reader/Writer streams. ,2014-11-13 06:35:38.538844+00,2025-06-17 10:05:16.435989+00,https://docs.rs/bzip2,https://github.com/trifectatechfoundation/bzip2-rs,https://github.com/trifectatechfoundation/bzip2-rs,78
string_cache,70788769,"A string interning library for Rust, developed as part of the Servo project.",2015-04-29 21:22:05.812623+00,2025-08-26 07:52:45.257203+00,https://docs.rs/string_cache,,https://github.com/servo/string-cache,1989
difflib,70671748,Port of Python's difflib library to Rust.,2016-03-01 20:11:02.811921+00,2018-07-22 12:47:54.378558+00,https://github.com/DimaKudosh/difflib/wiki,https://github.com/DimaKudosh/difflib,https://github.com/DimaKudosh/difflib,4340
raw-cpuid,70574908,"A library to parse the x86 CPUID instruction, written in rust with no external dependencies. The ...",2015-03-24 19:38:22.01072+00,2025-09-05 02:59:39.561516+00,https://docs.rs/raw-cpuid/,https://github.com/gz/rust-cpuid,https://github.com/gz/rust-cpuid,1713
protobuf,70490452,Protocol Buffers - Google's data interchange format,2014-11-21 00:30:41.855088+00,2025-10-01 20:18:59.599671+00,,,,198
serial_test,70359896,Allows for the creation of serialised Rust tests,2018-12-30 23:25:35.760393+00,2024-11-08 19:28:07.728609+00,,,https://github.com/palfrey/serial_test/,104626
owo-colors,70269879,Zero-allocation terminal colors that'll make people go owo,2020-08-25 06:21:49.001141+00,2025-09-29 18:16:39.460579+00,https://docs.rs/owo-colors,,https://github.com/owo-colors/owo-colors,280389
jni,69925651,Rust bindings to the JNI,2016-11-08 00:40:20.801845+00,2023-03-15 14:59:48.461767+00,https://docs.rs/jni,,https://github.com/jni-rs/jni-rs,7164
downcast,69841147,Trait for downcasting trait objects back to their original types.,2015-10-24 11:18:26.683306+00,2021-11-09 09:57:28.963027+00,https://docs.rs/downcast,,https://github.com/fkoep/downcast-rs,3293
proptest,69543247,Hypothesis-like property-based testing and shrinking. ,2017-06-18 17:47:46.015744+00,2025-09-20 18:12:30.564021+00,https://docs.rs/proptest/latest/proptest/,https://proptest-rs.github.io/proptest/proptest/index.html,https://github.com/proptest-rs/proptest,19436
serial_test_derive,69504884,Helper crate for serial_test,2018-12-30 23:26:03.428449+00,2024-11-08 19:27:36.248996+00,,,https://github.com/palfrey/serial_test/,104627
async-recursion,69461392,Recursion for async functions,2019-10-04 00:56:26.118378+00,2024-04-25 16:06:43.164603+00,https://docs.rs/async-recursion,,https://github.com/dcchut/async-recursion,169753
codespan-reporting,69190240,Beautiful diagnostic reporting for text-based programming languages,2018-04-16 03:43:01.202472+00,2025-03-22 16:54:28.749166+00,https://docs.rs/codespan-reporting,https://github.com/brendanzab/codespan,https://github.com/brendanzab/codespan,60829
borsh,69155063,Binary Object Representation Serializer for Hashing ,2019-08-16 23:25:11.928095+00,2025-03-25 10:55:50.32589+00,,https://borsh.io,https://github.com/near/borsh-rs,157492
downcast-rs,69004517,"Trait object downcasting support using only safe Rust. It supports type parameters, associated ty...",2015-12-16 03:50:40.714078+00,2025-09-01 20:32:31.465521+00,,,https://github.com/marcianx/downcast-rs,3673
blake2,68988690,BLAKE2 hash functions,2016-10-06 21:27:29.446062+00,2025-09-02 23:06:43.810113+00,https://docs.rs/blake2,,https://github.com/RustCrypto/hashes,6763
precomputed-hash,68790924,A library intending to be a base dependency to expose a precomputed hash,2017-03-21 18:06:00.731309+00,2017-09-29 20:25:54.097804+00,,,https://github.com/emilio/precomputed-hash,9079
approx,68398524,Approximate floating point equality comparisons and assertions.,2015-11-15 13:11:40.32268+00,2022-01-23 10:15:35.11859+00,https://docs.rs/approx,https://github.com/brendanzab/approx,https://github.com/brendanzab/approx,3427
keccak,68356623,Pure Rust implementation of the Keccak sponge function including the keccak-f and keccak-p variants ,2018-03-19 15:38:15.485407+00,2025-09-03 02:15:31.634158+00,https://docs.rs/keccak,https://github.com/RustCrypto/sponges/tree/master/keccak,https://github.com/RustCrypto/sponges,56436
value-bag,67978502,Anonymous structured values,2020-08-18 03:58:58.918633+00,2025-03-26 05:08:41.098428+00,https://docs.rs/value-bag,,https://github.com/sval-rs/value-bag,277761
quanta,67961084,high-speed timing library,2019-01-14 12:28:55.369353+00,2025-06-10 13:24:11.77131+00,https://docs.rs/quanta,https://github.com/metrics-rs/quanta,https://github.com/metrics-rs/quanta,108498
Inflector,67823768,"Adds String based inflections for Rust. Snake, kebab, camel, sentence, class, title and table cas...",2015-10-10 15:26:24.472017+00,2019-01-20 20:55:29.171696+00,https://docs.rs/Inflector,https://github.com/whatisinternet/inflector,https://github.com/whatisinternet/inflector,3190
structopt,67532569,Parse command line argument by defining a struct.,2017-02-03 00:18:05.356834+00,2022-01-18 12:08:44.235039+00,https://docs.rs/structopt,,https://github.com/TeXitoi/structopt,8363
windows-strings,67413203,Windows string types,2024-02-02 16:43:56.130574+00,2025-09-04 20:21:01.572843+00,,,https://github.com/microsoft/windows-rs,1124552
ureq,67189946,"Simple, safe HTTP client",2018-06-22 08:25:15.267842+00,2025-09-08 21:34:29.712577+00,,,https://github.com/algesten/ureq,71234
schemars_derive,67160275,"Macros for #[derive(JsonSchema)], for use with schemars",2019-08-08 17:52:12.568797+00,2025-07-06 09:34:01.292319+00,,https://graham.cool/schemars/,https://github.com/GREsau/schemars,155080
structopt-derive,67077965,"Parse command line argument by defining a struct, derive crate.",2017-02-03 00:17:35.613888+00,2021-10-18 07:06:20.504665+00,https://docs.rs/structopt-derive,,https://github.com/TeXitoi/structopt,8362
atoi,66958408,Parse integers directly from `[u8]` slices in safe code,2017-06-29 00:34:36.835675+00,2022-10-11 17:21:42.722566+00,https://docs.rs/atoi/,,https://github.com/pacman82/atoi-rs,21153
crossterm,66408318,A crossplatform terminal library for manipulating terminals.,2018-01-18 22:18:11.132912+00,2025-04-05 15:21:48.500601+00,https://docs.rs/crossterm/,,https://github.com/crossterm-rs/crossterm,47345
crossbeam,66256689,Tools for concurrent programming,2015-08-27 18:36:48.638047+00,2024-01-08 12:58:18.537533+00,,https://github.com/crossbeam-rs/crossbeam,https://github.com/crossbeam-rs/crossbeam,2934
env_filter,65971649,Filter log events using environment variables ,2024-01-19 18:00:00.886437+00,2024-12-20 16:22:48.705884+00,,,https://github.com/rust-cli/env_logger,1105559
derive_builder_macro,65889094,Rust macro to automatically implement the builder pattern for arbitrary structs.,2021-01-13 15:15:50.199835+00,2024-10-08 16:54:13.062233+00,https://docs.rs/derive_builder_macro/0.20.2,,https://github.com/colin-kiegel/rust-derive-builder,341408
chrono-tz,65721771,TimeZone implementations for chrono from the IANA database,2016-10-08 19:42:47.877742+00,2025-07-11 19:08:33.700056+00,https://docs.rs/chrono-tz,,https://github.com/chronotope/chrono-tz,6788
sha1_smol,64777750,Minimal dependency-free implementation of SHA1 for Rust.,2022-01-16 08:38:28.018739+00,2024-07-21 20:34:38.814832+00,,,https://github.com/mitsuhiko/sha1-smol,514693
ed25519-dalek,64764207,"Fast and efficient ed25519 EdDSA key generations, signing, and verification in pure Rust.",2016-12-09 01:24:53.342073+00,2025-09-04 15:45:03.350349+00,https://docs.rs/ed25519-dalek,https://github.com/dalek-cryptography/curve25519-dalek,https://github.com/dalek-cryptography/curve25519-dalek/tree/main/ed25519-dalek,7514
ghash,64707830,"Universal hash over GF(2^128) useful for constructing a Message Authentication Code (MAC), as in ...",2016-10-06 21:35:47.726226+00,2025-09-03 03:25:41.558784+00,https://docs.rs/ghash,,https://github.com/RustCrypto/universal-hashes,6769
ctrlc,64624245,Easy Ctrl-C handler for Rust projects,2015-07-16 08:49:02.855449+00,2025-09-06 20:55:37.573222+00,https://detegr.github.io/doc/ctrlc,https://github.com/Detegr/rust-ctrlc,https://github.com/Detegr/rust-ctrlc.git,2612
debugid,64503362,Common reusable types for implementing the sentry.io protocol.,2018-03-28 22:17:03.942655+00,2022-04-26 11:03:07.242788+00,https://docs.rs/debugid,https://sentry.io/,https://github.com/getsentry/rust-debugid,57980
aes-gcm,64483439,Pure Rust implementation of the AES-GCM (Galois/Counter Mode) Authenticated Encryption with Assoc...,2019-08-16 22:34:48.520552+00,2025-09-03 03:53:54.445999+00,https://docs.rs/aes-gcm,,https://github.com/RustCrypto/AEADs,157486
simdutf8,64375384,SIMD-accelerated UTF-8 validation.,2021-04-20 19:11:04.474217+00,2024-09-22 09:18:22.610907+00,https://docs.rs/simdutf8/,https://github.com/rusticstuff/simdutf8,https://github.com/rusticstuff/simdutf8,387267
secrecy,63964427,"Wrapper types and traits for secret management which help ensure they aren't accidentally copied,...",2018-10-04 03:59:35.046194+00,2024-10-09 19:23:36.825181+00,,https://github.com/iqlusioninc/crates/,https://github.com/iqlusioninc/crates/tree/main/secrecy,87933
rmp,63699262,Pure Rust MessagePack serialization implementation,2015-05-15 08:01:56.331764+00,2024-04-17 14:31:54.130496+00,https://docs.rs/rmp,,https://github.com/3Hren/msgpack-rust,2112
seahash,63569341,"A blazingly fast, portable hash function with proven statistical guarantees.",2016-11-07 22:49:51.868295+00,2021-01-16 05:41:31.670788+00,https://docs.rs/seahash,,https://gitlab.redox-os.org/redox-os/seahash,7163
inotify,63485642,Idiomatic wrapper for inotify,2014-12-22 12:54:21.610996+00,2024-08-19 11:38:14.906501+00,https://docs.rs/inotify,,https://github.com/hannobraun/inotify,624
rand_distr,63066626,Sampling from random number distributions ,2019-06-12 09:20:01.272484+00,2025-09-15 07:48:13.769757+00,https://docs.rs/rand_distr,https://rust-random.github.io/book,https://github.com/rust-random/rand_distr,140575
lru-cache,63059827,A cache that holds a limited number of key-value pairs,2015-03-18 18:49:05.61533+00,2019-03-21 01:04:02.527231+00,https://contain-rs.github.io/lru-cache/lru_cache,https://github.com/contain-rs/lru-cache,https://github.com/contain-rs/lru-cache,1601
http-range-header,62904272,No-dep range header parser,2021-11-25 09:12:33.415128+00,2024-11-28 12:38:42.267978+00,,https://github.com/MarcusGrass/parse-range-headers,https://github.com/MarcusGrass/parse-range-headers,487498
ptr_meta_derive,62792902,Proc macros for ptr_meta,2021-02-03 17:57:18.080611+00,2025-09-29 14:58:29.811093+00,https://docs.rs/ptr_meta_derive,,https://github.com/rkyv/ptr_meta,350167
ptr_meta,62792207,A radioactive stabilization of the ptr_meta rfc,2021-02-03 17:59:03.776364+00,2025-09-29 14:58:34.7176+00,https://docs.rs/ptr_meta,,https://github.com/rkyv/ptr_meta,350169
rusty-fork,62705825,Cross-platform library for running Rust tests in sub-processes using a fork-like interface. ,2018-02-28 00:36:23.803853+00,2020-05-27 01:57:15.210273+00,https://docs.rs/rusty-fork,,https://github.com/altsysrq/rusty-fork,53128
borsh-derive,62506742,Binary Object Representation Serializer for Hashing ,2019-08-16 23:24:14.124261+00,2025-03-25 10:55:42.383142+00,,https://borsh.io,https://github.com/near/borsh-rs,157491
opentelemetry-semantic-conventions,62081781,Semantic conventions for OpenTelemetry,2020-10-16 17:05:58.02121+00,2025-09-25 21:47:29.602805+00,,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-semantic-conventions,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-semantic-conventions,300765
git2,62081773,Bindings to libgit2 for interoperating with git repositories. This library is both threadsafe and...,2014-11-14 23:37:32.510389+00,2025-05-05 17:12:28.010164+00,https://docs.rs/git2,,https://github.com/rust-lang/git2-rs,112
windows-implement,61996026,The implement macro for the windows crate,2022-01-27 21:07:19.328424+00,2025-09-25 18:09:50.487613+00,,,https://github.com/microsoft/windows-rs,522753
der-parser,61972086,Parser/encoder for ASN.1 BER/DER data,2017-03-02 08:38:50.588643+00,2025-01-21 09:43:38.524624+00,,https://github.com/rusticata/der-parser,https://github.com/rusticata/der-parser.git,8762
libgit2-sys,61802683,Native bindings to the libgit2 library,2014-11-13 06:35:27.096084+00,2025-06-21 23:32:14.091909+00,,,https://github.com/rust-lang/git2-rs,77
p256,61553019,"Pure Rust implementation of the NIST P-256 (a.k.a. secp256r1, prime256v1) elliptic curve as defin...",2018-10-03 14:56:31.983054+00,2025-09-14 01:29:32.670642+00,https://docs.rs/p256,https://github.com/RustCrypto/elliptic-curves/tree/master/p256,https://github.com/RustCrypto/elliptic-curves,87830
adler32,61278819,Minimal Adler32 implementation for Rust.,2015-08-24 21:44:20.189544+00,2020-07-30 19:05:16.808788+00,https://docs.rs/adler32/,,https://github.com/remram44/adler32-rs,2915
resolv-conf,60770434,The resolv.conf file parser,2016-01-21 11:52:22.053281+00,2025-09-14 08:17:06.649277+00,https://docs.rs/resolv-conf/,https://github.com/hickory-dns/resolv-conf,https://github.com/hickory-dns/resolv-conf,3942
cbindgen,60430801,A tool for generating C bindings to Rust code.,2017-04-12 15:57:46.00735+00,2025-05-20 12:02:34.892111+00,,,https://github.com/mozilla/cbindgen,10418
bytecount,60307726,"count occurrences of a given byte, or the number of UTF-8 code points, in a byte slice, fast",2016-09-27 06:50:45.919353+00,2025-06-03 06:59:49.13163+00,,,https://github.com/llogiq/bytecount,6638
windows-interface,60299023,The interface macro for the windows crate,2022-02-18 22:04:24.504315+00,2025-09-25 18:09:42.20658+00,,,https://github.com/microsoft/windows-rs,534913
rustcrypt,60280959,Macro-first encryption and obfuscation library for Rust,2025-09-07 19:01:24.519788+00,2025-09-10 17:11:48.003298+00,https://docs.rs/rustcrypt,,,1828437
serde-value,60214298,Serialization value trees,2016-01-04 05:31:23.189001+00,2020-07-17 18:20:27.889805+00,https://docs.rs/serde-value/*/serde_value/,,https://github.com/arcnmx/serde-value,3822
arbitrary,60208913,The trait for generating structured data from unstructured data,2017-05-08 05:52:54.904092+00,2025-08-14 18:20:10.78083+00,https://docs.rs/arbitrary/,,https://github.com/rust-fuzz/arbitrary/,13666
web-time,60004257,Drop-in replacement for std::time for Wasm in browsers,2023-03-27 06:32:32.213777+00,2024-03-01 10:51:46.373917+00,,,https://github.com/daxpedda/web-time,821852
x509-parser,59854039,Parser for the X.509 v3 format (RFC 5280 certificates),2018-01-20 17:51:20.124206+00,2025-08-29 09:34:43.059833+00,,https://github.com/rusticata/x509-parser,https://github.com/rusticata/x509-parser.git,47551
matrixmultiply,59554382,General matrix multiplication for f32 and f64 matrices. Operates on matrices with general layout ...,2016-03-28 21:26:28.910493+00,2025-05-12 15:18:56.47037+00,https://docs.rs/matrixmultiply/,,https://github.com/bluss/matrixmultiply/,4595
oid-registry,59168255,Object Identifier (OID) database,2020-10-26 09:00:11.245782+00,2025-04-14 12:29:54.323064+00,,https://github.com/rusticata/oid-registry,https://github.com/rusticata/oid-registry.git,305541
option-ext,59133716,Extends `Option` with additional operations,2022-01-17 16:08:41.833631+00,2023-01-11 19:28:05.598091+00,https://docs.rs/option-ext/,https://github.com/soc/option-ext,https://github.com/soc/option-ext.git,515651
snafu-derive,59132484,An ergonomic error handling library,2019-01-28 03:09:42.780108+00,2025-09-03 14:54:23.845409+00,https://docs.rs/snafu,,https://github.com/shepmaster/snafu,111033
snafu,59099358,An ergonomic error handling library,2019-01-28 03:09:59.593302+00,2025-09-03 14:54:37.442212+00,https://docs.rs/snafu,,https://github.com/shepmaster/snafu,111034
inotify-sys,59038636,inotify bindings for the Rust programming language,2017-05-08 15:39:23.44201+00,2021-01-16 09:40:08.828345+00,https://docs.rs/inotify-sys,,https://github.com/hannobraun/inotify-sys,13723
regex-lite,59013832,A lightweight regex engine that optimizes for binary size and compilation time. ,2023-02-28 19:28:27.939514+00,2025-08-24 13:40:27.34527+00,https://docs.rs/regex-lite,https://github.com/rust-lang/regex/tree/master/regex-lite,https://github.com/rust-lang/regex,797451
rmp-serde,58797272,Serde bindings for RMP,2015-08-24 12:49:26.519905+00,2024-04-30 13:47:27.647844+00,https://docs.rs/rmp-serde,,https://github.com/3Hren/msgpack-rust,2910
notify,58576451,Cross-platform filesystem notification library,2014-12-20 07:53:19.303362+00,2025-08-03 14:54:41.092775+00,https://docs.rs/notify,https://github.com/notify-rs/notify,https://github.com/notify-rs/notify.git,612
async-process,58552416,Async interface for working with processes,2019-05-23 06:38:29.864854+00,2025-09-14 14:11:17.759362+00,,,https://github.com/smol-rs/async-process,136298
piper,58179662,"Async pipes, channels, mutexes, and more.",2020-02-09 03:05:27.335714+00,2024-08-10 23:23:30.294361+00,,,https://github.com/smol-rs/piper,206536
indenter,58033192,"A formatter wrapper that indents the text, designed for error display impls ",2020-02-27 03:58:19.996247+00,2025-08-06 20:29:35.416164+00,https://docs.rs/indenter,https://github.com/yaahc/indenter,https://github.com/yaahc/indenter,212951
dotenvy,57950274,A well-maintained fork of the dotenv crate,2022-02-28 19:06:25.238818+00,2023-03-22 16:04:41.028594+00,,https://github.com/allan2/dotenvy,https://github.com/allan2/dotenvy,541107
const_format,57732192,Compile-time string formatting,2020-08-17 03:38:43.263493+00,2024-12-06 21:10:12.913219+00,https://docs.rs/const_format/,,https://github.com/rodrimati1992/const_format_crates/,277417
async-global-executor,57715876,A global executor built on top of async-executor and async-io,2020-08-27 14:56:53.28142+00,2025-02-26 14:26:42.950567+00,https://docs.rs/async-global-executor,https://github.com/Keruspe/async-global-executor,https://github.com/Keruspe/async-global-executor,281477
const_format_proc_macros,57620656,Implementation detail of the `const_format` crate,2020-08-19 02:34:40.789983+00,2024-12-06 21:09:55.439685+00,,,https://github.com/rodrimati1992/const_format_crates/,278094
normalize-line-endings,57393095,"Takes an iterator over chars and returns a new iterator with all line endings (\r, \n, or \r\n) a...",2016-05-14 19:00:20.135508+00,2018-12-16 15:17:15.641063+00,https://derekdreery.github.io/normalize-line-endings/normalize_line_endings/index.html,,https://github.com/derekdreery/normalize-line-endings,5067
color_quant,57214167,Color quantization library to reduce n colors to 256 colors.,2015-05-29 12:14:41.495169+00,2020-10-09 19:17:17.742242+00,,,https://github.com/image-rs/color_quant.git,2251
kv-log-macro,56824292,Log macro for log's kv-unstable backend.,2019-09-01 15:56:50.943347+00,2020-07-06 09:42:00.776479+00,https://docs.rs/kv-log-macro,,https://github.com/yoshuawuyts/kv-log-macro,161367
async-std,56785133,Deprecated in favor of `smol` - Async version of the Rust standard library,2019-05-30 16:02:17.377461+00,2025-08-15 01:43:25.834384+00,,https://async.rs,https://github.com/async-rs/async-std,137922
chrono-tz-build,56653865,internal build script for chrono-tz,2020-10-09 16:37:20.955109+00,2025-07-11 19:04:50.787755+00,https://docs.rs/chrono-tz-build,,https://github.com/chronotope/chrono-tz,297742
asn1-rs,56523952,Parser/encoder for ASN.1 BER/DER data,2021-07-06 14:18:16.184256+00,2025-04-14 12:08:22.899879+00,,https://github.com/rusticata/asn1-rs,https://github.com/rusticata/asn1-rs.git,419491
language-tags,56471012,Language tags for Rust,2015-01-20 18:40:30.661021+00,2021-05-24 17:56:55.679036+00,,,https://github.com/pyfisch/rust-language-tags,836
rust_decimal,56458658,Decimal number implementation written in pure Rust suitable for financial and fixed-precision cal...,2016-11-16 16:31:13.547828+00,2025-09-14 17:45:00.31865+00,https://docs.rs/rust_decimal/,,https://github.com/paupino/rust-decimal,7268
infer,56262223,Small crate to infer file type based on magic number signatures,2019-02-23 00:50:12.520054+00,2025-02-02 01:21:26.316514+00,https://docs.rs/infer,https://github.com/bojand/infer,https://github.com/bojand/infer,116653
asn1-rs-derive,56165667,Derive macros for the `asn1-rs` crate,2022-01-27 15:38:56.488532+00,2025-04-14 12:03:58.682608+00,,https://github.com/rusticata/asn1-rs,https://github.com/rusticata/asn1-rs.git,522582
rawpointer,56120381,Extra methods for raw pointers and `NonNull<T>`.  For example `.post_inc()` and `.pre_dec()` (c.f...,2016-12-15 11:20:57.55865+00,2019-09-12 07:51:36.405018+00,https://docs.rs/rawpointer/,,https://github.com/bluss/rawpointer/,7587
rkyv,56097113,Zero-copy deserialization framework for Rust,2020-11-11 16:36:21.012106+00,2025-09-29 15:31:56.838599+00,https://docs.rs/rkyv,,https://github.com/rkyv/rkyv,311298
rkyv_derive,56081388,Derive macro for rkyv,2020-11-11 16:14:18.106933+00,2025-09-29 15:31:52.567285+00,,,https://github.com/rkyv/rkyv,311283
eyre,55878276,Flexible concrete Error Reporting type built on std::error::Error with customizable Reports,2020-02-05 15:38:43.804247+00,2024-01-31 16:44:06.54448+00,https://docs.rs/eyre,,https://github.com/eyre-rs/eyre,205184
outref,55606686,Out reference,2022-07-22 14:49:20.508197+00,2025-01-15 09:06:04.205242+00,,,https://github.com/Nugine/outref,630837
gif,55533236,GIF de- and encoder,2015-05-29 14:24:47.796231+00,2025-06-23 00:42:58.577262+00,https://docs.rs/gif,https://github.com/image-rs/image-gif,https://github.com/image-rs/image-gif,2255
assert-json-diff,55532090,Easily compare two JSON values and get great output,2018-10-17 08:08:13.861112+00,2022-06-29 21:40:34.607604+00,https://docs.rs/assert-json-diff,https://github.com/davidpdrsn/assert-json-diff,https://github.com/davidpdrsn/assert-json-diff.git,91116
parse-zoneinfo,55353354,Parse zoneinfo files from the IANA database,2017-02-11 11:14:54.177109+00,2025-07-15 14:33:56.331781+00,,,https://github.com/chronotope/chrono-tz,8466
rusticata-macros,55318941,Helper macros for Rusticata,2017-02-20 20:19:04.799102+00,2025-03-17 13:13:23.909969+00,,https://github.com/rusticata/rusticata-macros,https://github.com/rusticata/rusticata-macros.git,8606
backoff,55173540,Retry operations with exponential backoff policy. ,2017-05-28 08:49:16.062452+00,2021-12-14 21:16:45.606935+00,https://docs.rs/backoff,https://github.com/ihrwein/backoff,https://github.com/ihrwein/backoff,16581
rust-ini,55159721,An Ini configuration file parsing library in Rust,2015-01-26 04:01:52.645729+00,2025-08-30 17:27:36.9675+00,https://docs.rs/rust-ini/,,https://github.com/zonyitoo/rust-ini,886
config,55099526,Layered configuration system for Rust applications.,2015-04-16 18:35:56.393987+00,2025-09-30 18:23:02.974971+00,,,https://github.com/rust-cli/config-rs,1879
wasmparser,54804667,A simple event-driven library for parsing WebAssembly binary files. ,2017-06-02 16:58:49.610864+00,2025-09-09 16:43:39.64917+00,,https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wasmparser,https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wasmparser,17354
unarray,54774344,Utilities for working with uninitialized arrays,2022-06-05 00:07:57.377068+00,2022-11-30 17:09:42.91653+00,,,https://github.com/cameron1024/unarray,599978
opentelemetry-otlp,54661870,Exporter for the OpenTelemetry Collector,2020-08-14 02:49:26.002779+00,2025-09-25 21:52:38.092433+00,,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-otlp,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-otlp,276473
prometheus,54589093,Prometheus instrumentation library for Rust applications.,2016-01-22 10:28:34.313551+00,2025-03-27 08:38:33.984372+00,https://docs.rs/prometheus,https://github.com/tikv/rust-prometheus,https://github.com/tikv/rust-prometheus,3951
lexical-util,54582265,Shared utilities for lexical creates.,2021-09-03 05:05:47.942062+00,2025-09-21 03:34:19.801133+00,,,https://github.com/Alexhuszagh/rust-lexical,446287
lexical-parse-integer,54547784,Efficient parsing of integers from strings.,2021-09-03 05:06:17.84369+00,2025-09-21 03:34:50.189836+00,,,https://github.com/Alexhuszagh/rust-lexical,446289
lexical-parse-float,54534779,Efficient parsing of floats from strings.,2021-09-03 05:06:46.664679+00,2025-09-21 03:35:27.221493+00,,,https://github.com/Alexhuszagh/rust-lexical,446293
opentelemetry-http,54463260,Helper implementations for sending HTTP requests. Uses include propagating and extracting context...,2021-01-22 01:47:24.838272+00,2025-09-25 21:46:42.399608+00,,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-http,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-http,345136
hdrhistogram,54395142,A port of HdrHistogram to Rust,2015-07-07 20:58:59.521601+00,2023-11-18 13:08:34.346868+00,https://docs.rs/hdrhistogram,https://github.com/HdrHistogram/HdrHistogram_rust,https://github.com/HdrHistogram/HdrHistogram_rust.git,2555
snap,54038299,A pure Rust implementation of the Snappy compression algorithm. Includes streaming compression an...,2016-08-02 03:06:33.334539+00,2023-12-05 13:10:51.661359+00,https://docs.rs/snap,https://github.com/BurntSushi/rust-snappy,https://github.com/BurntSushi/rust-snappy,5869
ascii,53895480,"ASCII-only equivalents to `char`, `str` and `String`.",2014-11-27 14:19:59.536222+00,2022-09-18 13:04:12.231348+00,https://docs.rs/ascii,,https://github.com/tomprogrammer/rust-ascii,416
jpeg-decoder,53895089,JPEG decoder,2016-02-13 21:57:24.620735+00,2025-06-21 22:43:03.335169+00,https://docs.rs/jpeg-decoder,,https://github.com/image-rs/jpeg-decoder,4164
bytecheck_derive,53755975,Derive macro for bytecheck,2020-11-14 19:41:36.230925+00,2025-09-29 15:08:14.862193+00,https://docs.rs/bytecheck_derive,,https://github.com/rkyv/bytecheck,312418
bytecheck,53753074,Memory validation framework for Rust,2020-11-14 19:42:05.230649+00,2025-09-29 15:08:18.924751+00,https://docs.rs/bytecheck,,https://github.com/rkyv/bytecheck,312419
weezl,53667678,Fast LZW compression and decompression.,2020-06-29 10:53:19.555239+00,2025-05-22 18:31:34.614461+00,https://docs.rs/weezl,,https://github.com/image-rs/weezl,259345
rend,53563844,"Cross-platform, endian-aware primitives for Rust",2021-05-03 04:50:08.31116+00,2025-09-29 15:17:56.894764+00,https://docs.rs/rend,,https://github.com/djkoloski/rend,392405
getopts,53556154,getopts-like option parsing,2014-12-13 22:10:14.289738+00,2025-08-29 15:00:18.327189+00,,,https://github.com/rust-lang/getopts,546
hash32,53439314,32-bit hashing algorithms,2018-04-23 17:20:16.808083+00,2025-05-27 07:38:28.235129+00,,,https://github.com/rust-embedded-community/hash32,61995
fdeflate,53186564,Fast specialized deflate implementation,2022-12-23 08:20:45.945441+00,2024-12-06 03:16:12.03853+00,https://docs.rs/fdeflate,https://github.com/image-rs/fdeflate,https://github.com/image-rs/fdeflate,744349
ntapi,53001324,FFI bindings for Native API,2018-09-11 16:14:17.942528+00,2023-04-20 23:14:01.046654+00,https://docs.rs/ntapi/*/x86_64-pc-windows-msvc/ntapi/,,https://github.com/MSxDOS/ntapi,84153
integer-encoding,52970357,varint+zigzag and fixedint integer encoding/decoding (https://developers.google.com/protocol-buff...,2016-06-05 16:49:34.555312+00,2024-08-01 15:30:37.323715+00,https://docs.rs/integer-encoding/,,https://github.com/dermesser/integer-encoding-rs,5295
opentelemetry-proto,52856722,Protobuf generated files and transformations.,2022-09-13 02:34:50.358356+00,2025-09-25 21:50:15.300662+00,,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-proto,https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-proto,664166
handlebars,52517347,Handlebars templating implemented in Rust.,2014-12-27 10:28:20.744395+00,2025-03-16 00:12:12.909234+00,https://docs.rs/crate/handlebars/,https://github.com/sunng87/handlebars-rust,https://github.com/sunng87/handlebars-rust,648
unicode_categories,52498576,Query Unicode category membership for chars,2015-10-31 07:05:14.684961+00,2016-10-22 17:57:09.493733+00,http://swgillespie.github.io/unicode-categories/unicode_categories/,,https://github.com/swgillespie/unicode-categories,3342
shell-words,52293662,Process command line according to parsing rules of UNIX shell,2018-03-09 12:52:15.094104+00,2022-02-06 20:41:07.732312+00,,,https://github.com/tmiasko/shell-words,54683
widestring,52217477,"A wide string Rust library for converting to and from wide strings, such as those often used in W...",2016-01-25 09:03:34.077126+00,2025-03-15 21:57:47.030927+00,,,https://github.com/starkat99/widestring-rs,3986
futures-intrusive,52174841,Futures based on intrusive data structures - for std and no-std environments. ,2019-05-22 05:49:33.42393+00,2022-11-04 06:14:20.712105+00,,https://github.com/Matthias247/futures-intrusive,https://github.com/Matthias247/futures-intrusive,136011
bytes-utils,52050293,Additional utilities for working with the bytes crate,2021-01-22 19:45:42.248518+00,2023-11-17 14:26:14.682124+00,https://docs.rs/bytes-utils,,https://github.com/vorner/bytes-utils,345419
aws-smithy-http,51917129,Smithy HTTP logic for smithy-rs.,2021-10-20 22:41:52.345829+00,2025-08-04 19:03:40.345705+00,,,https://github.com/smithy-lang/smithy-rs,468158
asn1-rs-impl,51723667,Implementation details for the `asn1-rs` crate,2022-01-07 12:00:31.263414+00,2025-04-14 12:04:48.354846+00,,https://github.com/rusticata/asn1-rs,https://github.com/rusticata/asn1-rs.git,509372
inventory,51431659,Typed distributed plugin registration,2015-07-22 19:31:19.081684+00,2025-08-20 14:24:33.450792+00,https://docs.rs/inventory,,https://github.com/dtolnay/inventory,2655
lz4_flex,51400861,"Fastest LZ4 implementation in Rust, no unsafe by default.",2020-10-18 12:54:23.855597+00,2025-06-19 07:44:25.425397+00,,https://github.com/pseitz/lz4_flex,https://github.com/pseitz/lz4_flex,302117
net2,51312597,Extensions to the standard library's networking types as proposed in RFC 1158. ,2015-06-19 01:25:57.653522+00,2023-06-14 18:02:31.31349+00,https://docs.rs/net2/~0.2,https://github.com/deprecrated/net2-rs,https://github.com/deprecrated/net2-rs,2418
trust-dns-proto,51010855,Trust-DNS is a safe and secure DNS library. This is the foundational DNS protocol library for all...,2017-10-03 07:53:48.435005+00,2023-10-23 16:03:22.585328+00,https://docs.rs/trust-dns-proto,https://trust-dns.org/,https://github.com/bluejekyll/trust-dns,34235
serde_cbor,50995338,CBOR support for serde.,2015-09-29 06:32:15.579869+00,2021-08-15 14:08:47.32811+00,,,https://github.com/pyfisch/cbor,3129
openssl-src,50989783,Source of OpenSSL and logic to build it. ,2017-08-29 04:49:53.890414+00,2025-09-30 14:45:41.479888+00,,,https://github.com/alexcrichton/openssl-src-rs,29697
ref-cast-impl,50906468,Derive implementation for ref_cast::RefCast.,2017-10-09 14:41:35.479967+00,2025-09-28 23:18:44.950844+00,https://docs.rs/ref-cast,,https://github.com/dtolnay/ref-cast,35005
ref-cast,50904746,Safely cast &T to &U where the struct U contains a single field of type T.,2017-10-09 14:42:36.996905+00,2025-09-28 23:18:50.147823+00,https://docs.rs/ref-cast,,https://github.com/dtolnay/ref-cast,35006
sqlx-core,50863076,"Core of SQLx, the rust SQL toolkit. Not intended to be used directly.",2019-11-27 06:24:33.159543+00,2025-05-19 23:23:07.872821+00,,,https://github.com/launchbadge/sqlx,184746
wasm-streams,50849278,Bridging between web streams and Rust streams using WebAssembly ,2020-06-14 22:04:33.007556+00,2024-10-25 13:00:49.666818+00,,,https://github.com/MattiasBuelens/wasm-streams/,253997
iovec,50768708,Portable buffer type for scatter/gather I/O operations ,2017-03-15 06:25:56.348864+00,2019-10-09 18:09:56.56001+00,https://docs.rs/iovec,https://github.com/carllerche/iovec,https://github.com/carllerche/iovec,8986
sqlx,50697058,"🧰 The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries with...",2019-06-06 23:42:00.933224+00,2025-05-19 23:24:26.658417+00,https://docs.rs/sqlx,,https://github.com/launchbadge/sqlx,139518
jni-sys,50640461,Rust definitions corresponding to jni.h,2016-02-26 06:37:49.528984+00,2023-09-25 21:30:35.551409+00,https://docs.rs/jni-sys/0.4.0,,https://github.com/jni-rs/jni-sys,4295
aws-smithy-json,50617918,Token streaming JSON parser for smithy-rs.,2021-10-20 22:55:41.104501+00,2025-08-28 23:27:15.897069+00,,,https://github.com/smithy-lang/smithy-rs,468175
xmlparser,50597276,"Pull-based, zero-allocation XML parser.",2017-12-15 14:09:53.052102+00,2023-09-30 15:21:25.478529+00,https://docs.rs/xmlparser/,,https://github.com/RazrFalcon/xmlparser,43197
multer,50578507,An async parser for `multipart/form-data` content-type in Rust.,2020-05-10 14:08:30.572077+00,2024-05-04 01:46:11.282005+00,,https://github.com/rwf2/multer,https://github.com/rwf2/multer,239686
sqlx-macros,50327998,"Macros for SQLx, the rust SQL toolkit. Not intended to be used directly.",2019-11-27 06:24:30.686963+00,2025-05-19 23:23:58.439955+00,,,https://github.com/launchbadge/sqlx,184745
serde_qs,49863867,Querystrings for Serde,2017-03-12 19:35:23.156845+00,2025-05-27 23:04:25.610381+00,https://docs.rs/serde_qs,,https://github.com/samscott89/serde_qs,8949
typed-builder,49840481,Compile-time type-checked builder derive,2017-10-04 23:49:38.955558+00,2025-09-14 12:34:43.888522+00,https://idanarye.github.io/rust-typed-builder/,,https://github.com/idanarye/rust-typed-builder,34443
pulldown-cmark,49808572,A pull parser for CommonMark,2015-06-04 04:06:59.936973+00,2025-02-12 16:13:01.983822+00,,,https://github.com/raphlinus/pulldown-cmark,2303
fs-err,49697342,A drop-in replacement for std::fs with more helpful error messages.,2020-02-02 22:11:52.276259+00,2025-09-15 19:28:24.370154+00,https://docs.rs/fs-err,,https://github.com/andrewhickman/fs-err,204330
bigdecimal,49678113,Arbitrary precision decimal numbers,2017-04-05 23:48:11.922233+00,2025-04-01 04:18:08.395802+00,https://docs.rs/bigdecimal,https://github.com/akubera/bigdecimal-rs,https://github.com/akubera/bigdecimal-rs,9751
base64-simd,49628685,SIMD-accelerated base64 encoding and decoding,2021-12-31 09:20:06.544275+00,2022-12-28 03:07:32.705641+00,,,https://github.com/Nugine/simd,505734
gethostname,49448106,gethostname for all platforms,2019-01-20 18:20:36.505189+00,2025-05-01 11:51:33.238279+00,https://docs.rs/gethostname,https://codeberg.org/swsnr/gethostname.rs,https://codeberg.org/swsnr/gethostname.rs.git,109700
gloo-timers,49428639,Convenience crate for working with JavaScript timers,2019-09-13 11:49:44.838113+00,2023-08-11 16:04:38.773701+00,,https://github.com/rustwasm/gloo,https://github.com/rustwasm/gloo/tree/master/crates/timers,164548
actix-rt,49340819,Tokio-based single-threaded async runtime for the Actix ecosystem,2018-12-11 16:27:02.597949+00,2025-08-30 01:37:11.560662+00,,https://actix.rs,https://github.com/actix/actix-net,101450
lexical-write-float,49209481,Efficient formatting of floats to strings.,2021-09-03 05:06:32.199635+00,2025-09-21 03:35:10.73807+00,,,https://github.com/Alexhuszagh/rust-lexical,446291
lexical-write-integer,49143641,Efficient formatting of integers to strings.,2021-09-03 05:06:00.338107+00,2025-09-21 03:34:35.057671+00,,,https://github.com/Alexhuszagh/rust-lexical,446288
derive_more-impl,49069115,Internal implementation of `derive_more` crate,2023-07-23 18:50:01.297935+00,2025-02-03 20:17:52.618987+00,https://docs.rs/derive_more,,https://github.com/JelteF/derive_more,923898
deadpool,48988271,Dead simple async pool,2019-11-14 12:49:50.68413+00,2025-09-02 10:18:59.944098+00,,,https://github.com/bikeshedder/deadpool,181221
cesu8,48909528,Convert to and from CESU-8 encoding (similar to UTF-8),2014-12-07 17:43:28.64116+00,2016-05-15 12:20:41.086989+00,http://emk.github.io/cesu8-rs/cesu8/index.html,,https://github.com/emk/cesu8-rs,477
lz4-sys,48766514,Rust LZ4 sys package.,2016-11-26 20:22:03.426256+00,2024-09-26 11:51:34.999693+00,,,https://github.com/10xGenomics/lz4-rs,7372
aws-smithy-types,48553598,Types for smithy-rs codegen.,2021-10-20 22:24:37.967351+00,2025-06-11 20:08:17.087457+00,,,https://github.com/smithy-lang/smithy-rs,468145
axum-macros,48181563,Macros for axum,2021-08-21 16:54:10.664975+00,2025-01-01 10:10:47.779135+00,,https://github.com/tokio-rs/axum,https://github.com/tokio-rs/axum,440378
aws-sigv4,47908305,SigV4 signer for HTTP requests and Event Stream messages.,2020-04-10 18:03:29.975826+00,2025-08-05 19:03:38.384758+00,,,https://github.com/smithy-lang/smithy-rs,228425
actix-web,47785516,"Actix Web is a powerful, pragmatic, and extremely fast web framework for Rust",2017-10-23 23:08:29.26026+00,2025-05-12 02:14:26.767573+00,,https://actix.rs,https://github.com/actix/actix-web,36736
aws-smithy-async,47495286,Async runtime agnostic abstractions for smithy-rs.,2021-10-20 22:39:36.330689+00,2025-03-10 15:43:06.566506+00,,,https://github.com/smithy-lang/smithy-rs,468153
libredox,47456682,Redox stable ABI,2023-10-12 18:19:21.825664+00,2025-09-14 11:19:02.365456+00,,,https://gitlab.redox-os.org/redox-os/libredox.git,1001588
aws-types,47455033,Cross-service types for the AWS SDK.,2021-10-20 22:42:56.466587+00,2025-07-24 18:51:46.194786+00,,,https://github.com/smithy-lang/smithy-rs,468160
const_fn,47283963,A lightweight attribute for easy generation of const functions with conditional compilations. ,2018-12-25 20:13:05.596834+00,2025-01-06 16:47:36.324502+00,,,https://github.com/taiki-e/const_fn,103778
error-chain,47258021,Yet another error boilerplate library.,2016-04-29 01:27:04.929343+00,2020-08-02 17:50:33.565942+00,https://docs.rs/error-chain,,https://github.com/rust-lang-nursery/error-chain,4891
bytemuck_derive,47251297,derive proc-macros for `bytemuck`,2020-08-21 01:46:55.033861+00,2025-08-06 21:26:32.594572+00,,,https://github.com/Lokathor/bytemuck,278976
actix-http,47231098,HTTP types and services for the Actix ecosystem,2019-03-28 19:50:22.257203+00,2025-08-26 07:42:19.321647+00,,https://actix.rs,https://github.com/actix/actix-web,124414
trust-dns-resolver,46884768,Trust-DNS is a safe and secure DNS library. This Resolver library  uses the Client library to per...,2017-06-28 06:13:43.920832+00,2023-10-23 16:03:53.732289+00,https://docs.rs/trust-dns-resolver,https://trust-dns.org/,https://github.com/bluejekyll/trust-dns,21069
psm,46591299,Portable Stack Manipulation: stack manipulation and introspection routines,2018-12-29 17:52:03.479403+00,2025-10-02 23:34:59.952529+00,https://docs.rs/psm/0.1.25,,https://github.com/rust-lang/stacker/,104434
bs58,46523535,Another Base58 codec implementation.,2016-11-02 21:08:38.185278+00,2024-03-19 12:50:23.529199+00,,,https://github.com/Nullus157/bs58-rs,7116
wit-bindgen-rt,46509263,Internal runtime support for the `wit-bindgen` crate. ,2024-03-01 21:41:06.168372+00,2025-08-13 22:49:17.52866+00,,https://github.com/bytecodealliance/wit-bindgen,https://github.com/bytecodealliance/wit-bindgen,1159253
triomphe,46486465,A fork of std::sync::Arc with some extra functionality and without weak references (originally se...,2018-12-05 15:12:01.422998+00,2024-10-07 04:02:22.368103+00,,,https://github.com/Manishearth/triomphe,100262
actix-codec,46358300,Codec utilities for working with framed protocols,2018-12-11 16:11:24.789455+00,2024-01-30 22:15:31.97153+00,,,https://github.com/actix/actix-net,101444
metrics,46326268,A lightweight metrics facade.,2015-09-03 22:02:07.047796+00,2025-04-20 17:24:21.832281+00,https://docs.rs/metrics,https://github.com/metrics-rs/metrics,https://github.com/metrics-rs/metrics,2984
dlv-list,46308797,Semi-doubly linked list implemented using a vector,2018-10-08 01:05:11.53906+00,2024-11-17 07:31:26.465286+00,,,https://github.com/sgodwincs/dlv-list-rs,88631
curve25519-dalek-derive,46291942,curve25519-dalek Derives,2023-06-24 03:16:30.221231+00,2023-10-31 17:58:09.620431+00,https://docs.rs/curve25519-dalek-derive,https://github.com/dalek-cryptography/curve25519-dalek,https://github.com/dalek-cryptography/curve25519-dalek,898753
rand_xoshiro,46071821,"Xoshiro, xoroshiro and splitmix64 random number generators",2019-01-04 12:34:17.08929+00,2025-01-27 14:40:47.43134+00,https://docs.rs/rand_xoshiro,https://rust-random.github.io/book,https://github.com/rust-random/rngs,105430
aws-smithy-xml,46037256,XML parsing logic for Smithy protocols.,2021-10-20 23:52:53.560509+00,2025-06-11 20:10:27.530652+00,,,https://github.com/smithy-lang/smithy-rs,468192
actix-macros,45966893,Macros for Actix system and runtime,2019-12-01 14:11:37.045433+00,2023-07-19 22:54:08.231118+00,,,https://github.com/actix/actix-net.git,185725
unicode-linebreak,45921123,Implementation of the Unicode Line Breaking Algorithm,2018-12-10 20:45:01.729575+00,2023-07-25 11:49:38.560848+00,,https://github.com/axelf4/unicode-linebreak,https://github.com/axelf4/unicode-linebreak,101192
actix-server,45910113,General purpose TCP server built for the Actix ecosystem,2018-12-11 16:44:34.322212+00,2025-05-09 18:45:41.713779+00,,https://actix.rs,https://github.com/actix/actix-net/tree/master/actix-server,101456
actix-utils,45887785,Various utilities used in the Actix ecosystem,2018-12-11 16:41:30.670256+00,2022-10-21 02:16:28.434701+00,,,https://github.com/actix/actix-net,101454
aws-sdk-sts,45831668,AWS SDK for AWS Security Token Service,2021-05-08 02:52:41.470351+00,2025-10-03 00:30:19.967525+00,,,https://github.com/awslabs/aws-sdk-rust,394691
bytesize,45661819,Semantic wrapper for byte count representations,2015-04-19 04:55:38.917419+00,2025-09-15 08:39:40.271542+00,,,https://github.com/bytesize-rs/bytesize,1894
actix-service,45553392,Service trait and combinators for representing asynchronous request/response operations.,2018-12-09 18:06:41.389362+00,2025-03-09 17:57:51.688174+00,,,https://github.com/actix/actix-net,100962
ron,45488917,Rusty Object Notation,2017-07-30 18:52:31.572953+00,2025-08-27 09:10:11.801188+00,https://docs.rs/ron/,https://github.com/ron-rs/ron,https://github.com/ron-rs/ron,25715
thrift,45263704,Rust bindings for the Apache Thrift RPC system,2017-04-10 20:06:33.76739+00,2022-11-14 01:43:24.27625+00,https://docs.rs/thrift,http://thrift.apache.org,https://github.com/apache/thrift/tree/master/lib/rs,10230
actix-router,45250667,Resource path matching and router,2019-03-09 22:39:40.250434+00,2024-05-19 11:16:59.449105+00,,,https://github.com/actix/actix-web,119668
aws-config,45244896,AWS SDK config and credential provider implementations.,2021-10-21 20:08:43.34471+00,2025-10-03 00:30:58.122208+00,,,https://github.com/smithy-lang/smithy-rs,468977
ordered-multimap,45238412,Insertion ordered multimap,2018-11-17 22:28:51.467238+00,2024-04-01 10:34:17.349186+00,,,https://github.com/sgodwincs/ordered-multimap-rs,97308
bytestring,45207010,A UTF-8 encoded read-only string using `Bytes` as storage,2019-12-07 05:03:17.279001+00,2025-09-15 08:21:13.270913+00,,https://actix.rs,https://github.com/actix/actix-net,187036
vsimd,45121733,SIMD utilities,2022-09-01 16:14:34.384319+00,2022-12-28 03:06:21.978295+00,,,https://github.com/Nugine/simd,656850
cxxbridge-macro,45019004,Implementation detail of the `cxx` crate.,2020-01-08 16:51:00.546848+00,2025-09-25 04:18:16.848525+00,,https://cxx.rs,https://github.com/dtolnay/cxx,196618
cxx,44949697,Safe interop between Rust and C++,2019-12-28 02:59:21.893783+00,2025-09-25 04:18:25.364426+00,https://docs.rs/cxx,https://cxx.rs,https://github.com/dtolnay/cxx,192866
clap_complete,44702076,Generate shell completion scripts for your clap::Command,2021-12-31 18:24:25.813971+00,2025-09-16 01:37:57.062314+00,,,https://github.com/clap-rs/clap,505887
os_pipe,44628219,a cross-platform library for opening OS pipes,2016-07-12 16:41:51.109567+00,2025-05-22 17:16:35.580677+00,https://docs.rs/os_pipe,,https://github.com/oconnor663/os_pipe.rs,5646
actix-web-codegen,44594507,Routing and runtime macros for Actix Web,2019-03-28 20:13:19.911291+00,2024-06-08 23:24:23.437523+00,,https://actix.rs,https://github.com/actix/actix-web,124424
tiff,44576866,TIFF decoding and encoding library in pure Rust,2018-06-18 11:58:21.12154+00,2025-09-01 00:34:01.337004+00,,,https://github.com/image-rs/image-tiff,70636
miow,44262536,"A zero overhead I/O library for Windows, focusing on IOCP and async I/O abstractions. ",2015-10-28 16:48:07.632796+00,2025-09-10 22:01:05.981172+00,,https://github.com/yoshuawuyts/miow,https://github.com/yoshuawuyts/miow,3320
derive_arbitrary,44184984,Derives arbitrary traits,2018-10-13 06:40:29.348245+00,2025-08-14 18:20:00.920961+00,https://docs.rs/arbitrary/,,https://github.com/rust-fuzz/arbitrary,89540
cxxbridge-flags,44162154,Compiler configuration of the `cxx` crate (implementation detail),2020-08-30 19:11:14.887567+00,2025-09-25 04:17:52.455538+00,,,https://github.com/dtolnay/cxx,282801
ndarray,44129221,An n-dimensional array for general elements and for numerics. Lightweight array views and slicing...,2015-12-20 22:11:24.106344+00,2024-08-14 17:38:28.979522+00,https://docs.rs/ndarray/,,https://github.com/rust-ndarray/ndarray,3717
tikv-jemalloc-sys,44071724,Rust FFI bindings to jemalloc ,2020-07-21 11:43:42.741205+00,2024-07-14 15:39:53.008485+00,https://docs.rs/tikv-jemallocator-sys,https://github.com/tikv/jemallocator,https://github.com/tikv/jemallocator,267581
link-cplusplus,44058095,Link libstdc++ or libc++ automatically or manually,2020-01-24 23:19:30.309958+00,2025-09-06 23:16:42.930159+00,https://docs.rs/link-cplusplus,,https://github.com/dtolnay/link-cplusplus,201683
rstest,44012859,Rust fixture based test framework. It use procedural macro to implement fixtures and table based ...,2018-10-14 20:13:18.549988+00,2025-07-27 09:52:53.927495+00,,https://github.com/la10736/rstest,https://github.com/la10736/rstest,90201
comfy-table,43961971,An easy to use library for building beautiful tables with automatic content wrapping,2020-01-19 19:39:43.902087+00,2025-09-11 09:44:55.218694+00,https://docs.rs/comfy-table/,https://github.com/nukesor/comfy-table,https://github.com/nukesor/comfy-table,200219
rgb,43825541,`struct RGB/RGBA/etc.` for sharing pixels between crates + convenience methods for color manipula...,2016-06-18 17:02:02.336922+00,2025-07-13 19:41:15.371494+00,https://docs.rs/rgb,https://lib.rs/crates/rgb,https://github.com/kornelski/rust-rgb,5416
aws-smithy-query,43608300,AWSQuery and EC2Query Smithy protocol logic for smithy-rs.,2021-10-20 22:55:41.130772+00,2024-03-12 19:43:09.525858+00,,,https://github.com/smithy-lang/smithy-rs,468176
password-hash,43596191,"Traits which describe the functionality of password hashing algorithms, as well as a `no_std`-fri...",2020-08-18 19:09:14.097687+00,2025-05-29 22:51:58.694631+00,https://docs.rs/password-hash,,https://github.com/RustCrypto/traits,278011
fallible-streaming-iterator,43552814,Fallible streaming iteration,2016-12-17 05:15:07.551663+00,2018-05-02 20:02:49.746627+00,,,https://github.com/sfackler/fallible-streaming-iterator,7651
unicode-properties,43426128,Query character Unicode properties according to UAX #44 and UTR #51. ,2023-07-27 18:42:44.247368+00,2024-09-30 17:58:19.121238+00,https://docs.rs/unicode-properties,https://github.com/unicode-rs/unicode-properties,https://github.com/unicode-rs/unicode-properties,927717
byte-tools,43351878,Bytes related utility functions,2016-10-06 18:00:39.776283+00,2019-01-28 14:52:53.093902+00,https://docs.rs/byte-tools,,https://github.com/RustCrypto/utils,6743
smawk,43254886,Functions for finding row-minima in a totally monotone matrix.,2018-08-07 20:23:20.055686+00,2023-09-17 20:46:37.049294+00,,,https://github.com/mgeisler/smawk,78268
aws-sdk-sso,43053228,AWS SDK for AWS Single Sign-On,2021-05-07 21:38:03.54825+00,2025-10-03 00:30:03.918889+00,,,https://github.com/awslabs/aws-sdk-rust,394527
ouroboros,42860491,"Easy, safe self-referential struct generation.",2020-09-20 00:54:06.963212+00,2025-01-11 04:16:42.134017+00,https://docs.rs/ouroboros,,https://github.com/someguynamedjosh/ouroboros,290576
deadpool-runtime,42745485,Dead simple async pool utitities for sync managers,2021-10-26 13:35:13.545355+00,2024-05-04 09:27:46.238904+00,,,https://github.com/bikeshedder/deadpool,471921
castaway,42711380,"Safe, zero-cost downcasting for limited compile-time specialization.",2021-06-21 15:09:04.697923+00,2025-07-12 16:49:05.343219+00,,,https://github.com/sagebind/castaway,412966
cfg-expr,42623362,A parser and evaluator for Rust `cfg()` expressions.,2020-01-09 17:16:21.632089+00,2025-09-18 15:54:21.76068+00,https://docs.rs/cfg-expr,https://github.com/EmbarkStudios/cfg-expr,https://github.com/EmbarkStudios/cfg-expr,196946
nanorand,42534686,"A tiny, fast, zero-dep library for random number generation.",2020-09-06 02:01:21.666498+00,2025-06-08 05:12:53.568111+00,,,https://github.com/Absolucy/nanorand-rs,285261
ouroboros_macro,42518978,Proc macro for ouroboros crate.,2020-09-20 00:53:05.914063+00,2025-01-11 04:16:12.258915+00,https://docs.rs/ouroboros_macro,,https://github.com/someguynamedjosh/ouroboros,290575
fs2,42221430,Cross-platform file locks and file duplication.,2015-09-02 04:59:26.926644+00,2018-01-06 20:18:30.565584+00,https://docs.rs/fs2,,https://github.com/danburkert/fs2-rs,2979
flatbuffers,41879352,Official FlatBuffers Rust runtime library.,2016-06-01 19:18:36.248215+00,2025-09-24 05:25:33.112491+00,,https://google.github.io/flatbuffers/,https://github.com/google/flatbuffers,5260
globwalk,41626113,Glob-matched recursive file system walking.,2018-02-20 19:15:22.386402+00,2024-01-06 20:53:34.390377+00,,,https://github.com/gilnaa/globwalk,52108
windows-registry,41578522,Windows registry,2024-02-15 05:27:39.377652+00,2025-09-04 20:22:08.421058+00,,,https://github.com/microsoft/windows-rs,1140682
cxx-build,41502512,C++ code generator for integrating `cxx` crate into a Cargo build.,2020-04-30 01:59:02.039905+00,2025-09-25 04:18:05.899997+00,https://docs.rs/cxx-build,https://cxx.rs,https://github.com/dtolnay/cxx,235631
redis,41460329,Redis driver for Rust.,2014-11-21 15:32:46.563387+00,2025-10-01 12:04:14.052908+00,https://docs.rs/redis,https://github.com/redis-rs/redis-rs,https://github.com/redis-rs/redis-rs,309
atomic,41335843,Generic Atomic<T> wrapper type,2016-03-30 15:37:44.649798+00,2025-06-20 07:00:18.336083+00,,,https://github.com/Amanieu/atomic-rs,4619
zerotrie,41282558,A data structure that efficiently maps strings to integers,2023-09-23 04:06:54.409204+00,2025-05-07 20:57:17.637564+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,981047
cpp_demangle,41070916,A crate for demangling C++ symbols,2016-12-11 23:40:24.693468+00,2025-09-24 03:18:44.122071+00,https://docs.rs/cpp_demangle,,https://github.com/gimli-rs/cpp_demangle,7544
crc32c,41014755,Safe implementation for hardware accelerated CRC32C instructions with software fallback,2017-09-15 15:21:20.021596+00,2024-06-09 17:15:44.323361+00,http://docs.rs/crc32c,https://github.com/zowens/crc32c,https://github.com/zowens/crc32c,31892
compact_str,40885791,"A memory efficient string type that transparently stores strings on the stack, when possible",2021-09-20 01:29:08.474329+00,2025-02-25 03:43:37.57831+00,,https://github.com/ParkMyCar/compact_str,https://github.com/ParkMyCar/compact_str,453807
windows-link,40649660,Linking for Windows,2024-07-17 14:18:37.425755+00,2025-09-04 20:18:34.677915+00,,,https://github.com/microsoft/windows-rs,1306222
nalgebra,40610661,General-purpose linear algebra library with transformations and statically-sized or dynamically-s...,2014-11-22 18:53:15.674678+00,2025-09-20 09:27:32.253565+00,https://www.nalgebra.rs/docs,https://nalgebra.rs,https://github.com/dimforge/nalgebra,347
smol_str,40515167,small-string optimized string type with O(1) clone,2018-08-16 20:33:17.419277+00,2024-10-23 20:56:36.024822+00,,,https://github.com/rust-analyzer/smol_str,79831
scratch,40497658,Compile-time temporary directory shared by multiple crates and erased by `cargo clean`,2020-09-17 05:19:17.837573+00,2025-08-07 17:20:24.982084+00,https://docs.rs/scratch,,https://github.com/dtolnay/scratch,289671
tikv-jemallocator,40395927,A Rust allocator backed by jemalloc ,2020-07-21 11:46:51.343626+00,2024-07-14 15:42:35.076775+00,https://docs.rs/jemallocator,https://github.com/tikv/jemallocator,https://github.com/tikv/jemallocator,267582
sqlformat,40370589,Formats whitespace in a SQL string to make it easier to read,2020-04-18 23:00:30.535387+00,2025-09-17 13:54:22.35718+00,https://docs.rs/sqlformat,https://github.com/shssoichiro/sqlformat-rs,https://github.com/shssoichiro/sqlformat-rs,231701
tagptr,40151077,Strongly typed atomic and non-atomic tagged pointers,2021-08-13 09:10:42.049617+00,2021-08-13 09:10:42.049617+00,https://docs.rs/tagptr,,https://github.com/oliver-giersch/tagptr.git,435633
enumflags2,40141771,Enum-based bit flags,2019-01-29 21:27:53.37125+00,2025-06-09 22:16:25.147642+00,https://docs.rs/enumflags2,,https://github.com/meithecatte/enumflags2,111478
enumflags2_derive,40077261,"Do not use directly, use the reexport in the `enumflags2` crate. This allows for better compatibi...",2019-01-29 21:27:19.198123+00,2025-06-09 22:15:13.358677+00,,,https://github.com/meithecatte/enumflags2,111477
aws-credential-types,40073581,Types for AWS SDK credentials.,2022-12-29 17:14:14.380039+00,2025-10-03 00:28:49.410588+00,,,https://github.com/smithy-lang/smithy-rs,747453
rstest_macros,39879109,Rust fixture based test framework. It use procedural macro to implement fixtures and table based ...,2022-05-15 15:40:53.435918+00,2025-07-27 09:37:28.034204+00,,https://github.com/la10736/rstest,https://github.com/la10736/rstest,587208
local-channel,39817359,"A non-threadsafe multi-producer, single-consumer, futures-aware, FIFO queue",2021-03-29 07:48:18.879481+00,2023-10-29 23:18:52.40927+00,,,https://github.com/actix/actix-net,375027
local-waker,39811015,A synchronization primitive for thread-local task wakeup,2021-03-29 08:09:28.331291+00,2023-10-29 23:18:39.529257+00,,,https://github.com/actix/actix-net,375039
typed-arena,39787008,"The arena, a fast but limited type of allocator",2015-04-10 16:54:43.348496+00,2023-01-09 06:53:08.531421+00,https://docs.rs/typed-arena,,https://github.com/SimonSapin/rust-typed-arena,1833
rand_isaac,39700069,ISAAC random number generator ,2018-10-17 10:09:32.428249+00,2025-01-27 14:40:17.354946+00,https://docs.rs/rand_isaac,https://rust-random.github.io/book,https://github.com/rust-random/rngs,91130
potential_utf,39677539,Unvalidated string and character types,2024-11-23 02:01:07.709701+00,2025-08-28 21:51:03.86956+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,1458137
tracing-appender,39606031,Provides utilities for file appenders and making non-blocking writers. ,2020-05-05 17:20:53.142881+00,2023-11-13 19:52:32.45733+00,,https://tokio.rs,https://github.com/tokio-rs/tracing,237794
errno-dragonfly,39561015,Exposes errno functionality to stable Rust on DragonFlyBSD,2017-07-10 18:46:44.46987+00,2021-09-27 08:59:29.274682+00,,,https://github.com/mneumann/errno-dragonfly-rs,22896
metrics-util,39356048,Helper types/functions used by the metrics ecosystem.,2019-04-23 20:33:21.26438+00,2025-06-20 12:35:25.955564+00,https://docs.rs/metrics-util,https://github.com/metrics-rs/metrics,https://github.com/metrics-rs/metrics,129727
moka,39354518,A fast and concurrent cache library inspired by Java Caffeine,2020-10-22 01:38:51.643451+00,2025-09-23 13:08:46.056419+00,https://docs.rs/moka/,,https://github.com/moka-rs/moka,304119
rand_os,39318863,OS backed Random Number Generator,2019-01-04 11:31:17.691682+00,2019-08-28 14:24:22.432373+00,https://docs.rs/rand_os,https://crates.io/crates/rand_os,https://github.com/rust-random/rand,105421
failure,39315608,Experimental error handling abstraction.,2017-10-08 21:02:37.136531+00,2020-05-02 18:13:11.746367+00,https://docs.rs/failure,https://rust-lang-nursery.github.io/failure/,https://github.com/rust-lang-nursery/failure,34914
sqlx-macros-core,39197923,"Macro support core for SQLx, the Rust SQL toolkit. Not intended to be used directly.",2023-02-22 00:45:22.141418+00,2025-05-19 23:23:50.411136+00,,,https://github.com/launchbadge/sqlx,791222
aws-lc-sys,39007381,AWS-LC is a general-purpose cryptographic library maintained by the AWS Cryptography team for AWS...,2022-11-09 14:51:37.712153+00,2025-09-30 18:29:42.369126+00,,,https://github.com/aws/aws-lc-rs,708803
aws-lc-rs,38966906,aws-lc-rs is a cryptographic library using AWS-LC for its cryptographic operations. This library ...,2023-04-11 17:33:56.970172+00,2025-09-24 18:35:42.534924+00,https://docs.rs/crate/aws-lc-rs,https://github.com/aws/aws-lc-rs,https://github.com/aws/aws-lc-rs,836213
heapless,38957731,`static` friendly data structures that don't require dynamic memory allocation,2017-04-27 21:26:06.94602+00,2025-08-20 09:25:34.497403+00,https://docs.rs/heapless,,https://github.com/rust-embedded/heapless,12260
seq-macro,38956899,Macro to repeat sequentially indexed copies of a fragment of code.,2018-08-22 21:18:19.293265+00,2025-03-04 00:15:39.018851+00,https://docs.rs/seq-macro,,https://github.com/dtolnay/seq-macro,80808
raw-window-handle,38847803,Interoperability library for Rust Windowing applications.,2019-07-25 17:59:29.039274+00,2024-05-17 19:41:38.79608+00,https://docs.rs/raw-window-handle,,https://github.com/rust-windowing/raw-window-handle,151612
relative-path,38827239,"Portable, relative paths for Rust.",2017-11-04 21:07:50.694189+00,2025-05-10 17:06:18.350439+00,https://docs.rs/relative-path,https://github.com/udoprog/relative-path,https://github.com/udoprog/relative-path,38165
ena,38801820,"Union-find, congruence closure, and other unification code. Based on code from rustc.",2016-10-22 10:17:49.884115+00,2024-05-06 18:25:50.618116+00,,https://github.com/rust-lang/ena,https://github.com/rust-lang/ena,6938
nodrop,38786798,A wrapper type to inhibit drop (destructor).  ***Deprecated: Use ManuallyDrop or MaybeUninit inst...,2015-05-21 09:53:29.753562+00,2019-10-09 07:33:37.389023+00,https://docs.rs/nodrop/,,https://github.com/bluss/arrayvec,2159
icu_locale_core,38780302,API for managing Unicode Language and Locale Identifiers,2024-11-23 02:05:22.396817+00,2025-05-07 20:56:47.396646+00,,https://icu4x.unicode.org,https://github.com/unicode-org/icu4x,1458139
sqlx-postgres,38769447,PostgreSQL driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.,2019-11-27 06:24:44.64959+00,2025-05-19 23:23:25.93368+00,https://docs.rs/sqlx,,https://github.com/launchbadge/sqlx,184747
ipnetwork,38706168,A library to work with IP CIDRs in Rust,2015-04-24 07:20:40.441668+00,2025-01-07 18:56:45.25938+00,,,https://github.com/achanda/ipnetwork,1930
sqlx-sqlite,38645858,SQLite driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.,2019-11-27 06:25:00.21463+00,2025-05-19 23:23:41.144477+00,https://docs.rs/sqlx,,https://github.com/launchbadge/sqlx,184750
json-patch,38592873,"RFC 6902, JavaScript Object Notation (JSON) Patch",2017-10-20 20:06:36.954007+00,2025-09-16 13:44:46.257514+00,,,https://github.com/idubrov/json-patch,36395
signal-hook-mio,38512736,MIO support for signal-hook,2020-11-22 16:26:24.100167+00,2024-07-28 18:21:20.566409+00,https://docs.rs/signal-hook-mio,,https://github.com/vorner/signal-hook,315043
quickcheck,38392977,Automatic property based testing with shrinking.,2014-11-21 00:20:47.094295+00,2021-01-15 12:44:44.590509+00,https://docs.rs/quickcheck,https://github.com/BurntSushi/quickcheck,https://github.com/BurntSushi/quickcheck,196
serde-wasm-bindgen,38378908,Native Serde adapter for wasm-bindgen,2019-05-16 17:15:02.792426+00,2024-02-27 21:32:21.678632+00,,,https://github.com/RReverser/serde-wasm-bindgen,134715
poly1305,38310714,The Poly1305 universal hash function and message authentication code,2016-10-06 21:34:24.248885+00,2025-09-03 03:25:11.497339+00,https://docs.rs/poly1305,,https://github.com/RustCrypto/universal-hashes,6767
primeorder,38307980,Pure Rust implementation of complete addition formulas for prime order elliptic curves (Renes-Cos...,2022-06-30 00:32:33.647355+00,2025-09-13 19:57:13.941085+00,https://docs.rs/primeorder,https://github.com/RustCrypto/elliptic-curves/tree/master/primeorder,https://github.com/RustCrypto/elliptic-curves,616066
chacha20,38157577,The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits from the RustCrypto `...,2016-10-06 21:11:22.073136+00,2025-09-09 17:51:53.357772+00,https://docs.rs/chacha20,,https://github.com/RustCrypto/stream-ciphers,6755
jsonpath-rust,38150468,The library provides the basic functionality to find the set of the data according to the filteri...,2021-05-04 20:51:07.477453+00,2025-07-30 20:36:41.135326+00,,https://github.com/besok/jsonpath-rust,https://github.com/besok/jsonpath-rust,393248
assert_cmd,38127443,Test CLI Applications.,2018-05-28 20:57:36.584641+00,2025-04-16 15:18:26.595725+00,http://docs.rs/assert_cmd/,https://github.com/assert-rs/assert_cmd,https://github.com/assert-rs/assert_cmd.git,67510
sqlx-mysql,38112626,MySQL driver implementation for SQLx. Not for direct use; see the `sqlx` crate for details.,2019-11-27 06:24:47.299981+00,2025-05-19 23:23:18.268118+00,https://docs.rs/sqlx,,https://github.com/launchbadge/sqlx,184748
slotmap,38059726,Slotmap data structure,2018-07-02 16:03:35.775764+00,2023-11-30 21:58:03.103403+00,,,https://github.com/orlp/slotmap,72603
string_cache_codegen,38050881,"A codegen library for string-cache, developed as part of the Servo project.",2016-10-28 15:22:43.684874+00,2025-09-08 13:54:40.252183+00,https://docs.rs/string_cache_codegen/,,https://github.com/servo/string-cache,7025
rand_jitter,37924870,Random number generator based on timing jitter,2019-01-25 09:53:44.828929+00,2025-01-27 14:40:27.039041+00,https://docs.rs/rand_jitter,,https://github.com/rust-random/rngs,110592
educe,37917460,This crate offers procedural macros designed to facilitate the swift implementation of Rust's bui...,2019-07-26 07:18:01.434946+00,2024-06-01 07:36:58.840438+00,,https://magiclen.org/educe,https://github.com/magiclen/educe,151725
radix_trie,37883543,Generic radix trie data-structure.,2015-03-20 20:50:32.652844+00,2025-09-16 06:13:19.569086+00,https://docs.rs/radix_trie/,,https://github.com/michaelsproul/rust_radix_trie,1626
nibble_vec,37812979,Vector data-structure for half-byte values.,2015-03-20 20:14:32.099919+00,2020-06-27 23:13:10.337313+00,https://docs.rs/rust_nibble_vec,,https://github.com/michaelsproul/rust_nibble_vec,1624
lalrpop-util,37802233,Runtime library for parsers generated by LALRPOP,2015-07-26 11:13:20.409919+00,2025-05-22 18:49:40.070976+00,,,https://github.com/lalrpop/lalrpop,2680
async-broadcast,37732677,Async broadcast channels,2020-05-29 13:23:37.578954+00,2024-12-23 21:10:23.927278+00,https://docs.rs/async-broadcast,,https://github.com/smol-rs/async-broadcast,247365
rusqlite,37679486,Ergonomic wrapper for SQLite,2014-11-21 14:53:31.345189+00,2025-07-06 06:57:03.76033+00,https://docs.rs/rusqlite/,,https://github.com/rusqlite/rusqlite,308
endian-type,37679273,Type safe wrappers for types with a defined byte order,2015-07-27 12:14:06.879984+00,2023-03-06 12:19:53.764548+00,,,https://github.com/Lolirofle/endian-type.git,2697
safemem,37610176,"Safe wrappers for memory-accessing functions, like `std::ptr::copy()`.",2016-09-10 02:34:44.350724+00,2019-10-22 03:54:11.474305+00,https://docs.rs/safemem,,https://github.com/abonander/safemem,6304
lz4,37228967,Rust LZ4 bindings library.,2015-03-02 07:16:36.166359+00,2025-01-07 09:23:34.54272+00,https://docs.rs/lz4,,https://github.com/10xGenomics/lz4-rs,1506
iri-string,37204004,IRI as string types,2018-05-04 11:19:06.028951+00,2025-03-20 03:01:54.690015+00,,,https://github.com/lo48576/iri-string,63720
console_error_panic_hook,37137752,A panic hook for `wasm32-unknown-unknown` that logs panics to `console.error`,2018-05-23 22:46:11.047945+00,2021-10-11 17:01:02.936833+00,,,https://github.com/rustwasm/console_error_panic_hook,66839
sqlparser,37123404,Extensible SQL Lexer and Parser with support for ANSI SQL:2011,2018-09-03 16:04:40.122401+00,2025-09-24 12:40:38.913834+00,https://docs.rs/sqlparser/,https://github.com/apache/datafusion-sqlparser-rs,https://github.com/apache/datafusion-sqlparser-rs,82773
maybe-uninit,37073372,MaybeUninit for friends of backwards compatibility,2019-07-09 02:54:23.855805+00,2019-07-10 13:41:31.04347+00,,,https://github.com/est31/maybe-uninit,147730
assert_matches,37016451,Asserts that a value matches a pattern,2016-02-16 20:12:56.68643+00,2021-02-05 04:16:48.301552+00,https://docs.rs/assert_matches/,https://github.com/murarth/assert_matches,https://github.com/murarth/assert_matches,4194
failure_derive,36887408,derives for the failure crate,2017-11-11 00:12:56.159388+00,2020-05-02 18:13:57.357775+00,https://docs.rs/failure,https://rust-lang-nursery.github.io/failure/,https://github.com/rust-lang-nursery/failure,38934
ttf-parser,36769921,"A high-level, safe, zero-allocation font parser for TrueType, OpenType, and AAT.",2019-06-18 11:05:28.494089+00,2024-11-29 19:59:37.395141+00,https://docs.rs/ttf-parser/,,https://github.com/harfbuzz/ttf-parser,141916
fake-simd,36676249,Crate for mimicking simd crate on stable Rust,2016-10-07 10:30:52.420542+00,2016-12-25 02:41:39.196656+00,https://docs.rs/fake-simd,,https://github.com/RustCrypto/utils,6772
tokio-retry,36345444,"Extensible, asynchronous retry behaviours for futures/tokio",2017-03-05 13:07:28.724889+00,2021-03-06 13:07:27.598743+00,https://docs.rs/tokio-retry,,https://github.com/srijs/rust-tokio-retry,8827
fraction,36218561,Lossless fractions and decimals; drop-in float replacement,2016-01-24 01:12:45.914179+00,2024-05-12 06:35:10.815037+00,https://docs.rs/fraction/,https://github.com/dnsl48/fraction.git,https://github.com/dnsl48/fraction.git,3973
fiat-crypto,36126516,Fiat-crypto generated Rust,2020-02-04 04:31:50.717927+00,2025-06-04 02:42:06.808859+00,,https://github.com/mit-plv/fiat-crypto,https://github.com/mit-plv/fiat-crypto,204701
nohash-hasher,36087652,An implementation of `std::hash::Hasher` which does not hash at all.,2018-09-18 09:25:56.736884+00,2020-02-17 11:38:13.111407+00,,,https://github.com/paritytech/nohash-hasher,85328
hex-literal,36026903,Macro for converting hexadecimal string to a byte array at compile time,2018-01-29 07:31:43.468706+00,2025-02-22 15:32:13.912197+00,https://docs.rs/hex-literal,,https://github.com/RustCrypto/utils,48751
leb128,35881184,"Read and write DWARF's ""Little Endian Base 128"" (LEB128) variable length integer encoding.",2016-06-13 21:36:16.08267+00,2021-10-04 18:50:22.284194+00,https://docs.rs/leb128,,https://github.com/gimli-rs/leb128,5374
directories,35840543,A tiny mid-level library that provides platform-specific standard locations of directories for co...,2017-12-18 07:12:55.098997+00,2025-01-12 17:19:05.177535+00,,,https://github.com/soc/directories-rs,43503
jsonschema,35723746,JSON schema validaton library,2020-03-29 09:11:59.696721+00,2025-08-24 17:40:15.614921+00,,,https://github.com/Stranger6667/jsonschema,224005
uint,35686910,Large fixed-size integer arithmetic,2017-12-29 16:23:50.415375+00,2024-09-11 09:42:44.055997+00,,http://parity.io,https://github.com/paritytech/parity-common,44830
object_store,35685632,"A generic object store interface for uniformly interacting with AWS S3, Google Cloud Storage, Azu...",2022-05-13 15:41:59.625632+00,2025-09-23 11:34:29.932697+00,,,https://github.com/apache/arrow-rs-object-store,585938
procfs,35656392,Interface to the linux procfs pseudo-filesystem,2018-06-17 21:50:15.090115+00,2025-08-30 01:07:56.244208+00,https://docs.rs/procfs/,,https://github.com/eminence/procfs,70550
aliasable,35563934,Basic aliasable (non unique pointer) types,2020-12-07 03:08:24.21249+00,2021-01-10 04:20:00.538145+00,https://docs.rs/aliasable,https://github.com/avitex/rust-aliasable,https://github.com/avitex/rust-aliasable,320355
test-log,35454852,A replacement of the #[test] attribute that initializes logging and/or tracing infrastructure bef...,2021-06-29 15:08:36.371765+00,2025-06-30 15:04:29.225105+00,,https://github.com/d-e-s-o/test-log,https://github.com/d-e-s-o/test-log.git,416195
jiff,35267256,A date-time library that encourages you to jump into the pit of success.  This library is heavily...,2024-02-17 18:34:44.638963+00,2025-06-13 18:22:20.901525+00,https://docs.rs/jiff,,https://github.com/BurntSushi/jiff,1143399
cadence,35219407,An extensible Statsd client for Rust,2015-12-23 03:47:06.58842+00,2025-06-21 13:40:26.87216+00,https://docs.rs/cadence/,https://github.com/56quarters/cadence,https://github.com/56quarters/cadence,3733
stacker,35197633,A stack growth library useful when implementing deeply recursive algorithms that may accidentally...,2015-07-15 07:14:55.8883+00,2025-10-02 23:35:50.984992+00,https://docs.rs/stacker/0.1.20,https://github.com/rust-lang/stacker,https://github.com/rust-lang/stacker,2608
dialoguer,35121297,A command line prompting library.,2017-05-11 06:30:49.422438+00,2025-08-23 15:37:51.581957+00,https://docs.rs/dialoguer,https://github.com/console-rs/dialoguer,https://github.com/console-rs/dialoguer,14144
async-signal,35048319,Async signal handling,2019-06-10 20:26:13.781185+00,2025-09-14 14:08:14.271854+00,,,https://github.com/smol-rs/async-signal,140282
aws-smithy-runtime,35021697,The new smithy runtime crate,2023-04-06 11:08:04.30736+00,2025-09-10 21:09:51.464016+00,,,https://github.com/smithy-lang/smithy-rs,832117
blake2b_simd,34961808,a pure Rust BLAKE2b implementation with dynamic SIMD,2018-08-12 07:17:52.808085+00,2025-02-04 19:25:34.339206+00,https://docs.rs/blake2b_simd,,https://github.com/oconnor663/blake2_simd,79071
aws-smithy-runtime-api,34892389,Smithy runtime types.,2023-04-06 11:08:28.419982+00,2025-08-18 19:37:52.294377+00,,,https://github.com/smithy-lang/smithy-rs,832119
proc-macro-error2,34872939,Almost drop-in replacement to panics in proc-macros,2023-08-26 11:26:40.98199+00,2024-09-06 20:04:43.796942+00,,,https://github.com/GnomedDev/proc-macro-error-2,955483
proc-macro-error-attr2,34866111,Attribute macro for the proc-macro-error2 crate,2024-09-01 22:11:25.963845+00,2024-09-05 11:14:52.30135+00,,,https://github.com/GnomedDev/proc-macro-error-2,1359899
aws-runtime,34787617,Runtime support code for the AWS SDK. This crate isn't intended to be used directly.,2023-04-06 11:08:39.425422+00,2025-10-03 00:29:27.472213+00,,,https://github.com/smithy-lang/smithy-rs,832120
if_chain,34785065,Macro for writing nested `if let` expressions.,2016-12-28 22:56:06.959949+00,2025-08-29 15:19:03.717105+00,https://docs.rs/if_chain,,https://github.com/lambda-fairy/if_chain,7826
k256,34762016,secp256k1 elliptic curve library written in pure Rust with support for ECDSA signing/verification...,2019-12-05 19:11:49.527595+00,2025-09-14 01:28:40.178098+00,https://docs.rs/k256,https://github.com/RustCrypto/elliptic-curves/tree/master/k256,https://github.com/RustCrypto/elliptic-curves,186731
http-types,34637726,Common types for HTTP operations.,2019-08-02 01:35:07.21135+00,2021-08-10 17:22:45.729254+00,https://docs.rs/http-types,,https://github.com/http-rs/http-types,153670
arrow-schema,34535963,Defines the logical types for arrow arrays,2022-10-03 20:41:44.180413+00,2025-09-23 13:19:08.425942+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,679358
arrow-buffer,34505544,Buffer abstractions for Apache Arrow,2022-09-19 21:05:31.950856+00,2025-09-23 13:19:03.221587+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,669362
arrow-data,34438569,Array data abstractions for Apache Arrow,2022-10-03 20:42:03.513388+00,2025-09-23 13:19:16.355643+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,679359
arrow-array,34429261,Array abstractions for Apache Arrow,2022-10-03 20:42:44.292238+00,2025-09-23 13:19:26.54274+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,679360
standback,34289473,"New standard library, old compiler.",2020-03-06 02:10:24.334925+00,2022-04-07 02:00:50.674122+00,,,https://github.com/jhpratt/standback,215919
lalrpop,34221674,convenient LR(1) parser generator,2015-07-26 11:48:49.391461+00,2025-05-22 18:50:15.758394+00,,,https://github.com/lalrpop/lalrpop,2682
arrow-select,34154613,Selection kernels for arrow arrays,2022-11-03 20:26:04.114077+00,2025-09-23 13:19:37.444832+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,704617
curl-sys,34113711,Native bindings to the libcurl library,2014-12-12 20:33:25.2305+00,2025-08-12 19:25:51.078549+00,https://docs.rs/curl-sys,,https://github.com/alexcrichton/curl-rust,538
arrow-cast,34046285,Cast kernel and utilities for Apache Arrow,2022-11-14 22:05:34.653522+00,2025-09-23 13:19:48.018189+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,715216
litrs,33989923,Parse and inspect Rust literals (i.e. tokens in the Rust programming language representing fixed ...,2021-05-24 19:28:16.798772+00,2025-08-01 11:42:28.659187+00,https://docs.rs/litrs,,https://github.com/LukasKalbertodt/litrs,401540
typeid,33950182,Const TypeId and non-'static TypeId,2024-05-13 10:52:11.529794+00,2025-03-04 00:22:40.440718+00,https://docs.rs/typeid,,https://github.com/dtolnay/typeid,1238282
tonic-health,33887325,Health Checking module of `tonic` gRPC implementation. ,2020-04-01 18:46:23.203123+00,2025-09-02 17:43:08.939142+00,,https://github.com/hyperium/tonic,https://github.com/hyperium/tonic,225298
reqwest-middleware,33819508,Wrapper around reqwest to allow for client middleware chains.,2021-08-12 18:30:16.136759+00,2025-04-08 14:54:58.312492+00,,,https://github.com/TrueLayer/reqwest-middleware,435355
insta,33798178,A snapshot testing library for Rust,2019-01-13 22:30:14.791637+00,2025-09-04 18:28:45.258531+00,,https://insta.rs/,https://github.com/mitsuhiko/insta,108386
time-macros-impl,33794030,Procedural macros for the time crate.,2020-01-17 03:55:27.68964+00,2021-06-13 00:45:01.234186+00,,,https://github.com/time-rs/time,199279
enum-ordinalize,33695730,This library enables enums to not only obtain the ordinal values of their variants but also allow...,2018-09-02 12:28:36.62538+00,2023-12-15 01:28:22.414388+00,,https://magiclen.org/enum-ordinalize,https://github.com/magiclen/enum-ordinalize,82614
ark-std,33677050,A library for no_std compatibility,2021-03-24 17:29:26.323096+00,2024-10-28 10:38:24.008067+00,https://docs.rs/ark-std/,https://arkworks.rs,https://github.com/arkworks-rs/std,372993
sketches-ddsketch,33540452,A direct port of the Golang DDSketch implementation. ,2019-09-19 23:09:14.750114+00,2024-06-01 14:35:46.356351+00,,https://github.com/mheffner/rust-sketches-ddsketch,https://github.com/mheffner/rust-sketches-ddsketch,166092
json5,33488543,A Rust JSON5 serializer and deserializer which speaks Serde.,2018-07-30 21:46:45.448335+00,2021-09-21 17:53:36.305816+00,,,https://github.com/callum-oakley/json5-rs,76715
tokio-test,33464382,Testing utilities for Tokio- and futures-based code ,2019-02-21 21:18:05.646781+00,2024-03-14 21:10:42.417497+00,,https://tokio.rs,https://github.com/tokio-rs/tokio,116368
secp256k1,33364313,Rust wrapper library for Pieter Wuille's `libsecp256k1`. Implements ECDSA and BIP 340 signatures ...,2015-05-04 15:32:52.136467+00,2025-06-23 17:36:22.066832+00,https://docs.rs/secp256k1/,https://github.com/rust-bitcoin/rust-secp256k1/,https://github.com/rust-bitcoin/rust-secp256k1/,2023
chacha20poly1305,33322958,Pure Rust implementation of the ChaCha20Poly1305 Authenticated Encryption with Additional Data Ci...,2016-10-06 21:17:44.421862+00,2025-09-03 03:54:42.460627+00,https://docs.rs/chacha20poly1305,https://github.com/RustCrypto/AEADs/tree/master/chacha20poly1305,https://github.com/RustCrypto/AEADs,6758
simba,33277136,SIMD algebra for Rust,2020-03-23 08:25:14.906428+00,2025-09-05 14:25:33.599992+00,https://docs.rs/simba,,https://github.com/dimforge/simba,221682
chunked_transfer,33255088,Encoder and decoder for HTTP chunked transfer coding (RFC 7230 § 4.1),2015-05-03 20:49:01.809744+00,2023-11-23 04:36:30.183912+00,,,https://github.com/frewsxcv/rust-chunked-transfer,2014
lzma-sys,33215669,Raw bindings to liblzma which contains an implementation of LZMA and xz stream encoding/decoding....,2016-03-21 08:35:36.078685+00,2022-10-31 15:18:35.015053+00,https://docs.rs/lzma-sys,https://github.com/alexcrichton/xz2-rs,https://github.com/alexcrichton/xz2-rs,4507
aws-smithy-eventstream,33211938,Event stream logic for smithy-rs.,2021-10-20 22:40:32.952487+00,2025-08-18 19:37:46.879682+00,,,https://github.com/smithy-lang/smithy-rs,468155
unreachable,33183864,An unreachable code optimization hint in stable rust.,2015-06-02 22:21:46.648713+00,2017-05-09 20:54:44.587632+00,,,https://github.com/reem/rust-unreachable.git,2291
tempdir,33181246,A library for managing a temporary directory and deleting all contents when it's dropped. ,2015-02-22 00:27:07.951648+00,2018-03-21 07:46:03.078845+00,https://doc.rust-lang.org/tempdir,https://github.com/rust-lang/tempdir,https://github.com/rust-lang/tempdir,1447
dotenv,33177796,A `dotenv` implementation for Rust,2014-11-20 20:53:09.509225+00,2019-10-21 16:51:12.672006+00,,https://github.com/dotenv-rs/dotenv,https://github.com/dotenv-rs/dotenv,149
ark-serialize,33148947,A library for serializing types in the arkworks ecosystem,2021-03-24 20:11:23.852015+00,2024-10-28 10:58:16.913428+00,https://docs.rs/ark-serialize/,https://arkworks.rs,https://github.com/arkworks-rs/algebra,373035
ark-ff-asm,33114873,A library for generating x86-64 assembly for finite field multiplication,2021-03-24 20:17:19.337532+00,2024-10-28 11:00:23.081019+00,https://docs.rs/ark-ff-asm/,https://arkworks.rs,https://github.com/arkworks-rs/algebra,373041
ark-ff-macros,33084356,A library for generating x86-64 assembly for finite field multiplication,2021-03-24 20:14:24.351013+00,2024-10-28 10:59:20.193715+00,https://docs.rs/ark-ff-macros/,https://arkworks.rs,https://github.com/arkworks-rs/algebra,373038
arrow-ipc,33018709,Support for the Arrow IPC format,2022-11-14 22:06:22.22565+00,2025-09-23 13:22:26.694292+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,715218
ark-ff,32920489,A library for finite fields,2021-03-24 21:26:41.251066+00,2024-10-28 11:01:35.306707+00,https://docs.rs/ark-ff/,https://arkworks.rs,https://github.com/arkworks-rs/algebra,373064
bit_field,32888693,"Simple bit field trait providing get_bit, get_bits, set_bit, and set_bits methods for Rust's inte...",2016-05-24 20:21:58.392931+00,2025-08-26 14:49:40.629519+00,https://docs.rs/bit_field,,https://github.com/phil-opp/rust-bit-field,5176
humantime-serde,32856419,Serde support for the `humantime` crate,2019-05-24 22:21:10.983268+00,2022-03-11 20:10:58.643233+00,,,https://github.com/jean-airoldie/humantime-serde,136811
utf8-ranges,32801337,DEPRECATED. Use regex-syntax::utf8 submodule instead.,2015-10-16 01:21:55.954778+00,2022-04-04 18:56:49.704446+00,https://docs.rs/utf8-ranges,https://github.com/BurntSushi/utf8-ranges,https://github.com/BurntSushi/utf8-ranges,3231
xz2,32560190,Rust bindings to liblzma providing Read/Write streams as well as low-level in-memory encoding/dec...,2016-03-21 08:56:28.055345+00,2022-06-06 17:07:19.438302+00,https://docs.rs/xz2,https://github.com/alexcrichton/xz2-rs,https://github.com/alexcrichton/xz2-rs,4508
color-eyre,32555209,"An error report handler for panics and eyre::Reports for colorful, consistent, and well formatted...",2020-05-07 02:01:03.370402+00,2025-05-30 16:39:28.879707+00,https://docs.rs/color-eyre,,https://github.com/eyre-rs/eyre,238442
num-format,32553202,"A Rust crate for producing string-representations of numbers, formatted according to internationa...",2019-02-05 04:44:16.604302+00,2022-12-03 17:16:00.523753+00,https://docs.rs/num-format,https://github.com/bcmyers/num-format,https://github.com/bcmyers/num-format,112831
mach,32552885,A Rust interface to the user-space API of the Mach 3.0 kernel that underlies OSX.,2015-02-01 02:40:31.538953+00,2019-06-01 11:04:57.829203+00,,,https://github.com/fitzgen/mach,1324
ascii-canvas,32461401,simple canvas for drawing lines and styled text and emitting to the terminal,2017-03-02 10:48:31.952474+00,2024-09-30 16:34:10.453811+00,,,https://github.com/lalrpop/ascii-canvas,8765
aws-sdk-s3,32426145,AWS SDK for Amazon Simple Storage Service,2021-05-07 19:40:06.911083+00,2025-10-03 01:18:47.104586+00,,,https://github.com/awslabs/aws-sdk-rust,394388
generator,32338927,Stackfull Generator Library in Rust,2015-09-04 08:32:00.413239+00,2025-08-21 08:31:23.701216+00,https://docs.rs/generator,https://github.com/Xudong-Huang/generator-rs.git,https://github.com/Xudong-Huang/generator-rs.git,2986
x25519-dalek,32306185,"X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.",2017-09-14 04:44:50.630336+00,2025-09-04 15:44:19.911634+00,https://docs.rs/x25519-dalek,https://github.com/dalek-cryptography/curve25519-dalek,https://github.com/dalek-cryptography/curve25519-dalek/tree/main/x25519-dalek,31675
simple_logger,32290971,A logger that prints all messages with a readable output format,2015-02-24 01:30:57.181649+00,2024-04-30 16:15:04.284744+00,,,https://github.com/borntyping/rust-simple_logger,1458
enum-iterator-derive,32285353,Procedural macro to derive Sequence,2018-01-13 06:53:13.620313+00,2025-09-08 15:10:18.561931+00,https://docs.rs/enum-iterator-derive,https://github.com/stephaneyfx/enum-iterator,https://github.com/stephaneyfx/enum-iterator.git,46622
ipconfig,32277086,Get network adapters information and network configuration for windows.,2017-09-09 23:23:21.539697+00,2023-06-06 11:36:56.458033+00,https://docs.rs/ipconfig/0.3.2/x86_64-pc-windows-msvc/ipconfig/,https://github.com/liranringel/ipconfig,https://github.com/liranringel/ipconfig,31244
nonzero_ext,32268127,Extensions and additional traits for non-zero integer types,2018-09-15 15:04:43.714495+00,2021-08-21 15:57:43.150498+00,https://docs.rs/nonzero_ext,,https://github.com/antifuchs/nonzero_ext,84848
enum-iterator,32141872,Tools to iterate over all values of a type (e.g. all variants of an enumeration),2018-07-02 22:17:50.932167+00,2025-09-08 15:11:01.901802+00,https://docs.rs/enum-iterator,https://github.com/stephaneyfx/enum-iterator,https://github.com/stephaneyfx/enum-iterator.git,72646
markup5ever,32108828,Common code for xml5ever and html5ever,2017-02-25 21:47:06.765799+00,2025-07-02 07:59:51.591043+00,https://docs.rs/markup5ever,,https://github.com/servo/html5ever,8683
yasna,32108022,ASN.1 library for Rust,2016-07-02 05:49:33.674203+00,2023-04-06 01:12:13.650001+00,https://docs.rs/yasna,https://github.com/qnighy/yasna.rs,https://github.com/qnighy/yasna.rs,5564
unsigned-varint,32099274,unsigned varint encoding,2018-08-08 12:16:26.167103+00,2023-11-01 17:52:24.337696+00,,,https://github.com/paritytech/unsigned-varint,78353
governor,32043505,A rate-limiting implementation in Rust,2019-11-15 04:37:18.191097+00,2025-08-06 18:17:22.675408+00,https://docs.rs/governor,https://github.com/boinkor-net/governor,https://github.com/boinkor-net/governor.git,181452
no-std-compat,32041045,A `#![no_std]` compatibility layer that will make porting your crate to no_std *easy*.,2019-04-20 20:59:23.80504+00,2020-08-09 08:39:42.206558+00,,,https://gitlab.com/jD91mZM2/no-std-compat,129142
auto_impl,32030455,Automatically implement traits for common smart pointers and closures,2017-08-01 09:25:41.512344+00,2025-04-09 22:07:12.632059+00,https://docs.rs/auto_impl/,,https://github.com/auto-impl-rs/auto_impl/,25962
proc-macro-nested,32001850,Support for nested proc-macro-hack invocations,2018-11-18 10:20:51.180158+00,2021-01-13 22:57:37.841784+00,,,https://github.com/dtolnay/proc-macro-hack,97409
html5ever,31889568,High-performance browser-grade HTML5 parser,2015-06-15 22:02:43.231782+00,2025-07-02 08:00:24.042296+00,https://docs.rs/html5ever,,https://github.com/servo/html5ever,2395
uncased,31853951,"Case-preserving, ASCII case-insensitive, no_std string types.",2020-09-06 12:17:56.215109+00,2024-01-22 23:58:04.575341+00,https://docs.rs/uncased/0.9,,https://github.com/SergioBenitez/uncased,285395
wasm-encoder,31772206,A low-level WebAssembly encoder. ,2020-11-23 20:27:48.649675+00,2025-09-09 16:43:49.931866+00,https://docs.rs/wasm-encoder,https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wasm-encoder,https://github.com/bytecodealliance/wasm-tools/tree/main/crates/wasm-encoder,315525
findshlibs,31634070,Find the set of shared libraries loaded in the current process with a cross platform API,2016-11-24 02:19:19.091031+00,2021-11-11 03:11:23.544215+00,https://docs.rs/findshlibs,,https://github.com/gimli-rs/findshlibs,7348
primitive-types,31610508,Primitive types shared by Ethereum and Substrate,2018-12-02 14:06:43.175988+00,2025-09-19 09:56:51.496269+00,,https://github.com/paritytech/parity-common,https://github.com/paritytech/parity-common,99663
parity-scale-codec,31599226,SCALE - Simple Concatenating Aggregated Little Endians,2019-07-17 16:50:03.458892+00,2025-05-20 11:07:30.721787+00,,,https://github.com/paritytech/parity-scale-codec,149695
rdrand,31574028,An implementation of random number generator based on rdrand and rdseed instructions,2014-12-19 20:08:48.552923+00,2023-12-17 18:13:00.776932+00,https://docs.rs/rdrand/0.8.2/,,https://github.com/nagisa/rust_rdrand/,607
fuchsia-cprng,31521854,Rust crate for the Fuchsia cryptographically secure pseudorandom number generator,2019-01-24 22:37:56.232806+00,2019-02-05 19:31:52.132087+00,,,https://fuchsia.googlesource.com/fuchsia/+/master/garnet/public/rust/fuchsia-cprng,110514
byte-slice-cast,31511946,Safely cast bytes slices from/to slices of built-in fundamental numeric types,2017-08-14 17:40:06.948815+00,2025-03-03 10:02:39.494851+00,,,https://github.com/sdroege/bytes-num-slice-cast,27511
version-compare,31500037,"Rust library to easily compare version numbers with no specific format, and test against various ...",2017-03-13 15:02:45.354297+00,2024-03-16 11:36:15.494048+00,https://docs.rs/version-compare,https://timvisee.com/projects/version-compare/,https://gitlab.com/timvisee/version-compare,8964
vte,31498598,Parser for implementing terminal emulators,2016-09-18 00:27:19.46139+00,2025-02-02 16:23:10.564882+00,https://docs.rs/vte/,,https://github.com/alacritty/vte,6532
smartstring,31463172,Compact inlined strings,2020-05-15 20:47:14.005767+00,2022-03-24 18:30:52.44179+00,http://docs.rs/smartstring,,https://github.com/bodil/smartstring,242167
base-x,31389303,Encode/decode any base,2016-03-30 20:16:02.348858+00,2022-06-24 12:54:18.725133+00,,https://github.com/OrKoN/base-x-rs,https://github.com/OrKoN/base-x-rs,4626
rocksdb,31336195,Rust wrapper for Facebook's RocksDB embeddable database,2014-11-29 07:22:18.358594+00,2025-08-10 19:48:27.380717+00,,https://github.com/rust-rocksdb/rust-rocksdb,https://github.com/rust-rocksdb/rust-rocksdb,427
librocksdb-sys,31294119,Native bindings to librocksdb,2016-11-13 18:53:04.302098+00,2025-08-10 19:45:04.465796+00,,,https://github.com/rust-rocksdb/rust-rocksdb,7241
rpassword,31258824,Read passwords in console applications.,2015-02-11 15:15:30.055223+00,2025-04-20 14:56:12.930796+00,https://docs.rs/rpassword/,https://github.com/conradkleinespel/rpassword,https://github.com/conradkleinespel/rpassword,1382
warp,31248074,serve the web at warp speeds,2018-03-29 17:38:58.215096+00,2025-08-19 18:07:02.955354+00,https://docs.rs/warp,,https://github.com/seanmonstar/warp,58098
secp256k1-sys,31233811,FFI for Pieter Wuille's `libsecp256k1` library.,2019-12-10 20:45:37.791441+00,2025-07-08 22:17:46.579692+00,https://docs.rs/secp256k1-sys/,https://github.com/rust-bitcoin/rust-secp256k1/,https://github.com/rust-bitcoin/rust-secp256k1/,188309
r-efi,31206468,UEFI Reference Specification Protocol Constants and Definitions,2018-12-10 12:27:07.237829+00,2025-06-17 09:12:38.227277+00,,https://github.com/r-efi/r-efi/wiki,https://github.com/r-efi/r-efi,101112
curl,31012859,Rust bindings to libcurl for making HTTP requests,2014-12-16 19:54:14.189051+00,2025-08-12 19:26:00.378736+00,https://docs.rs/curl,https://github.com/alexcrichton/curl-rust,https://github.com/alexcrichton/curl-rust,574
document-features,30889321,Extract documentation for the feature flags from comments in Cargo.toml,2022-02-01 16:47:37.171802+00,2025-02-16 10:01:46.849072+00,,https://slint.rs,https://github.com/slint-ui/document-features,525277
utf8-width,30873019,To determine the width of a UTF-8 character by providing its first byte.,2020-06-25 01:03:45.53494+00,2023-11-20 14:39:07.295376+00,,https://magiclen.org/utf8-width,https://github.com/magiclen/utf8-width,257735
aws-smithy-checksums,30842186,Checksum calculation and verification callbacks,2022-07-20 17:56:38.899689+00,2025-08-28 23:27:54.591378+00,,,https://github.com/smithy-lang/smithy-rs,629004
salsa20,30826119,Pure Rust implementation of the Salsa20 stream cipher,2016-10-06 21:07:38.107611+00,2025-09-02 22:54:29.887258+00,https://docs.rs/salsa20,,https://github.com/RustCrypto/stream-ciphers,6753
xxhash-rust,30714472,Implementation of xxhash,2020-10-15 20:12:33.324732+00,2024-12-30 00:30:43.667195+00,,,https://github.com/DoumanAsh/xxhash-rust,300207
humansize,30712708,A configurable crate to easily represent sizes in a human-readable format.,2016-11-19 22:29:40.728514+00,2022-12-31 12:31:58.698587+00,https://docs.rs/humansize,https://github.com/LeopoldArkham/humansize,https://github.com/LeopoldArkham/humansize,7311
arrow,30604721,Rust implementation of Apache Arrow,2018-03-29 04:49:37.317255+00,2025-09-23 13:22:46.822317+00,,https://github.com/apache/arrow-rs,https://github.com/apache/arrow-rs,58018
bitmaps,30588567,Fixed size boolean arrays,2019-09-06 16:14:56.535961+00,2024-02-01 19:11:58.66657+00,http://docs.rs/bitmaps,,https://github.com/bodil/bitmaps,162820
pico-args,30454645,An ultra simple CLI arguments parser.,2019-07-21 18:38:09.093586+00,2022-06-04 12:11:35.198777+00,https://docs.rs/pico-args/,,https://github.com/RazrFalcon/pico-args,150599
enum_dispatch,30373521,Near drop-in replacement for dynamic-dispatched method calls with up to 10x the speed,2018-12-17 16:24:59.613823+00,2024-03-28 16:25:44.789544+00,,,https://gitlab.com/antonok/enum_dispatch,102371
parity-scale-codec-derive,30205571,Serialization and deserialization derive macro for Parity SCALE Codec,2019-07-17 16:49:43.15146+00,2025-05-20 11:07:20.198816+00,,,https://github.com/paritytech/parity-scale-codec,149694
zopfli,30157764,A Rust implementation of the Zopfli compression algorithm.,2016-03-09 17:30:12.561057+00,2025-04-18 13:36:47.361779+00,,https://github.com/zopfli-rs/zopfli,https://github.com/zopfli-rs/zopfli,4412
validator,30032089,"Common validation functions (email, url, length, ...) and trait - to be used with `validator_derive`",2016-12-28 02:54:16.372547+00,2025-01-20 11:40:45.543454+00,,https://github.com/Keats/validator,https://github.com/Keats/validator,7807
